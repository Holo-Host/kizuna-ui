{"version":3,"sources":["connection/types.ts","utils/helpers.ts","redux/error/actions.ts","redux/group/types.ts","redux/commons/types.ts","redux/p2pmessages/types.ts","redux/contacts/types.ts","components/Chat/style.module.css","app/GroupChat/GroupChatDetails/style.module.css","components/MessageInput/ReplyView/style.module.css","app/Profile/style.module.css","redux/profile/types.ts","components/Slides/style.module.css","components/PinnedMessages/style.module.css","redux/p2pmessages/actions/sendMessage.ts","components/Gif/GifKeyboard/style.module.css","components/UpdateAvatar/style.module.css","redux/p2pmessages/actions/helpers/transformZomeDateToUIData.ts","redux/preference/types.ts","connection/constants.ts","components/Chat/ReplyTo/style.module.css","components/VideoPlayer/VideoPlayerModal/style.module.css","app/LanguageSelector/style.module.css","redux/gif/types.ts","redux/error/types.ts","redux/p2pmessages/actions/getPreviousMessages.ts","app/NewConversation/style.module.css","containers/ReduxContainer.tsx","redux/contacts/reducer.ts","redux/group/reducer.ts","redux/preference/reducer.ts","redux/profile/reducer.ts","redux/p2pmessages/reducer.ts","redux/language/reducer.ts","redux/error/reducer.ts","redux/gif/reducer.ts","redux/reducers.ts","redux/store.ts","components/VideoPlayer/Controls/style.module.css","app/GroupChat/GroupChatDetails/Members/style.module.css","app/Register/style.module.css","connection/holochainClient.ts","redux/p2pmessages/actions/getPinnedMessages.ts","redux/p2pmessages/actions/appendMessage.ts","components/AgentIdentifier/style.module.css","components/Chat/File/FileView/style.module.css","components/ImageCropper/style.module.css","app/Login/style.module.css","components/Input/HomeInput/style.module.css","redux/p2pmessages/actions/setMessages.ts","redux/p2pmessages/actions/appendReceipt.ts","redux/p2pmessages/actions/signals/recommitMessage.ts","redux/language/types.ts","components/Menu/style.module.css","components/Chat/File/ImageView/ImageModal/style.module.css","app/Chat/style.module.css","app/Chat/ChatDetails/style.module.css","app/GroupChat/style.module.css","app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberHeader/style.module.css","app/Landing/style.module.css","components/Identicon/style.module.css","components/Chat/ChatPopover/style.module.css","components/VideoPlayer/style.module.css","components/Chat/File/VideoView/style.module.css","components/Chat/Typing/style.module.css","components/MessageInput/FileView/style.module.css","components/MessageInput/style.module.css","redux/p2pmessages/actions/isTyping.ts","redux/p2pmessages/actions/pinMessage.ts","components/ProfileInfo/style.module.css","components/Search/style.module.css","app/GroupChat/GroupChatDetails/Members/AddMemberModal/style.module.css","components/Conversation/style.module.css","app/NewConversation/SelectedContactsHeader/style.module.css","components/Spinner/style.module.css","components/ContactList/style.module.css","app/Blocked/EmptyBlocked/style.module.css","components/Chat/ChatList/style.module.css","components/Chat/File/ImageView/style.module.css","components/Chat/Text/style.module.css","components/Chat/MessageTimestamp/style.module.css","redux/p2pmessages/actions/readMessage.ts","app/Contacts/style.module.css","app/Contacts/EmptyContacts/style.module.css","app/Conversations/EmptyConversations/style.module.css","app/Conversations/style.module.css","app/Home/style.module.css","app/NewConversation/NewConversationHeader/style.module.css","app/Profile/ProfilePopover/style.module.css","app/Settings/style.module.css","app/Auth/style.module.css","redux/group/actions/signals/addedToGroup.ts","redux/group/actions/signals/groupMessageData.ts","redux/group/actions/signals/groupMessageRead.ts","redux/group/actions/signals/groupTypingDetail.ts","redux/p2pmessages/actions/signals/receiveP2PMessage.ts","redux/p2pmessages/actions/signals/receiveP2PReceipt.ts","redux/p2pmessages/actions/signals/receiveP2PPin.ts","redux/p2pmessages/actions/signals/typingP2P.ts","redux/group/actions/signals/pinMessageData.ts","redux/signal/actions.ts","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","components/Spinner/index.tsx","redux/profile/actions/createProfile.ts","redux/profile/actions/getMyProfile.ts","redux/profile/actions/searchProfiles.ts","redux/profile/actions/logout.ts","components/Identicon/index.tsx","components/Menu/index.tsx","redux/group/actions/helpers/index.ts","components/AgentIdentifier/index.tsx","components/ContactList/ContactItem/index.tsx","components/ContactList/IndexSection/index.tsx","components/ContactList/index.tsx","app/Blocked/EmptyBlocked/index.tsx","app/Blocked/index.tsx","components/Chat/ChatList/index.tsx","components/Chat/ChatPopover/index.tsx","redux/group/actions/addMembers.ts","redux/group/actions/createGroup.ts","redux/group/actions/getBadgeCount.ts","redux/group/actions/getLatestGroupVersion.ts","redux/group/actions/getPreviousGroupMessages.ts","redux/group/actions/getMessagesByGroupByTimestamp.ts","redux/group/actions/getMessagesWithProfile.ts","redux/group/actions/indicateGroupTyping.ts","redux/group/actions/readGroupMessage.ts","redux/group/actions/removeMembers.ts","redux/group/actions/sendGroupMessage.ts","redux/group/actions/setErrGroupMessage.ts","redux/group/actions/sendInitialGroupMessage.ts","redux/group/actions/removeErrGroupMessage.ts","redux/group/actions/setFilesBytes.ts","redux/group/actions/updateGroupName.ts","redux/group/actions/updateGroupAvatar.ts","redux/p2pmessages/actions/getFileBytes.ts","components/Chat/File/FileView/index.tsx","components/Chat/File/ImageView/ImageModal/index.tsx","components/Chat/File/ImageView/index.tsx","components/VideoPlayer/Controls/index.tsx","components/VideoPlayer/VideoPlayerModal/index.tsx","components/VideoPlayer/index.tsx","components/Chat/File/VideoView/index.tsx","components/Chat/File/index.tsx","components/Chat/ReplyTo/index.tsx","components/Chat/Text/index.tsx","components/Chat/Me/index.tsx","components/Chat/MessageTimestamp/index.tsx","components/Chat/Others/index.tsx","components/Chat/index.tsx","components/Chat/Typing/index.tsx","containers/ToastContainer/context.ts","components/MessageInput/EndButtons/index.tsx","components/MessageInput/FileView/index.tsx","components/MessageInput/ReplyView/index.tsx","redux/gif/actions/getGifs.ts","redux/gif/actions/setGifs.ts","redux/gif/actions/getCategories.ts","redux/gif/actions/setCategories.ts","components/Gif/GifKeyboard/index.tsx","redux/gif/actions/getGifsState.ts","components/MessageInput/index.tsx","redux/contacts/actions/addContact.ts","redux/contacts/actions/blockContact.ts","redux/contacts/actions/fetchMyContacts.ts","redux/contacts/actions/removeContact.ts","redux/contacts/actions/unblockContact.ts","redux/p2pmessages/actions/removeErrMessage.ts","redux/p2pmessages/actions/setErrMessage.ts","app/Chat/ChatHeader.tsx","app/Chat/ChatContent.tsx","redux/p2pmessages/actions/helpers/getP2PState.ts","app/Chat/ChatDetails/ContactHeader/index.tsx","app/Chat/ChatDetails/SegmentTabs/index.tsx","components/Slides/MediaBox/index.tsx","components/Slides/FileBox/index.tsx","components/ProfileInfo/index.tsx","app/Chat/ChatDetails/index.tsx","components/DatePicker/index.tsx","components/Search/index.tsx","app/Chat/ChatSearch/index.tsx","redux/p2pmessages/actions/getMessagesByAgentByTimestamp.ts","components/PinnedMessages/index.tsx","app/Chat/ChatPinnedMessages/index.tsx","app/Chat/index.tsx","redux/group/actions/fetchPinnedMessages.ts","redux/group/actions/pinMessage.ts","redux/group/actions/unpinMessage.ts","app/GroupChat/ChatBox/index.tsx","app/GroupChat/GroupChatHeader.tsx","app/GroupChat/GroupChatContent.tsx","components/ImageCropper/CropPopover.tsx","components/ImageCropper/index.tsx","app/GroupChat/GroupChatDetails/EndButtons/index.tsx","app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberHeader/index.tsx","app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberItem/index.tsx","app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberIndex/index.tsx","app/GroupChat/GroupChatDetails/Members/AddMemberModal/index.tsx","app/GroupChat/GroupChatDetails/Members/index.tsx","app/GroupChat/GroupChatDetails/SegmentTabs/index.tsx","app/GroupChat/GroupChatDetails/UpdateGroupName/index.tsx","app/GroupChat/GroupChatDetails/index.tsx","app/GroupChat/GroupPinnedMessages/index.tsx","redux/group/actions/getPinnedMessages.ts","redux/group/actions/fetchMembers.ts","app/GroupChat/GroupSearch/index.tsx","app/GroupChat/index.tsx","components/Toolbar/index.tsx","app/Contacts/AddContact/AddContactFAB.tsx","app/Contacts/AddContact/AddContactHeader.tsx","app/Contacts/AddContact/AddContactItem.tsx","app/Contacts/AddContact/AddContactIndex.tsx","app/Contacts/AddContact/AddContactModal.tsx","app/Contacts/EmptyContacts/index.tsx","app/Contacts/index.tsx","components/Conversation/index.tsx","redux/p2pmessages/actions/countUnread.ts","app/Conversations/EmptyConversations/index.tsx","app/Conversations/index.tsx","app/Home/index.tsx","app/NewConversation/context.ts","app/NewConversation/ContactList/ContactItem.tsx","app/NewConversation/ContactList/IndexSection.tsx","app/NewConversation/ContactList/index.tsx","app/NewConversation/NewConversationHeader/index.tsx","app/NewConversation/SelectedContactsHeader/index.tsx","app/NewConversation/index.tsx","redux/profile/actions/updateAvatar.ts","app/Profile/ProfilePopover/index.tsx","app/Profile/ProfileMenuItems/index.tsx","app/Profile/index.tsx","redux/language/actions/setLanguage.ts","app/Settings/LanguageDropdown/index.tsx","redux/preference/actions/setPreference.ts","app/Settings/Preference/index.tsx","app/Settings/SettingsHeader/index.tsx","app/Settings/index.tsx","app/Authenticated/index.tsx","redux/commons/actions.ts","app/Landing/index.tsx","app/Login/index.tsx","components/Input/HomeInput/index.tsx","components/UpdateAvatar/index.tsx","app/Register/index.tsx","utils/regex.ts","app/Unauthenticated/index.tsx","app/Auth/index.tsx","app/index.tsx","containers/ErrorHandlerContainer.tsx","app/LanguageSelector/index.tsx","lang/index.ts","containers/IntlContainer.tsx","containers/IonicContainer.tsx","containers/RouterContainer.tsx","containers/ToastContainer/index.tsx","containers/index.tsx","index.tsx"],"names":["ZOMES","USERNAME","PROFILES","PREFERENCE","P2PMESSAGE","CONTACTS","GROUP","AGGREGATOR","SIGNALS","ADDED_TO_GROUP","GROUP_MESSAGE_DATA","GROUP_TYPING_DETAIL","GROUP_MESSAGE_READ","PIN_MESSAGE_DATA","RECEIVE_P2P_MESSAGE","RECEIVE_P2P_RECEIPT","SYNC_P2P_PINS","TYPING_P2P","POST_COMMIT_ERROR_COMMIT_MESSAGE","POST_COMMIT_ERROR_COMMIT_RECEIPT","FUNCTIONS","SET_USERNAME","GET_USERNAMES","GET_ALL_USERNAMES","GET_AGENT_PUBKEY_FROM_USERNAME","GET_MY_USERNAME","CREATE_PROFILE","SEARCH_PROFILES","GET_AGENT_PROFILE","GET_AGENTS_PROFILES","GET_MY_PROFILE","GET_ALL_PROFILES","UPDATE_PROFILE","ADD_CONTACTS","REMOVE_CONTACTS","BLOCK_CONTACTS","UNBLOCK_CONTACTS","LIST_ADDED","LIST_BLOCKED","IN_CONTACTS","IN_BLOCKED","GET_PREFERENCE","SET_PREFERENCE","SET_PER_AGENT_PREFERENCE","GET_PER_AGENT_PREFERENCE","SET_PER_GROUP_PREFERENCE","GET_PER_GROUP_PREFERENCE","CREATE_GROUP","ADD_MEMBERS","REMOVE_MEMBERS","UPDATE_GROUP_NAME","UPDATE_GROUP_AVATAR","SEND_MESSAGE","GET_ALL_MY_GROUPS","GET_PREVIOUS_GROUP_MESSAGES","GET_SUBSEQUENT_GROUP_MESSAGES","GET_ADJACENT_GROUP_MESSAGES","GET_MESSAGES_BY_GROUP_BY_TIMESTAMP","GET_GROUP_LATEST_VERSION","INDICATE_GROUP_TYPING","READ_GROUP_MESSAGE","GET_FILES_BYTES","PIN_MESSAGE","UNPIN_MESSAGE","FETCH_PINNED_MESSAGES","RETRIEVE_LATEST_DATA","SEND_MESSAGE_WITH_TIMESTAMP","COMMIT_MESSAGE_TO_RECEIVER","GET_LATEST_MESSAGES","GET_MESSAGES_BY_AGENT_BY_TIMESTAMP","GET_PREVIOUS_MESSAGES","GET_ALL_MESSAGES","READ_MESSAGE","GET_FILE_BYTES","TYPING","GET_PINNED_MESSAGES","GET_NEXT_MESSAGES","GET_ADJACENT_MESSAGES","objectMap","object","mapFn","keyFn","Object","keys","reduce","result","key","newKey","monthToString","month","intl","formatMessage","id","dateToString","date","year","getUTCFullYear","rawMonth","getMonth","rawDate","getDate","day","stringToDate","stringDate","split","rawDay","charAt","substring","Date","UTC","parseInt","indexContacts","contacts","indexedContacts","sortedContacts","sort","a","b","username","toLocaleLowerCase","localeCompare","length","forEach","contact","currChar","currArr","undefined","push","useAppDispatch","useDispatch","deserializeAgentPubKey","agentPubKey","Buffer","from","deserializeHash","buffer","convertSizeToReadableSize","size","toFixed","timestampToDate","timestamp","dateToTimestamp","getTime","isTextPayload","payload","type","usePressHandlers","onLongPress","onClick","shouldPreventDefault","delay","useState","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","useCallback","event","addEventListener","preventDefault","passive","current","persist","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","isTouchEvent","touches","binaryToUrl","hash","URL","createObjectURL","Blob","pushError","errorType","errorTypeProps","dispatch","PUSH_ERROR","error","options","shiftError","getState","errors","shift","SHIFT_ERROR","ADD_GROUP","SET_GROUP_MESSAGE","SET_GROUP_MESSAGES","SET_ERR_GROUP_MESSAGE","SET_LATEST_GROUP_STATE","SET_FILES_BYTES","SET_GROUP_TYPING_INDICATOR","SET_GROUP_READ_MESSAGE","SET_PINNED_MESSAGES","SET_CONVERSATIONS","isOther","isImage","isVideo","isP2PMessage","message","p2pMessageEntryHash","SET_MESSAGES","SET_RECEIPTS","SET_ERR_MESSAGE","SET_FILES","SET_TYPING","SET_PINNED","SET_CONTACTS","SET_BLOCKED","module","exports","SET_PROFILE","processSentData","returnValue","contactsState","profile","messageID","messageHash","serializeHash","fileName","metadata","fileSize","fileType","fileHash","thumbnail","profileList","transformedReplyTo","replyToPayload","replyTo","author","receiver","timeSent","receipts","receipt","file","sendMessage","callZome","retry","textPayload","trim","payloadInput","filePayload","fileBytes","input","reply_to","zomeName","fnName","sentMessage","dispatchState","p2pFile","appendMessage","includes","retriedSend","console","log","transformZomeDataToUIData","zomeResults","values","zomeConversations","zomeMessages","zomeReceipts","transformedConversations","entries","conversation","messages","pinned","transformedMesssages","value","receiptArray","p2pMessage","transformedReceipts","statusTuple","status","p2preceipt","p2pMessageReceiptEntryHash","p2pMessageEntryHashes","conversations","files","typing","errMsgs","ENV","process","appId","appUrl","REACT_APP_CHAPERONE_PORT","isHoloEnv","SET_GIFS","SET_CATEGORIES","getPreviousMessages","conversant","batch_size","payload_type","last_fetched_timestamp","last_fetched_message_id","zome_input","nextBatchOfMessages","fields","toDispatch","setMessages","store","initialState","blocked","reducer","state","action","groupFiles","members","pinnedMessages","filesBytes","readReceipt","typingIndicator","agentReadReceipt","agentTypingIndicator","groupReadReceipt","groupTypingIndicator","preference","nickname","language","SET_LANGUAGE","localStorage","setItem","errorReducer","curr","gifs","categories","currentState","rootReducer","combineReducers","profileReducer","contactsReducer","preferenceReducer","groups","groupReducer","p2pmessages","p2pmessagesReducer","languageReducer","gif","gifReducer","createStore","args","modifiedThunk","thunk","withExtraArgument","getAgentId","client","init","create","applyMiddleware","ReduxContainer","children","global","COMB","window","require","signalHandler","signal","handleSignal","data","name","createClient","env","branding","logo_url","app_name","skip_registration","WebSdkClient","connection","ready","signIn","appInfo","cell_data","Error","JSON","stringify","cellData","cell_id","Uint8Array","holoClient","HoloClient","addSignalHandler","AppWebsocket","connect","appWs","installed_app_id","HolochainClient","cellId","info","warn","backOff","count","waitTime","Math","random","Promise","resolve","config","max_retries","retryCount","callFailed","exec","function","getPinnedMessages","conversantID","receiptHash","existing","Set","concat","appendReceipt","recommitMessage","isTyping","agent","_getState","pinMessage","hashes","map","conversants","message_hashes","pin","pinStatus","pinnedMessage","index","indexOf","splice","readMessage","now","sender","readReceiptMap","messageIDs","p2pReceipt","addedToGroup","signalPayload","myAgentId","groupData","originalGroupId","groupId","originalGroupRevisionId","groupRevisionId","latestName","member","createdAt","created","creator","avatar","groupMembers","membersProfile","nonAddedProfiles","res","memberProfile","pubkey","nonAddedProfilesB64","nonAddedProfile","agentProfile","agent_pub_key","groupEntryHash","newConversation","handleGroupMessagePayload","groupMessageData","groupMessage","groupMessageId","messageId","groupHash","content","readList","groupConversation","currMessages","messageIds","newMessage","groupMessageRead","messagesArrived","filter","reader","fetchProfile","indicatedBy","fetchedProfile","groupTypingDetail","groupIdB64","groupTyping","memberId","currTypers","GroupTypingDetail","receiveP2PMessage","receivedMessage","messageTuple","receiptTuple","receiptID","messagePayload","receiveP2PReceipt","syncP2PPin","pinHash","pinMessages","me","pinstatus","typingP2P","agentHash","is_typing","pinMessageData","groupMessageHash","receiveP2PPin","webpackAsyncContext","req","__webpack_require__","o","then","code","ids","Spinner","props","className","styles","spinner","createProfile","image","myAgentIdB64","getMyProfile","searchProfiles","nicknamePrefix","_dispatch","nickname_prefix","filteredMappedProfiles","v","logout","c","signOut","location","reload","Identicon","canvas","opts","useEffect","renderIcon","src","alt","ref","width","height","Menu","history","useHistory","useSelector","useIntl","menu","menuList","label","icon","cogOutline","banOutline","open","warningOutline","logOutOutline","disabled","handleOnClick","close","pathname","prev","contentId","lines","container","convertFetchedResToGroupMessagesOutput","fetchedRes","messagesByGroup","message_ids","message_id","groupMessagesContents","msg_content","convertedReadList","groupMessageElement","signedHeader","header","entry_hash","entry","convertPayload","fetchUsernameOfMembers","myProfile","undefinedProfiles","membersUsernames","undefinedProfilesB64","undefinedProfile","AgentIdentifier","charToShow","displayId","displayAvatar","displayNickname","noSpace","trimmedId","slice","renderAvatar","numOfChar","renderId","ContactItem","displayMsgBtn","slot","chatboxOutline","informationCircleOutline","IndexSection","char","Fragment","ContactsList","EmptyBlocked","happyOutline","Blocked","arrowBackSharp","ChatList","onScrollTop","onScrollBottom","arrChildren","React","Children","toArray","scroll","infiniteScroll","infiniteScrollBottom","elements","child","i","isValidElement","showProfilePicture","space","showName","showDate","hasRead","prevChild","prevChildProps","prevTimestamp","getFullYear","assess","toDateString","formatDate","cloneElement","isSeen","scrollIntoView","behavior","complete","completeBottom","useImperativeHandle","scrollToBottom","list","getBoundingClientRect","parentNode","chat","threshold","position","onIonInfinite","loadingSpinner","forwardRef","ChatPopover","onPin","onReply","onDelete","isPinned","onRetry","onHide","err","button","gitCompareOutline","closeCircleOutline","arrowUndoOutline","addMembers","updateGroupMembersData","addMembersOutput","membersBase64","updateGroupMembersDataFromRes","createGroup","createGroupInput","createGroupRes","getBadgeCount","allGroupMessages","getLatestGroupVersion","latestGroupVersionRes","batchSize","payloadType","groupMessagesRes","groupPinnedMessages","groupMessagesOutput","getPreviousGroupMessages","lastFetched","lastMessageTimestamp","groupConversations","Array","getMessagesByGroupByTimestamp","getMessagesWithProfile","messageBundles","authorProfile","x","y","indicateGroupTyping","groupTypingDetailData","readGroupMessage","groupMessageReadData","removeMembers","removeMembersOutput","removedMembers","setGroupMessage","sendGroupMessageOutput","fetchedFileBytes","setFilesBytes","groupMessageDataConverted","newFile","handleError","sendGroupMessage","setErrGroupMessage","errMsg","msg","replyToId","allErrMessages","groupErrMessages","sendInitialGroupMessage","join","groupResult","inputs","filePayloadInput","messageResults","removeErrGroupMessage","stringified","fetchFilesBytes","fileHashes","fileId","updateGroupName","updateGroupNameData","updateGroupNameOutput","updateGroupNameDataFromRes","updateGroupAvatar","updateGroupAvatarData","updateGroupAvatarOutput","getFileBytes","inputHashes","fetchedFiles","transformedFiles","File","onDownload","darken","assign","blob","link","document","createElement","href","download","click","documentOutline","ImageModal","onDismiss","footer","setLength","isOpen","popover","setPopover","toolbar","arrowBack","ellipsisVerticalOutline","style","innerWidth","innerHeight","onDidDismiss","Image","useIonModal","dismiss","present","maxHeight","setMaxHeight","onIonImgDidLoad","cssClass","Controls","video","isPlaying","duration","hasError","onPlayPauseErrorHandler","isPlatform","visible","setVisible","isLoading","setIsLoading","resetTimeout","handleOnDoubleClick","onPlayPause","pause","play","onMouseEnter","controls","opacity","onChange","min","max","expand","expandOutline","VideoPlayerModal","currentTime","setCurrentTime","isControlVisible","setIsControlVisible","setIsPlaying","setHasError","errorHandler","onError","autoPlay","onTimeUpdate","onPlay","onPause","loop","step","VideoPlayer","onDoubleClick","isNaN","poster","Video","renderVideo","useMemo","chatType","decoder","TextDecoder","ImageView","decode","VideoView","setErrorState","renderFile","ReplyTo","isText","Text","RegExp","test","Me","onPinMessage","loading","setLoading","nativeEvent","useIonPopover","pressHandlers","isP2P","fileMaxWidth","common","bubble","formatTime","checkmarkDoneCircle","radioButtonOff","checkmarkCircleOutline","picture","color","marginLeft","alertCircleOutline","MessageTimestamp","onSeen","observerStorage","root","querySelector","rootMargin","isComplete","setIsComplete","disconnect","IntersectionObserver","observe","Others","show","marginRight","Chat","Typing","profiles","others","remaining","user","names","limit","displayNames","dot","animationDelay","ToastContext","createContext","showToast","dismissToast","showErrorToast","useToast","context","useContext","EndButtons","onSend","send","FileView","setFiles","handleClose","currFiles","row","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","chip","closeCircle","ReplyView","messageState","setMessage","reply","column","text","documentsOutline","displayPayload","getGifs","searchTerm","pos","locale","reject","searchUrl","baseUrl","xmlHttp","XMLHttpRequest","onload","readyState","responseObjects","parse","responseText","top","next","fetchedGifs","onerror","getCategories","fetchedCategories","GifKeyboard","onSelect","searchText","setSearchText","selectedGif","setSelectedGif","setCategories","showCategories","setShowCategories","setGifs","setNext","expanded","setExpanded","resetSearchText","onChangeCallback","infiniteGifScroll","keyboardcontainer","fill","onIonChange","detail","debounce","chevronDownOutline","chevronUpOutline","gifcontainerexpanded","gifcontainer","images","category","textholder","searchterm","categorytext","replace","toUpperCase","categorypreview","gifpreview","url","media","title","tinygif","preview","nanogif","handleOnScrollBottom","MessageInput","onFileSelect","isReply","setIsReply","onComposition","setOnComposition","showGifs","setShowGifs","onFileSelectCallback","onGifSelectCallback","reset","handleComposition","onKeyDown","shiftKey","renderFileView","attachOutline","autoGrow","placeholder","el","hidden","FileList","arrayBuffer","arrBuffer","determineFileType","encoder","TextEncoder","FileReader","readAsDataURL","readerEvent","encoded","encode","final","BASE_64","snapImage","videoWidth","videoHeight","getContext","drawImage","toDataURL","success","img","getElementsByTagName","appendChild","revokeObjectURL","byteCharacters","atob","byteNumbers","charCodeAt","uArr","timeUpdate","preload","muted","addContact","blockContact","fetchMyContacts","idsB64","removeContact","unblockContact","removeErrMessage","errMessages","setErrorMessage","allErrMsgs","thisErrMsgs","ChatMenuItems","search","ChatHeader","useParams","setReplyTo","messagesWithConversant","setMessagesWithConversant","messageReceipts","setMessageReceipts","disableGetPrevious","setDisableGetPrevious","allTypingProfiles","useLocation","rootState","scrollerRef","didMountRef","receiptsTimeout","inputTimeout","messageInputRef","filteredMessages","filteredReceipts","receiptTimestampA","receiptTimestampB","filteredMessage","getP2PState","onDownloadHandler","downloadFile","displayMessage","messageBundle","replyToData","readlist","onRetryHandler","currMessageReceipts","onSeenHandler","lastMessage","handleOnScrollTop","opt","message2","handleOnChange","ContactHeader","titlebar","SegmentTabs","onSegmentChange","FileBox","orderedMediaMessages","infiniteFileScroll","currentMonth","renderMonth","renderPayload","mediadiv","mediarow","mediacard","orderedFileMessages","ProfileInfo","ChatDetails","orderedMedia","orderedFiles","fileMessageHashes","currentSegment","setCurrentSegment","slideRef","handleDownload","handleScrollToBottom","earliestMediaOrFile","earliest","slideTo","pager","initialSlide","speed","onIonSlideDidChange","segmentValues","getActiveIndex","currentIndex","MediaBox","earliestMedia","earliestFile","DatePicker","isVisible","setDate","dateRef","display","newDate","Search","prevHref","onDateSelect","datePicker","msgs","setMsgs","handleSearchByDate","handleOnDownload","arrowBackOutline","calendar","ChatSearch","messagesByDate","transformed","getMessagesByAgentByTimestamp","searchResults","latestReceipt","reverse","PinnedMessages","onMessageClick","displayFile","blobFileBytes","ChatPinnedMessage","path","exact","ChatContent","component","ChatPinnedMessages","fetchPinnedMessages","rawResultArr","pinnedMessageIds","raw","rawResult","all","unpinMessage","ChatBox","chatList","stateMessages","messagesReceipt","setMessagesReceipt","oldestFetched","setOldestFetched","readData","setReadData","first","readListData","item","flat","handleOnRetry","currReadData","handleOnSeen","GroupChatMenuList","pinOutline","GroupChatHeader","peopleCircleOutline","GroupChat","group","setIsTyping","messageInput","Item","CropPopover","ImageCropper","prevPath","onComplete","aspect","crop","setCrop","binary","setBinary","imageContainer","setStyle","percentage","naturalWidth","naturalHeight","currCrop","newCrop","dismissP","cropRef","circularCrop","imageStyle","objectFit","keepSelection","imageRef","scaleX","scaleY","ctx","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","toBlob","getCroppedImg","onClickEdit","onClickNotif","pencil","AddMemberHeader","onCancel","AddMemberItem","selected","onSelected","AddMemberIndex","AddMemberModal","setMembers","setFilter","setSelected","filterAddedMember","toLowerCase","handleOnSelected","searchedContacts","newMembers","Members","setIsOpen","renderRemoveMemberButton","handleRemoveMembers","removeCircleOutline","peopleOutline","personAddOutline","renderAddMemberButton","isCreator","renderGroupMembers","UpdateGroupName","onSave","setName","modal","clearInput","GroupChatDetails","editGroupName","setEditGroupName","showModal","setShowModal","groupPicture","decodeSrc","handleOnFileChange","goBack","overlay","imageOutline","accept","groupname","newGroupName","handleOnSave","GroupPinnedMessages","setData","pinnedMesssages","authors","authorProfiles","fetchMembers","GroupSearch","GroupChatContent","Toolbar","noSearch","isSearching","setIsSearching","showCancelButton","onIonCancel","AddContactFAB","vertical","horizontal","add","AddContactHeader","AddContactItem","onCompletion","AddContactIndex","AddContactModal","setProfiles","searchKey","filteredProfiles","EmptyContacts","sadOutline","Contacts","setSearch","Conversation","latestMessageDetail","personCircleOutline","conversationName","latestMessage","renderOthersFileMessage","badgeCount","countUnread","unreadCounter","EmptyConversations","Conversations","conversationsArray","groupsState","p2pState","latestMessageId","latestErrMessage","valueOf","constructConversations","HomeTabBar","to","render","tab","chatbox","person","ContactsContext","useContacts","setContacts","setSelectedContacts","currContacts","newContacts","ContactList","perCharContacts","NewConversationHeader","SelectedContactsHeader","onCloseButtonPress","onSearch","recipients","NewConversation","selectedContacts","Provider","fileInputs","updateAvatar","serializedAvatar","updatedFields","ProfilePopover","isContact","setIsContact","isBlocked","setIsBlocked","stringifiedId","personRemoveOutline","ProfileMenuItems","ellipsisVertical","Profile","_isMounted","currProfile","setProfile","setLanguage","languages","LanguageDropdown","selectedLanguage","find","setPreference","Preference","checked","SettingsHeader","Settings","Authenticated","latestData","userInfo","addedContacts","agentId","blockedContacts","globalPreference","latestGroupMessages","memberProfiles","latestP2pMessages","Home","Landing","fullscreen","landing","logo","actions","Login","setUsername","login","form","HomeInput","withError","setWithError","UpdateAvatar","_arrBuffer","default","Register","setNickname","setError","isDisabled","setIsDisabled","profilePicture","handleOnSubmit","cropperBinary","defaultHref","register","onKeyPress","handleOnKeyDown","Unauthenticated","Auth","setErr","bool","setupConfig","mode","App","ErrorHandler","intlMessage","LanguageSelector","page","en","jp","IntlContainer","reducerLanguage","storageLanguage","getItem","defaultLocale","IonicContainer","RouterContainer","ToastContainer","isShowing","setIsShowing","shouldShow","setShouldShow","setProps","isString","string","Container","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1bc64963.chunk.js","sourcesContent":["interface ZomeNameType {\n  [key: string]: string;\n}\n\ninterface FunctionNameType {\n  [key: string]: {\n    [key: string]: string;\n  };\n}\n\ninterface SignalNameType {\n  [key: string]: {\n    [key: string]: string;\n  };\n}\n\nexport const ZOMES: ZomeNameType = {\n  USERNAME: \"username\",\n  PROFILES: \"profiles\",\n  PREFERENCE: \"preference\",\n  P2PMESSAGE: \"p2pmessage\",\n  CONTACTS: \"contacts\",\n  GROUP: \"group\",\n  AGGREGATOR: \"aggregator\",\n};\nexport const SIGNALS: SignalNameType = {\n  [ZOMES.GROUP]: {\n    ADDED_TO_GROUP: \"ADDED_TO_GROUP\",\n    GROUP_MESSAGE_DATA: \"GROUP_MESSAGE_DATA\",\n    GROUP_TYPING_DETAIL: \"GROUP_TYPING_DETAIL\",\n    GROUP_MESSAGE_READ: \"GROUP_MESSAGE_READ\",\n    PIN_MESSAGE_DATA: \"PIN_MESSAGE_DATA\",\n  },\n  [ZOMES.P2PMESSAGE]: {\n    RECEIVE_P2P_MESSAGE: \"RECEIVE_P2P_MESSAGE\",\n    RECEIVE_P2P_RECEIPT: \"RECEIVE_P2P_RECEIPT\",\n    SYNC_P2P_PINS: \"SYNC_P2P_PINS\",\n    TYPING_P2P: \"TYPING_P2P\",\n    POST_COMMIT_ERROR_COMMIT_MESSAGE: \"POST_COMMIT_ERROR_COMMIT_MESSAGE\",\n    POST_COMMIT_ERROR_COMMIT_RECEIPT: \"POST_COMMIT_ERROR_COMMIT_RECEIPT\",\n  },\n};\n\nexport const FUNCTIONS: FunctionNameType = {\n  [ZOMES.USERNAME]: {\n    SET_USERNAME: \"set_username\",\n    GET_USERNAMES: \"get_usernames\",\n    GET_ALL_USERNAMES: \"get_all_usernames\",\n    GET_AGENT_PUBKEY_FROM_USERNAME: \"get_agent_pubkey_from_username\",\n    GET_MY_USERNAME: \"get_my_username\",\n  },\n  [ZOMES.PROFILES]: {\n    CREATE_PROFILE: \"create_profile\",\n    SEARCH_PROFILES: \"search_profiles\",\n    GET_AGENT_PROFILE: \"get_agent_profile\",\n    GET_AGENTS_PROFILES: \"get_agents_profile\",\n    GET_MY_PROFILE: \"get_my_profile\",\n    GET_ALL_PROFILES: \"get_all_profiles\",\n    UPDATE_PROFILE: \"update_profile\",\n  },\n  [ZOMES.CONTACTS]: {\n    ADD_CONTACTS: \"add_contacts\",\n    REMOVE_CONTACTS: \"remove_contacts\",\n    BLOCK_CONTACTS: \"block_contacts\",\n    UNBLOCK_CONTACTS: \"unblock_contacts\",\n    LIST_ADDED: \"list_added\",\n    LIST_BLOCKED: \"list_blocked\",\n    IN_CONTACTS: \"in_contacts\",\n    IN_BLOCKED: \"in_blocked\",\n  },\n  [ZOMES.PREFERENCE]: {\n    GET_PREFERENCE: \"get_preference\",\n    SET_PREFERENCE: \"set_preference\",\n    SET_PER_AGENT_PREFERENCE: \"set_per_agent_preference\",\n    GET_PER_AGENT_PREFERENCE: \"get_per_agent_preference\",\n    SET_PER_GROUP_PREFERENCE: \"set_per_group_preference\",\n    GET_PER_GROUP_PREFERENCE: \"get_per_group_preference\",\n  },\n  [ZOMES.GROUP]: {\n    CREATE_GROUP: \"create_group\",\n    ADD_MEMBERS: \"add_members\",\n    REMOVE_MEMBERS: \"remove_members\",\n    UPDATE_GROUP_NAME: \"update_group_name\",\n    UPDATE_GROUP_AVATAR: \"update_group_avatar\",\n    SEND_MESSAGE: \"send_message\",\n    GET_ALL_MY_GROUPS: \"get_all_my_groups\",\n    GET_PREVIOUS_GROUP_MESSAGES: \"get_previous_group_messages\",\n    GET_SUBSEQUENT_GROUP_MESSAGES: \"get_subsequent_group_messages\",\n    GET_ADJACENT_GROUP_MESSAGES: \"get_adjacent_group_messages\",\n    GET_MESSAGES_BY_GROUP_BY_TIMESTAMP: \"get_messages_by_group_by_timestamp\",\n    GET_GROUP_LATEST_VERSION: \"get_group_latest_version\",\n    INDICATE_GROUP_TYPING: \"indicate_group_typing\",\n    READ_GROUP_MESSAGE: \"read_group_message\",\n    GET_FILES_BYTES: \"get_files_bytes\",\n    PIN_MESSAGE: \"pin_message\",\n    UNPIN_MESSAGE: \"unpin_message\",\n    FETCH_PINNED_MESSAGES: \"get_pinned_messages\",\n  },\n  [ZOMES.AGGREGATOR]: {\n    RETRIEVE_LATEST_DATA: \"retrieve_latest_data\",\n  },\n  [ZOMES.P2PMESSAGE]: {\n    SEND_MESSAGE: \"send_message\",\n    SEND_MESSAGE_WITH_TIMESTAMP: \"send_message_with_timestamp\",\n    COMMIT_MESSAGE_TO_RECEIVER: \"commit_message_to_receiver_chain\",\n    GET_LATEST_MESSAGES: \"get_latest_messages\",\n    GET_MESSAGES_BY_AGENT_BY_TIMESTAMP: \"get_messages_by_agent_by_timestamp\",\n    GET_PREVIOUS_MESSAGES: \"get_previous_messages\",\n    GET_ALL_MESSAGES: \"get_all_messages\",\n    READ_MESSAGE: \"read_message\",\n    GET_FILE_BYTES: \"get_file_bytes\",\n    TYPING: \"typing\",\n    PIN_MESSAGE: \"pin_message\",\n    GET_PINNED_MESSAGES: \"get_pinned_messages\",\n    GET_NEXT_MESSAGES: \"get_next_messages\",\n    GET_ADJACENT_MESSAGES: \"get_adjacent_messages\",\n  },\n};\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\n\nimport { useCallback, useRef, useState } from \"react\";\nimport { IntlShape } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { Payload } from \"../redux/commons/types\";\nimport { IndexedContacts } from \"../redux/contacts/types\";\nimport { Profile } from \"../redux/profile/types\";\nimport { ReduxDispatch } from \"../redux/types\";\n\n/*\n  returns a new object with each value mapped using mapFn(value)\n  optional keyFn if user wants to uniformly edit the keys as well\n*/\nexport const objectMap = (\n  object: any,\n  mapFn: (v: any) => any,\n  keyFn?: (v: string) => string\n): any => {\n  return Object.keys(object).reduce((result: any, key) => {\n    let newKey: string | undefined;\n    if (keyFn) newKey = keyFn(key);\n    newKey\n      ? (result[newKey] = mapFn(object[key]))\n      : (result[key] = mapFn(object[key]));\n    return result;\n  }, {});\n};\n\nexport const monthToString = (month: number, intl: IntlShape) => {\n  switch (month) {\n    case 0:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.1\" })!;\n    case 1:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.2\" })!;\n    case 2:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.3\" })!;\n    case 3:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.4\" })!;\n    case 4:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.5\" })!;\n    case 5:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.6\" })!;\n    case 6:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.7\" })!;\n    case 7:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.8\" })!;\n    case 8:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.9\" })!;\n    case 9:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.10\" })!;\n    case 10:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.11\" })!;\n    case 11:\n      return intl.formatMessage({ id: \"app.group-chat.media.month.12\" })!;\n    default:\n      break;\n  }\n};\n\nexport const dateToString = (date: Date): string => {\n  const year = date.getUTCFullYear();\n  const rawMonth = date.getMonth() + 1;\n  const rawDate = date.getDate();\n\n  const month = rawMonth < 10 ? `0${rawMonth}` : rawMonth;\n  const day = rawDate < 10 ? `0${rawDate}` : rawDate;\n  return `${year}-${month}-${day}`;\n};\n\nexport const stringToDate = (stringDate: string): Date => {\n  const [year, rawMonth, rawDay] = stringDate.split(\"-\");\n  let month = rawMonth,\n    day = rawDay;\n\n  if (rawMonth.charAt(0) === \"0\") {\n    month = rawMonth.substring(1);\n  }\n\n  if (rawDay.charAt(0) === \"0\") {\n    day = rawDay.substring(1);\n  }\n\n  const newDate = new Date(\n    Date.UTC(parseInt(year), parseInt(month) - 1, parseInt(day))\n  );\n\n  return newDate;\n};\n\nexport const indexContacts: (contacts: Profile[]) => IndexedContacts = (\n  contacts\n) => {\n  let indexedContacts: IndexedContacts = {};\n\n  const sortedContacts = contacts.sort((a, b) =>\n    a.username.toLocaleLowerCase().localeCompare(b.username.toLocaleLowerCase())\n  );\n\n  if (sortedContacts.length > 0) {\n    sortedContacts.forEach((contact: Profile) => {\n      const currChar = contact.username.charAt(0).toLocaleLowerCase();\n      let currArr = indexedContacts[currChar];\n\n      if (currArr === undefined) {\n        indexedContacts[currChar] = [];\n        currArr = indexedContacts[currChar];\n      }\n      currArr.push(contact);\n    });\n  }\n\n  return indexedContacts;\n};\n\nexport const debounce: (callback: () => any, delay?: number) => Function = (\n  callback,\n  delay = 500\n) => {\n  let timeout: NodeJS.Timeout;\n  return () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(callback, delay);\n  };\n};\n\nexport const useAppDispatch = () => useDispatch<ReduxDispatch>();\n\nexport const convertCamelToSnake = (arg: string) =>\n  arg.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n\nexport const convertSnakeToCamel = (arg: string) =>\n  arg.replace(/([-_]\\w)/g, (g) => g[1].toUpperCase());\n\nexport const deserializeAgentPubKey = (agentPubKey: string) =>\n  Buffer.from(deserializeHash(agentPubKey).buffer);\n\nexport const convertSizeToReadableSize = (size: number) =>\n  size / 1024 / 1024 >= 1\n    ? `${(size / 1024 / 1024).toFixed(2)}mb`\n    : `${(size / 1024).toFixed(2)}kb`;\n\ntype SearchContacts = (\n  contacts: { [key: string]: Profile },\n  username: string\n) => Profile | undefined;\n\nexport const searchContacts: SearchContacts = (contacts, username) =>\n  Object.values(contacts).find((curr) => username === curr.username);\n\nexport const timestampToDate = (timestamp: number) => {\n  const microseconds = timestamp;\n  const date = new Date(microseconds * 1e-3);\n  return date;\n};\n\nexport const dateToTimestamp = (date: Date) => {\n  // need only one field which is microseconds\n  // Timestamp constructor in hc is from_micros()\n  const milliseconds = date.getTime();\n  const microseconds = milliseconds * 1000;\n  return microseconds;\n};\n\nexport const isTextPayload = (payload: Payload) => payload.type === \"TEXT\";\n\nexport const usePressHandlers = (\n  onLongPress: (event: MouseEvent) => any,\n  onClick: (event: MouseEvent) => any,\n  { shouldPreventDefault = true, delay = 300 } = {}\n) => {\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const timeout = useRef<NodeJS.Timeout>();\n  const target = useRef<HTMLElement>();\n\n  const start = useCallback(\n    (event) => {\n      if (shouldPreventDefault && event.target) {\n        event.target.addEventListener(\"touchend\", preventDefault, {\n          passive: false,\n        });\n        target.current = event.target;\n      }\n      event.persist();\n      timeout.current = setTimeout(() => {\n        onLongPress(event);\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault]\n  );\n\n  const clear = useCallback(\n    (event, shouldTriggerClick = true) => {\n      timeout.current && clearTimeout(timeout.current);\n      shouldTriggerClick && !longPressTriggered && onClick(event);\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener(\"touchend\", preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered]\n  );\n\n  return {\n    onMouseDown: (e: any) => start(e),\n    onTouchStart: (e: any) => start(e),\n    onMouseUp: (e: any) => clear(e),\n    onMouseLeave: (e: any) => clear(e, false),\n    onTouchEnd: (e: any) => clear(e),\n  };\n};\n\nconst isTouchEvent = (event: Event) => {\n  return \"touches\" in event;\n};\n\nconst preventDefault = (event: TouchEvent) => {\n  if (!isTouchEvent(event)) return;\n\n  if (event.touches.length < 2 && event.preventDefault) {\n    event.preventDefault();\n  }\n};\n\nexport const binaryToUrl = (hash: string) =>\n  URL.createObjectURL(\n    new Blob([deserializeHash(hash)], { type: \"image/jpeg\" })\n  );\n","import { ThunkAction } from \"../types\";\nimport { ErrorType, ErrorTypeProps, SHIFT_ERROR, PUSH_ERROR } from \"./types\";\n\nexport const pushError =\n  (\n    errorType: ErrorType,\n    errorTypeProps: ErrorTypeProps,\n    intl?: { id: string; value?: any }\n  ): ThunkAction =>\n  (dispatch) => {\n    if (errorType === \"TOAST\") {\n      dispatch({\n        type: PUSH_ERROR,\n        error: {\n          type: \"TOAST\",\n          options: errorTypeProps,\n          intl,\n        },\n      });\n    }\n  };\n\nexport const shiftError = (): ThunkAction => (dispatch, getState) => {\n  const errors = [...getState().error.errors];\n\n  if (errors.length > 0) {\n    errors.shift();\n    dispatch({ type: SHIFT_ERROR, errors });\n  }\n};\n","import {\n  FetchPayloadType,\n  FilePayloadInput,\n  Payload,\n  TextPayload,\n} from \"../commons/types\";\nimport { Profile } from \"../profile/types\";\n\nexport const ADD_GROUP = \"ADD_GROUP\";\nexport const UPDATE_GROUP_NAME = \"UPDATE_GROUP_NAME\";\nexport const UPDATE_GROUP_AVATAR = \"UPDATE_GROUP_AVATAR\";\n\nexport const REMOVE_MEMBERS = \"REMOVE_MEMBERS\";\nexport const ADD_MEMBERS = \"ADD_MEMBERS\";\nexport const SET_GROUP_MESSAGE = \"SET_GROUP_MESSAGE\";\nexport const SET_GROUP_MESSAGES = \"SET_GROUP_MESSAGES\";\nexport const SET_ERR_GROUP_MESSAGE = \"SET_ERR_GROUP_MESSAGE\";\nexport const SET_LATEST_GROUP_STATE = \"SET_LATEST_GROUP_STATE\";\nexport const SET_LATEST_GROUP_VERSION = \"SET_LATEST_GROUP_VERSION\";\nexport const SET_FILES_BYTES = \"SET_FILES_BYTES\";\nexport const SET_GROUP_TYPING_INDICATOR = \"SET_GROUP_TYPING_INDICATOR\";\nexport const SET_GROUP_READ_MESSAGE = \"SET_GROUP_READ_MESSAGE\";\nexport const SET_PINNED_MESSAGES = \"SET_PINNNED_MESSAGES\";\nexport const SET_CONVERSATIONS = \"SET_CONVERSATIONS\";\n\n/* TYPE DECLARATIONS */\ntype GroupMessageIDB64 = string; // Group Message EntryHash in base64 string\ntype GroupIDB64 = string; // Group's EntryHash in base64 string\ntype GroupRevisionIDB64 = string; // Group's HeaderHash in base64 string\ntype PayloadInput = TextPayload | FilePayloadInput;\n/* END OF TYPE DECLARATIONS */\n\nexport interface RepliedMessage {\n  groupId: GroupIDB64;\n  author: string;\n  payload: Payload; // subject to change\n  timestamp: Date;\n  replyTo?: GroupMessageIDB64;\n  readList: {\n    // key is AgentPubKey\n    [key: string]: Date;\n  };\n}\n\nexport interface GroupMessageBundle {\n  groupMessageId: string;\n  groupId: string;\n  author: Profile;\n  payload: Payload; // subject to change\n  timestamp: Date;\n  replyTo?: RepliedMessage;\n  replyToId?: string;\n  readList: {\n    // key is AgentPubKey\n    [key: string]: Date;\n  };\n  err?: boolean;\n}\n\n/* INPUT DECLARATION */\nexport interface FileMetadataInput {\n  fileName: string;\n  fileSize: number;\n  fileType: string;\n}\n\nexport interface CreateGroupInput {\n  name: String;\n  members: string[]; // deserialize to AgentPubKey\n}\n\nexport interface GroupMessageInput {\n  groupId: string; // deserialize to HoloHash\n  payloadInput: PayloadInput;\n  sender: string; // deserialize to AgentPubKey\n  replyTo?: string; // deserialize to AgentPubKey\n}\n\nexport interface GroupMessageBatchFetchFilter {\n  groupId: string; // deserialize to HoloHash\n  lastFetched?: string; // the entry hash of the last message in the last batch fetched. deserialize to HoloHash\n  lastMessageTimestamp?: Date; // converted to [number, number] for zome fn\n  batchSize: number;\n  payloadType: FetchPayloadType;\n}\n\nexport interface GroupMessagAdjacentFetchFilter {\n  groupId: string;\n  adjacentMessage: string; // Message id of the message being adjacent\n  messageTimestamp: Date;\n  // This batch size goes for both previou and later messages of adjacent message\n  batchSize: number;\n}\n\nexport interface GroupMessageByDateFetchFilter {\n  groupId: string; // deserialize to HoloHash\n  date: Date;\n  payloadType: FetchPayloadType;\n}\n\nexport interface GroupTypingDetailData {\n  groupId: string; // deserialize to HoloHash\n  indicatedBy: string; // deserialize to AgentPubKey\n  members: string[]; // deserialize to AgentPubKey\n  isTyping: boolean;\n}\n\nexport interface GroupMessageReadData {\n  groupId: string; // deserialize to Holohash\n  messageIds: string[]; // deserialize to Holohash\n  reader: string; // deserialize to AgentPubKey\n  timestamp: Date;\n  members: string[]; // deserialize to AgentPubKey\n}\n/* END OF INPUT DECLARATION */\n\nexport interface GroupTypingDetail {\n  groupId: GroupIDB64;\n  indicatedBy: Profile;\n  isTyping: boolean;\n}\n\nexport interface GroupMessageReadDetail {\n  groupId: GroupIDB64;\n  messageIds: GroupMessageIDB64[];\n  reader: string;\n  timestamp: Date;\n}\n\nexport interface GroupMessage {\n  groupMessageId: GroupMessageIDB64;\n  groupId: GroupIDB64;\n  author: string;\n  payload: Payload; // subject to change\n  timestamp: Date;\n  replyTo?: RepliedMessage;\n  readList: {\n    // key is AgentPubKey\n    [key: string]: Date;\n  };\n}\n\nexport interface GroupMessagesOutput {\n  messagesByGroup: MessagesByGroup;\n  groupMessagesContents: GroupMessagesContents;\n}\n\nexport interface MessagesByGroup {\n  // key here is the base64 string of Group EntryHash\n  [key: string]: GroupMessageIDB64[];\n}\n\nexport interface GroupMessagesContents {\n  // key here is the base 64 string of GroupMessage EntryHash\n  [key: string]: GroupMessage;\n}\n\n// Unused right now\n// export interface GroupMessageElement {\n//   // any field from Element received from HC can be added here\n//   // as needed\n//   entry: GroupMessage;\n//   // base64 string\n//   groupMessageHeaderHash: string;\n//   groupMessageEntryHash: string;\n//   // agentPubKey(?)\n//   signature: string;\n// }\n\n// TODO: make sure this is fetched from holochain at some point\n// export interface GroupVersion {\n//   groupEntryHash: GroupID;\n//   name: string;\n//   conversants: string[];\n//   timestamp: Date;\n// }\n\nexport interface GroupConversation {\n  originalGroupId: GroupIDB64;\n  originalGroupRevisionId: GroupRevisionIDB64;\n  // versions: GroupVersion[];\n  name: string;\n  members: string[];\n  createdAt: Date;\n  creator: string;\n  // TODO: enable setting of avatar for a GroupConversation\n  avatar: string | null;\n  messages: GroupMessageIDB64[];\n  pinnedMessages: GroupMessageIDB64[];\n}\n\nexport interface UpdateGroupMembersData {\n  // base64 string\n  members: string[];\n  groupId: GroupIDB64;\n  groupRevisionId: GroupRevisionIDB64;\n}\n\nexport interface UpdateGroupNameData {\n  name: string;\n  groupId: GroupIDB64;\n  groupRevisionId: GroupRevisionIDB64;\n}\n\nexport interface UpdateGroupAvatarData {\n  avatar: string;\n  groupId: GroupIDB64;\n  groupRevisionId: GroupRevisionIDB64;\n}\n\n/* GROUP CONVERSATION INTERFACE */\n\nexport interface GroupConversationsState {\n  conversations: {\n    // key should be the originalGroupEntryHash\n    [key: string]: GroupConversation;\n  };\n  messages: {\n    [key: string]: GroupMessage;\n  };\n  groupFiles: {\n    [key: string]: Uint8Array;\n  };\n  // This makes it easier to manage when member of a group updates their username (username has no update fn yet)\n  // and saves network calls to fetch username in case a member is part of multiple groups\n  // key is agentPubKey\n  members: {\n    [key: string]: Profile;\n  };\n  typing: {\n    // key is GroupID\n    [key: string]: Profile[];\n  };\n  pinnedMessages: {\n    [key: string]: GroupMessage;\n  };\n  errMsgs: {\n    // key is GroupID\n    [key: string]: GroupMessageBundle[];\n  };\n}\n\nexport interface AddGroupAction {\n  type: typeof ADD_GROUP;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n  members: {\n    [key: string]: Profile;\n  };\n}\n\nexport interface SetPinnedMessages {\n  type: typeof SET_PINNED_MESSAGES;\n  pinnedMessages: {\n    [key: string]: GroupMessage;\n  };\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n}\n\nexport interface AddMembersAction {\n  type: typeof ADD_MEMBERS;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n  members: {\n    [key: string]: Profile;\n  };\n}\n\nexport interface RemoveMembersAction {\n  type: typeof REMOVE_MEMBERS;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n  members: {\n    [key: string]: Profile;\n  };\n}\n\nexport interface UpdateGroupNameAction {\n  type: typeof UPDATE_GROUP_NAME;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n}\n\nexport interface UpdateGroupAvatarAction {\n  type: typeof UPDATE_GROUP_AVATAR;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n}\n\nexport interface SetGroupMessageAction {\n  type: typeof SET_GROUP_MESSAGE;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n  messages: {\n    [key: string]: GroupMessage;\n  };\n  groupFiles: {\n    [key: string]: Uint8Array;\n  };\n}\n\nexport interface SetGroupMessagesAction {\n  type: typeof SET_GROUP_MESSAGES;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n  messages: {\n    [key: string]: GroupMessage;\n  };\n}\n\nexport interface SetGroupErrMessageAction {\n  type: typeof SET_ERR_GROUP_MESSAGE;\n  errMsgs: {\n    [key: string]: GroupMessageBundle[];\n  };\n}\n\nexport interface SetLatestGroupState {\n  type: typeof SET_LATEST_GROUP_STATE;\n  messages: {\n    [key: string]: GroupMessage;\n  };\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n  members: {\n    [key: string]: Profile;\n  };\n}\n\nexport interface SetGroupTypingIndicator {\n  type: typeof SET_GROUP_TYPING_INDICATOR;\n  typing: { [key: string]: Profile[] };\n}\n\nexport interface SetGroupReadMessage {\n  type: typeof SET_GROUP_READ_MESSAGE;\n  messages: { [key: string]: GroupMessage };\n}\n\nexport interface SetFilesBytes {\n  type: typeof SET_FILES_BYTES;\n  filesBytes: {\n    [key: string]: Uint8Array;\n  };\n}\n\nexport interface SetConversations {\n  type: typeof SET_CONVERSATIONS;\n  conversations: {\n    [key: string]: GroupConversation;\n  };\n}\n\nexport type GroupConversationsActionTypes =\n  | AddGroupAction\n  | AddMembersAction\n  | RemoveMembersAction\n  | UpdateGroupNameAction\n  | SetGroupMessageAction\n  | SetGroupMessagesAction\n  | SetGroupErrMessageAction\n  | SetLatestGroupState\n  | SetFilesBytes\n  | SetGroupTypingIndicator\n  | SetGroupReadMessage\n  | SetPinnedMessages\n  | SetConversations\n  | UpdateGroupAvatarAction;\n","/* \n  TODO: Discuss how to manage these types as it currently is being used in Redux and UI (dunno if that is problematic)\n  These are types that are commonly used across redux (and currently in the react components as well).\n  As much as possible, use the types here and do not make any type on your own\n  if it is not absolutely necessary.\n*/\n\nimport { GroupMessage } from \"../group/types\";\nimport { P2PMessage } from \"../p2pmessages/types\";\nimport { Profile } from \"../profile/types\";\n\n/* \n  We are avoiding the usage of Buffer (as these are typed in the @holochain/client) in the ui\n  as it is cumbersome to translate data types among Buffer, Uint8Array, and string. \n  TODO: This may be a temporary solution that may have better fix in the future\n*/\nexport type HoloHash = Uint8Array;\n\nexport type ProfileID = string;\nexport type MessageID = string;\nexport type FileBytesID = string;\n\nexport type Payload = TextPayload | FilePayload;\n\nexport interface TextPayload {\n  type: \"TEXT\";\n  payload: { payload: string };\n}\nexport interface FilePayload {\n  type: \"FILE\";\n  fileName: string;\n  fileSize: number;\n  fileType: \"IMAGE\" | \"VIDEO\" | \"OTHER\";\n  fileHash?: FileBytesID;\n  fileBytes?: Uint8Array;\n  thumbnail?: Uint8Array;\n}\n\nexport interface ReplyTo {\n  author: Profile;\n  id: string;\n  payload: Payload;\n}\n\nexport type FileType = {\n  type: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n  payload?: { thumbnail: Uint8Array } | null;\n};\n\nexport type FetchPayloadType =\n  | { type: \"TEXT\"; payload: null }\n  | { type: \"FILE\"; payload: null }\n  | { type: \"MEDIA\"; payload: null }\n  | { type: \"ALL\"; payload: null };\n\nexport interface FileMetadataInput {\n  fileName: string;\n  fileSize: number;\n  fileType: string;\n}\n\nexport interface FilePayloadInput {\n  type: \"FILE\";\n  payload: {\n    metadata: FileMetadataInput;\n    fileType: FileType;\n    fileBytes: Uint8Array;\n  };\n}\n\n// type guards\nexport function isTextPayload(\n  payload: TextPayload | FilePayloadInput | FilePayload\n): payload is TextPayload {\n  return (payload as TextPayload).type === \"TEXT\";\n}\n\nexport function isOther(\n  payload: FileType\n): payload is { type: \"OTHER\"; payload?: null } {\n  return (payload as { type: \"OTHER\"; payload?: null }).type === \"OTHER\";\n}\n\nexport function isImage(\n  payload: FileType\n): payload is { type: \"IMAGE\"; payload: { thumbnail: Uint8Array } } {\n  return (\n    (payload as { type: \"IMAGE\"; payload: { thumbnail: Uint8Array } }).type ===\n    \"IMAGE\"\n  );\n}\n\nexport function isVideo(\n  payload: FileType\n): payload is { type: \"VIDEO\"; payload: { thumbnail: Uint8Array } } {\n  return (\n    (payload as { type: \"VIDEO\"; payload: { thumbnail: Uint8Array } }).type ===\n    \"VIDEO\"\n  );\n}\n\nexport function isP2PMessage(\n  message: P2PMessage | GroupMessage\n): message is P2PMessage {\n  return (message as P2PMessage).p2pMessageEntryHash !== undefined;\n}\n\n/* \n  Temporarily placing these types here which is being used in the UI\n*/\n\nexport interface Message {\n  id: string;\n  sender?: Profile;\n  payloadType: \"TEXT\" | \"FILE\";\n  /* undefined when payload type is FILE */\n  textPayload?: string;\n  fileName?: string;\n  /* TODO: tats needs to fix the timestamp type in GroupMessage so that this can be typed as Date  */\n  timestamp: Date;\n}\n\n/* used in Conversations page */\nexport interface Conversation {\n  type: \"p2p\" | \"group\";\n  avatar?: string;\n  id: string;\n  conversationName: string;\n  // src: string;\n  sender?: string;\n  latestMessage: Message;\n  badgeCount?: number;\n}\n\nexport type Conversations = Conversation[];\n","import { AgentPubKey } from \"@holochain/client\";\nimport { HoloHash } from \"../commons/types\";\nimport {\n  MessageID,\n  FileBytesID,\n  Payload,\n  TextPayload,\n  FilePayloadInput,\n} from \"../commons/types\";\nimport { Profile } from \"../profile/types\";\n\nexport interface P2PMessage {\n  p2pMessageEntryHash: MessageID;\n  author: Profile;\n  receiver: Profile;\n  payload: Payload;\n  timestamp: Date;\n  replyTo?: P2PMessage;\n  replyToId?: string;\n  receipts: P2PMessageReceiptID[];\n  err?: boolean;\n}\n\nexport interface P2PMessageReceipt {\n  p2pMessageReceiptEntryHash: P2PMessageReceiptID;\n  p2pMessageEntryHashes: MessageID[];\n  timestamp: Date;\n  status: P2PMessageStatus;\n}\n\nexport interface P2PFile {\n  fileHash: FileBytesID;\n  fileBytes: Uint8Array;\n}\n\nexport interface P2PMessagePin {\n  id: MessageID[];\n  conversant: Profile;\n  status: P2PPinStatus;\n}\n\n/* WRAPPERS */\nexport type P2PMessageReceiptID = string;\nexport type AgentPubKeyBase64 = string;\nexport type HoloHashBase64 = string;\n\n/* ENUMS */\nexport type P2PMessageStatus = \"sent\" | \"delivered\" | \"read\";\nexport type P2PPinStatus = \"pinned\" | \"unpinned\";\n\n/* STRUCTURES */\nexport interface Read {\n  timestamp: number;\n}\nexport interface Delivered {\n  timestamp: number;\n}\nexport interface Pinned {\n  timestamp: number;\n}\nexport interface Unpinned {\n  timestamp: number;\n}\n\n/* INPUT STRUCTURES */\nexport interface MessageInput {\n  receiver: AgentPubKey;\n  payload: TextPayload | FilePayloadInput;\n  reply_to: HoloHash | undefined;\n}\n\nexport interface PinInput {\n  id: MessageID[];\n  conversant: AgentPubKeyBase64;\n  status: String;\n  timestamp: number;\n}\n\nexport interface P2PChatFilterBatch {\n  conversant: AgentPubKeyBase64;\n  batch_size: number;\n  payload_type: String;\n  last_fetched_timestamp?: number;\n  last_fetched_message_id?: HoloHash;\n}\n\nexport type BatchSize = number;\n\n/* OUTPUT STRUCTURES */\nexport interface P2PHashMap {\n  conversations: {\n    [key: string]: P2PConversation;\n  };\n  messages: {\n    [key: string]: P2PMessage;\n  };\n  receipts: {\n    [key: string]: P2PMessageReceipt;\n  };\n}\n\nexport interface P2PConversation {\n  messages: MessageID[];\n  pinned: MessageID[];\n}\n\nexport interface PinContents {\n  id: string;\n  pin: P2PMessagePin;\n}\n\n// REDUX STRUCTURES\nexport interface P2PMessageConversationState {\n  conversations: {\n    [key: string]: P2PConversation;\n  };\n  messages: {\n    [key: string]: P2PMessage;\n  };\n  receipts: {\n    [key: string]: P2PMessageReceipt;\n  };\n  files: {\n    [key: string]: Uint8Array;\n  };\n  typing: {\n    [key: string]: Profile;\n  };\n  pinned: {\n    [key: string]: P2PMessage;\n  };\n  errMsgs: {\n    // key is conversant ID\n    [key: string]: P2PMessage[];\n  };\n}\n\n/* ACTION TYPES */\nexport const SET_MESSAGES = \"SET_MESSAGES\";\nexport const SET_RECEIPTS = \"SET_RECEIPTS\";\nexport const SET_ERR_MESSAGE = \"SET_ERR_MESSAGE\";\nexport const SET_FILES = \"SET_FILES\";\nexport const SET_TYPING = \"SET_TYPING\";\nexport const APPEND_MESSAGE = \"APPEND_MESSAGE\";\nexport const APPEND_RECEIPT = \"APPEND_RECEIPT\";\nexport const APPEND_PIN = \"APPEND_PIN\";\nexport const PIN_MESSAGE = \"PIN_MESSAGE\";\nexport const UNPIN_MESSAGE = \"UNPIN_MESSAGE\";\nexport const SET_PINNED = \"SET_PINNED\";\n\n/* ACTION INTERFACES */\nexport interface SetP2PMessagesAction {\n  type: typeof SET_MESSAGES;\n  state: P2PMessageConversationState;\n}\nexport interface SetP2PReceiptsAction {\n  type: typeof SET_RECEIPTS;\n  state: { [key: string]: P2PMessageReceipt };\n}\n\nexport interface SetErrMessageAction {\n  type: typeof SET_ERR_MESSAGE;\n  state: {\n    errMsgs: { [key: string]: P2PMessage[] };\n  };\n}\n\n// not used\nexport interface SetP2PFilesAction {\n  type: typeof SET_FILES;\n  state: { [key: string]: Uint8Array };\n}\nexport interface SetP2PTypingAction {\n  type: typeof SET_TYPING;\n  state: { [key: string]: Profile };\n}\nexport interface SetP2PPinnedMessagesAction {\n  type: typeof SET_PINNED;\n  state: P2PMessageConversationState;\n}\n\n// export interface SetP2PTypingAction {\n//   type: typeof SET_TYPING;\n//   state: {\n//     profile: Profile;\n//     isTyping: boolean;\n//   };\n// }\n\n// export interface SetP2PPinnedMessagesAction {\n//   type: typeof SET_PINNED;\n//   state: {\n//     conversant: string;\n//     messages: { [key: string]: P2PMessage };\n//   };\n// }\n\n// export interface AppendP2PMessageAction {\n//   type: typeof APPEND_MESSAGE;\n//   state: {\n//     message: P2PMessage;\n//     receipt: P2PMessageReceipt;\n//     file?: P2PFile;\n//     key?: string;\n//   };\n// }\n\n// export interface AppendP2PMessageReceiptAction {\n//   type: typeof APPEND_RECEIPT;\n//   state: P2PMessageReceipt;\n// }\n\nexport interface PinP2PMessageAction {\n  type: typeof PIN_MESSAGE;\n  state: {\n    conversant: string;\n    messages: { [key: string]: P2PMessage };\n  };\n}\n\nexport interface UninP2PMessageAction {\n  type: typeof UNPIN_MESSAGE;\n  state: {\n    conversant: string;\n    messages: { [key: string]: P2PMessage };\n  };\n}\n\nexport type P2PMessageActionType =\n  | SetP2PMessagesAction\n  | SetP2PReceiptsAction\n  // | AppendP2PMessageAction\n  // | AppendP2PMessageReceiptAction\n  | SetErrMessageAction\n  | SetP2PFilesAction\n  | SetP2PTypingAction\n  | PinP2PMessageAction\n  | UninP2PMessageAction\n  | SetP2PPinnedMessagesAction;\n","import { AgentPubKey } from \"@holochain/client\";\nimport { Profile } from \"../profile/types\";\n\nexport const SET_CONTACTS = \"SET_CONTACTS\";\nexport const SET_BLOCKED = \"SET_BLOCKED\";\n\nexport interface IndexedContacts {\n  [key: string]: Profile[];\n}\n\nexport interface ContactsState {\n  contacts: {\n    [key: string]: Profile;\n  };\n  blocked: {\n    [key: string]: Profile;\n  };\n}\n\ninterface SetContactsAction {\n  type: typeof SET_CONTACTS;\n  contacts: {\n    [key: string]: Profile;\n  };\n}\n\ninterface SetBlockedAction {\n  type: typeof SET_BLOCKED;\n  blocked: {\n    [key: string]: Profile;\n  };\n}\nexport type ContactsActionType = SetContactsAction | SetBlockedAction;\n\nexport interface Contact {\n  agentPubKey: AgentPubKey;\n  username: string;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"read\":\"style_read__3GeUO\",\"bubble\":\"style_bubble__b3vlV\",\"text\":\"style_text__3mW4k\",\"message-text\":\"style_message-text__3Cz2E\",\"file\":\"style_file__2E9_r\",\"space\":\"style_space__1IgoE\",\"author-name\":\"style_author-name__2wbPZ\",\"picture\":\"style_picture__2lzdL\",\"avatar-container\":\"style_avatar-container__3X-qJ\",\"me-container\":\"style_me-container__1SA7U\",\"me\":\"style_me__dv2Iw\",\"max-file\":\"style_max-file__20l-d\",\"others-container\":\"style_others-container__19SEV\",\"others\":\"style_others__QcKpe\",\"avatar\":\"style_avatar__3eiPZ\",\"not-delivered\":\"style_not-delivered__3sCqu\",\"not-delivered-container\":\"style_not-delivered-container__gnnKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__3FlxA\",\"groupname\":\"style_groupname__olSXj\",\"avatar-container\":\"style_avatar-container__3UHmQ\",\"avatar\":\"style_avatar__3oYjI\",\"avatar-content\":\"style_avatar-content__3VzBc\",\"image-container\":\"style_image-container__354iC\",\"image-container-set\":\"style_image-container-set__1FfEa\",\"icon-overlay\":\"style_icon-overlay__1pR_g\",\"overlay\":\"style_overlay__rLSbi\",\"img\":\"style_img__1ZRr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reply\":\"style_reply__1alfg\",\"row\":\"style_row__2lZL5\",\"column\":\"style_column__2fUOQ\",\"author\":\"style_author__3RrBq\",\"text\":\"style_text__-M__Q\",\"thumbnail\":\"style_thumbnail__2NKmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__1GbNk\",\"toolbar-container\":\"style_toolbar-container__trETb\",\"profile-picture\":\"style_profile-picture__Ylhcn\",\"profile-picture-toolbar\":\"style_profile-picture-toolbar__2IRI-\",\"nickname\":\"style_nickname__36IXj\",\"profile-toolbar\":\"style_profile-toolbar__3bqXt\",\"content-icon\":\"style_content-icon__2luvw\",\"content\":\"style_content__2vCA9\",\"avatar-content\":\"style_avatar-content__223UZ\",\"avatar\":\"style_avatar__390jA\",\"image-container\":\"style_image-container__1u6CD\",\"img\":\"style_img__2XYuw\",\"overlay\":\"style_overlay__2KoGd\",\"icon-overlay\":\"style_icon-overlay__1utzD\"};","export const SET_USERNAME = \"SET_USERNAME\";\nexport const SET_PROFILE = \"SET_PROFILE\";\n\nexport interface AgentProfile {\n  agent_pub_key: string;\n  profile: {\n    fields: {\n      [key: string]: any;\n    };\n    nickname: string;\n  };\n}\n\n// TODO: change username to nickname in the next clean up\nexport interface Profile {\n  id: string;\n  username: string;\n  fields: {\n    [key: string]: any;\n  };\n}\n\n// TODO: change username to nickname in the next clean up\nexport interface ProfileState {\n  id: string | null;\n  username: string | null;\n  fields: {\n    [key: string]: any;\n  };\n}\n\ninterface SetUsernameAction {\n  type: typeof SET_USERNAME;\n  username: string;\n  id: string;\n}\n\ninterface SetProfileAction {\n  type: typeof SET_PROFILE;\n  nickname: string;\n  id: string;\n  fields: {};\n}\n\nexport type ProfileListType = {\n  [key: string]: Profile;\n};\n\nexport type ProfileActionTypes = SetUsernameAction | SetProfileAction;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mediarow\":\"style_mediarow__2Kl-B\",\"month\":\"style_month__G0kAs\",\"mediacard\":\"style_mediacard__tGTBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content-container\":\"style_content-container__1pYC1\",\"header\":\"style_header__3oN7M\",\"author\":\"style_author__1no5c\",\"date\":\"style_date__3fX4m\",\"thumbnail\":\"style_thumbnail__2jeYz\",\"video\":\"style_video__2c8Ip\",\"other\":\"style_other__3Q1FT\",\"file-details\":\"style_file-details__14BgG\",\"file-size\":\"style_file-size__2Qbcp\"};","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FileContent } from \"../../../components/MessageInput\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport {\n  P2PMessage,\n  P2PMessageReceipt,\n} from \"../../../redux/p2pmessages/types\";\nimport { timestampToDate } from \"../../../utils/helpers\";\nimport {\n  FilePayload,\n  FilePayloadInput,\n  FileType,\n  TextPayload,\n} from \"../../commons/types\";\nimport { ThunkAction } from \"../../types\";\nimport { appendMessage } from \"../actions/appendMessage\";\nimport { MessageInput } from \"../types\";\n\n/* SENDER */\n/* \n    action to send a message\n*/\n\ninterface DispatchState {\n  message: P2PMessage;\n  receipt: P2PMessageReceipt | undefined;\n  file: any;\n}\n\nconst processSentData = (\n  returnValue: any,\n  contactsState: any,\n  profile: any\n) => {\n  // const [messageTuple, receiptTuple] = returnValue;\n  // const messageTuple = returnValue;\n  const [messageID, message] = returnValue;\n  // const [receiptID, receipt] = receiptTuple!;\n\n  const messageHash = serializeHash(messageID);\n  // const receiptHash = serializeHash(receiptID);\n\n  let payload;\n  switch (message.payload.type) {\n    case \"TEXT\":\n      payload = message.payload;\n      break;\n    case \"FILE\":\n      payload = {\n        type: \"FILE\",\n        fileName: message.payload.payload.metadata.fileName,\n        fileSize: message.payload.payload.metadata.fileSize,\n        fileType: message.payload.payload.fileType.type,\n        fileHash: serializeHash(message.payload.payload.metadata.fileHash),\n        thumbnail:\n          message.payload.payload.fileType.type !== \"OTHER\"\n            ? message.payload.payload.fileType.payload.thumbnail\n            : null,\n      };\n      break;\n    default:\n      break;\n  }\n\n  const profileList = {\n    ...contactsState,\n    [profile.id!]: { id: profile.id!, username: profile.username! },\n  };\n\n  let transformedReplyTo = undefined;\n  let replyToPayload = undefined;\n  if (message.replyTo !== null) {\n    switch (message.replyTo.payload.type) {\n      case \"TEXT\":\n        replyToPayload = message.replyTo.payload;\n        break;\n      case \"FILE\":\n        replyToPayload = {\n          type: \"FILE\",\n          fileName: message.replyTo.payload.payload.metadata.fileName,\n          fileSize: message.replyTo.payload.payload.metadata.fileSize,\n          fileType: message.replyTo.payload.payload.fileType.type,\n          fileHash: serializeHash(\n            message.replyTo.payload.payload.metadata.fileHash\n          ),\n          thumbnail:\n            message.replyTo.payload.payload.fileType.type !== \"OTHER\"\n              ? message.replyTo.payload.payload.fileType.payload.thumbnail\n              : null,\n        };\n        break;\n      default:\n        break;\n    }\n\n    transformedReplyTo = {\n      p2pMessageEntryHash: serializeHash(message.replyTo.hash),\n      author: profileList[serializeHash(message.replyTo.author)],\n      receiver: profileList[serializeHash(message.replyTo.receiver)],\n      payload: replyToPayload ? replyToPayload : message.replyTo.payload,\n      timestamp: timestampToDate(message.replyTo.timeSent),\n      receipts: [],\n    };\n  }\n\n  const p2pMessage: P2PMessage = {\n    p2pMessageEntryHash: messageHash,\n    author: profileList[serializeHash(message.author)],\n    receiver: profileList[serializeHash(message.receiver)],\n    payload: payload,\n    timestamp: timestampToDate(message.timeSent),\n    replyTo: transformedReplyTo ? transformedReplyTo : undefined,\n    // receipts: [receiptHash],\n    receipts: [],\n  };\n\n  // const messageEntryHash = serializeHash(receipt.id[0]);\n  // const p2pReceipt: P2PMessageReceipt = {\n  //   p2pMessageReceiptEntryHash: serializeHash(receiptID),\n  //   p2pMessageEntryHashes: [messageEntryHash],\n  //   timestamp: timestampToDate(receipt.status.timestamp),\n  //   status: receipt.status.status,\n  // };\n\n  return {\n    message: p2pMessage,\n    // receipt: p2pReceipt,\n    receipt: undefined,\n    file: undefined,\n  };\n};\n\nexport const sendMessage =\n  (\n    receiver: string,\n    message: string,\n    type: string,\n    replyTo?: string,\n    file?: FileContent\n  ): ThunkAction =>\n  async (dispatch, getState, { callZome, retry }) => {\n    let payloadInput;\n    if (type === \"TEXT\") {\n      const textPayload: TextPayload = {\n        type: \"TEXT\",\n        payload: {\n          payload: message.trim(),\n        },\n      };\n      payloadInput = textPayload;\n    } else {\n      const fileType: FileType = {\n        type: file!.fileType.type,\n        payload:\n          file!.fileType.type !== \"OTHER\"\n            ? { thumbnail: file!.fileType.payload!.thumbnail }\n            : null,\n      };\n      const filePayload: FilePayloadInput = {\n        type: \"FILE\",\n        payload: {\n          metadata: file!.metadata,\n          fileType: fileType,\n          fileBytes: file!.fileBytes,\n        },\n      };\n      payloadInput = filePayload;\n    }\n\n    // construct the message input structure\n    const input: MessageInput = {\n      receiver: Buffer.from(deserializeHash(receiver)),\n      payload: payloadInput,\n      reply_to: replyTo ? Buffer.from(deserializeHash(replyTo)) : undefined,\n    };\n\n    // CALL ZOME\n    try {\n      const sentMessage = await callZome({\n        zomeName: ZOMES.P2PMESSAGE,\n        fnName: FUNCTIONS[ZOMES.P2PMESSAGE].SEND_MESSAGE,\n        payload: input,\n      });\n\n      if (sentMessage?.type !== \"error\") {\n        const contactsState = { ...getState().contacts.contacts };\n        const profile = { ...getState().profile };\n\n        const dispatchState: DispatchState = processSentData(\n          sentMessage,\n          contactsState,\n          profile\n        );\n\n        const p2pFile =\n          type === \"FILE\"\n            ? {\n                fileHash: (dispatchState.message.payload as FilePayload)\n                  .fileHash,\n                fileBytes: file!.fileBytes,\n              }\n            : undefined;\n\n        dispatchState.file = p2pFile;\n\n        // DISPATCH TO REDUCER\n        dispatch(appendMessage(dispatchState));\n        return true;\n      }\n    } catch (e) {\n      try {\n        if (!(e as any).message.includes(\"Timed out\")) {\n          const retriedSend = await retry({\n            zomeName: ZOMES.P2PMESSAGE,\n            fnName: FUNCTIONS[ZOMES.P2PMESSAGE].SEND_MESSAGE,\n            payload: input,\n          });\n\n          if (retriedSend?.type !== \"error\") {\n            const contactsState = { ...getState().contacts.contacts };\n            const profile = { ...getState().profile };\n\n            const dispatchState: DispatchState = processSentData(\n              retriedSend,\n              contactsState,\n              profile\n            );\n\n            const p2pFile =\n              type === \"FILE\"\n                ? {\n                    fileHash: (dispatchState.message.payload as FilePayload)\n                      .fileHash,\n                    fileBytes: file!.fileBytes,\n                  }\n                : undefined;\n\n            dispatchState.file = p2pFile;\n            dispatch(appendMessage(dispatchState));\n            return true;\n          }\n        }\n        return false;\n      } catch (e) {\n        console.log(\"sending automatically retried message has failed\", e);\n        return false;\n      }\n    }\n  };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyboardcontainer\":\"style_keyboardcontainer__ZpjcC\",\"header\":\"style_header__2EBYq\",\"gifcontainer\":\"style_gifcontainer__2VZOA\",\"gifcontainerexpanded\":\"style_gifcontainerexpanded__1GDDQ\",\"categorypreview\":\"style_categorypreview__1XAxP\",\"gifpreview\":\"style_gifpreview__1bGYg\",\"textholder\":\"style_textholder__21szk\",\"categorytext\":\"style_categorytext__2_4qV\",\"images\":\"style_images__2xttS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-picture-content\":\"style_profile-picture-content__SgIy8\",\"avatar-container\":\"style_avatar-container__3uQZ1\",\"avatar\":\"style_avatar__2FXG7\",\"button-label\":\"style_button-label__18iwi\",\"label\":\"style_label__1IYVS\",\"default\":\"style_default__H5jkI\"};","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport {\n  P2PConversation,\n  P2PMessage,\n  P2PMessageConversationState,\n  P2PMessageReceipt,\n} from \"../../types\";\nimport { timestampToDate } from \"../../../../utils/helpers\";\nimport { MessageID } from \"../../../commons/types\";\nimport { Profile } from \"../../../profile/types\";\n\nexport const transformZomeDataToUIData = (\n  zomeResults: P2PMessageConversationState,\n  contacts: { [key: string]: Profile }\n) => {\n  // destructure zome hashmap results\n  let {\n    0: zomeConversations,\n    1: zomeMessages,\n    2: zomeReceipts,\n  } = Object.values(zomeResults);\n\n  // transform conversations\n  let transformedConversations: { [key: string]: P2PConversation } = {};\n  for (const [key, value] of Object.entries(zomeConversations)) {\n    let messageIDs: MessageID[] = value as MessageID[];\n    let conversation: P2PConversation = {\n      messages: messageIDs,\n      pinned: zomeConversations[key] ? zomeConversations[key].pinned : [],\n    };\n    transformedConversations[key] = conversation;\n  }\n\n  // transform messages\n  let transformedMesssages: { [key: string]: P2PMessage } = {};\n  for (const [key, value] of Object.entries(zomeMessages)) {\n    let { 0: message, 1: receiptArray } = Object(value);\n    let payload;\n    switch (message.payload.type) {\n      case \"TEXT\":\n        payload = message.payload;\n        break;\n      case \"FILE\":\n        payload = {\n          type: \"FILE\",\n          fileName: message.payload.payload.metadata.fileName,\n          fileSize: message.payload.payload.metadata.fileSize,\n          fileType: message.payload.payload.fileType.type,\n          fileHash: serializeHash(message.payload.payload.metadata.fileHash),\n          thumbnail:\n            message.payload.payload.fileType.type !== \"OTHER\"\n              ? message.payload.payload.fileType.payload.thumbnail\n              : null,\n        };\n        break;\n      default:\n        break;\n    }\n\n    let author = contacts[serializeHash(message.author)];\n\n    let replyToPayload;\n    let transformedReplyTo = undefined;\n    if (message.replyTo !== null) {\n      switch (message.replyTo.payload.type) {\n        case \"TEXT\":\n          replyToPayload = message.replyTo.payload;\n          break;\n        case \"FILE\":\n          replyToPayload = {\n            type: \"FILE\",\n            fileName: message.replyTo.payload.payload.metadata.fileName,\n            fileSize: message.replyTo.payload.payload.metadata.fileSize,\n            fileType: message.replyTo.payload.payload.fileType.type,\n            fileHash: serializeHash(\n              message.replyTo.payload.payload.metadata.fileHash\n            ),\n            thumbnail:\n              message.replyTo.payload.payload.fileType.type !== \"OTHER\"\n                ? message.replyTo.payload.payload.fileType.payload.thumbnail\n                : null,\n          };\n          break;\n        default:\n          break;\n      }\n\n      transformedReplyTo = {\n        p2pMessageEntryHash: serializeHash(message.replyTo.hash),\n        author: contacts[serializeHash(message.replyTo.author)],\n        receiver: contacts[serializeHash(message.replyTo.receiver)],\n        payload: replyToPayload ? replyToPayload : message.replyTo.payload,\n        timestamp: timestampToDate(message.replyTo.timeSent),\n        replyTo: message.replyTo,\n        receipts: message.replyTo.receipts,\n      };\n    }\n\n    let p2pMessage: P2PMessage = {\n      p2pMessageEntryHash: key,\n      author: author,\n      receiver: contacts[serializeHash(message.receiver)],\n      payload: payload,\n      timestamp: timestampToDate(message.timeSent),\n      replyTo: transformedReplyTo ? transformedReplyTo : undefined,\n      receipts: receiptArray,\n    };\n\n    transformedMesssages[key] = p2pMessage;\n  }\n\n  // transform receipts\n  let transformedReceipts: { [key: string]: P2PMessageReceipt } = {};\n  for (const [key, value] of Object.entries(zomeReceipts)) {\n    const { id, status: statusTuple } = Object(value);\n    const { status, timestamp } = statusTuple;\n\n    let p2preceipt = {\n      p2pMessageReceiptEntryHash: key,\n      p2pMessageEntryHashes: id,\n      timestamp: timestampToDate(timestamp),\n      status: status,\n    };\n\n    transformedReceipts[key] = p2preceipt;\n  }\n\n  // consolidate transformed objects\n  let consolidatedUIObject: P2PMessageConversationState = {\n    conversations: transformedConversations,\n    messages: transformedMesssages,\n    receipts: transformedReceipts,\n    files: {},\n    typing: {},\n    pinned: {},\n    errMsgs: {},\n  };\n\n  return consolidatedUIObject;\n};\n","export const SET_PREFERENCE = \"SET_PREFERENCE\";\n\nexport interface PreferenceState {\n  readReceipt: boolean;\n  typingIndicator: boolean;\n  agentReadReceipt: {\n    [key: string]: true;\n  };\n  agentTypingIndicator: {\n    [key: string]: true;\n  };\n  groupTypingIndicator: {\n    [key: string]: true;\n  };\n  groupReadReceipt: {\n    [key: string]: true;\n  };\n}\n\nexport interface PreferenceParameter {\n  [key: string]: any;\n  readReceipt?: boolean;\n  typingIndicator?: boolean;\n}\n\nexport interface SetPreferenceAction {\n  type: typeof SET_PREFERENCE;\n  preference: PreferenceParameter;\n}\n\nexport type PreferenceAction = SetPreferenceAction;\n","export const ENV: \"HCDEV\" | \"HC\" | \"HCC\" | \"HOLO\" = process.env\n  .REACT_APP_ENV as any;\n\nexport const appId = (): string | undefined => {\n  if (ENV === \"HC\" || ENV === \"HCDEV\") {\n    return \"kizuna\";\n  } else if (ENV === \"HCC\") {\n    return \"uhCkkHSLbocQFSn5hKAVFc_L34ssLD52E37kq6Gw9O3vklQ3Jv7eL\";\n  } else if (ENV === \"HOLO\") {\n    return undefined;\n  }\n};\n\nexport const appUrl = () => {\n  // for launcher\n  if (ENV === \"HC\") return `ws://localhost:8888`;\n  else if (ENV === \"HCDEV\") return process.env.REACT_APP_DNA_INTERFACE_URL;\n  else if (ENV === \"HCC\")\n    return `http://localhost:${process.env.REACT_APP_CHAPERONE_PORT}`;\n  else if (ENV === \"HOLO\") return \"https://devnet-chaperone.holo.host\";\n  else return null;\n};\n\nexport const isHoloEnv = () => {\n  return ENV === \"HCC\" || ENV === \"HOLO\";\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reply-to\":\"style_reply-to__1ZpXG\",\"content-me\":\"style_content-me__14mTi\",\"content-others\":\"style_content-others__2kxSL\",\"thumbnail\":\"style_thumbnail__2u4oc\",\"vertical-divider-me\":\"style_vertical-divider-me__3eT7d\",\"vertical-divider-others\":\"style_vertical-divider-others__dj7Rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"style_content__U_pdz\",\"play-pause\":\"style_play-pause__1sBQt\",\"modal-control\":\"style_modal-control__2LLvX\",\"slider-volume\":\"style_slider-volume__37ujv\",\"toolbar\":\"style_toolbar__3aY0h\",\"footer\":\"style_footer__YbR3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__22EBt\",\"language-container\":\"style_language-container__2begU\",\"language\":\"style_language__28kvF\",\"selected\":\"style_selected__3wGAX\"};","export interface gif {\n  id: string;\n  tinygif: media;\n  gif: media;\n}\n\nexport interface category {\n  searchterm: string;\n  path: string;\n  image: string;\n  name: string;\n}\n\nexport interface gifResult {\n  id: string;\n  title: string;\n  content_description: string;\n  media: any;\n}\n\nexport interface media {\n  preview: string;\n  size: number;\n  url: string;\n  dimensions: [number, number];\n}\n\nexport interface returnValue {\n  gifs: any[];\n  next: any;\n}\n\n// {\n//     \"id\": \"12759384\",\n//     \"title\": \"\",\n//     \"h1_title\": \"\",\n//     \"media\": [\n//       ...\n//         \"tinygif\": {\n//           \"preview\": \"https://media.tenor.com/images/f68119a036c7b7b254d7b5bcad3736f6/tenor.gif\",\n//           \"size\": 194945,\n//           \"url\": \"https://media.tenor.com/images/d7afbeb5c3b3efc48a86eb2c3450ceb8/tenor.gif\",\n//           \"dims\": [\n//             220,\n//             220\n//           ]\n//         },\n//         \"gif\": {\n//           \"url\": \"https://media.tenor.com/images/bcbb279dee67e5a9d6a22238977a1591/tenor.gif\",\n//           \"preview\": \"https://media.tenor.com/images/38a9f93856e3ac917315536e2c128933/tenor.png\",\n//           \"size\": 1637110,\n//           \"dims\": [\n//             268,\n//             268\n//           ]\n//         },\n//         ...\n//       }\n//     ],\n\n/* ACTION TYPES */\nexport const SET_GIFS = \"SET_GIFS\";\nexport const SET_CATEGORIES = \"SET_CATEGORIES\";\n\n/* ACTION INTERFACES */\nexport interface SetGifStateAction {\n  type: typeof SET_GIFS;\n  state: { [key: string]: gif };\n}\n\nexport interface SetCategoryStateAction {\n  type: typeof SET_CATEGORIES;\n  state: { [key: string]: category };\n}\n\nexport type GifActionType = SetGifStateAction;\n","import { ToastOptions } from \"@ionic/core\";\n\nexport type ErrorType = \"TOAST\" | \"test\";\n\nexport type Error = ToastError;\nexport interface ErrorState {\n  errors: Error[];\n}\n\nexport type ErrorTypeProps = ToastOptions;\n\ninterface ToastError {\n  type: \"TOAST\";\n  options?: ToastOptions;\n  intl?: { id: string; value: any };\n}\n\nexport const PUSH_ERROR = \"PUSH_ERROR\";\n\nexport interface PushErrorAction {\n  type: typeof PUSH_ERROR;\n  error: Error;\n}\n\nexport const SHIFT_ERROR = \"SHIFT_ERROR\";\n\nexport interface ShiftErrorAction {\n  type: typeof SHIFT_ERROR;\n  errors: Error[];\n}\n\nexport type ErrorActionType = PushErrorAction | ShiftErrorAction;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../../redux/error/actions\";\nimport { dateToTimestamp } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport { AgentPubKeyBase64, HoloHashBase64 } from \"../types\";\nimport { transformZomeDataToUIData } from \"./helpers/transformZomeDateToUIData\";\nimport { setMessages } from \"./setMessages\";\n\n// action to get messages in batches (called while scrolling in chat boxes and media boxes)\nexport const getPreviousMessages =\n  (\n    conversant: AgentPubKeyBase64,\n    batch_size: number,\n    payload_type: String,\n    last_fetched_timestamp?: Date,\n    last_fetched_message_id?: HoloHashBase64\n  ): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    let zome_input = {\n      conversant: Buffer.from(deserializeHash(conversant)),\n      batch_size: batch_size,\n      payload_type: payload_type,\n      last_fetched_timestamp: last_fetched_timestamp\n        ? dateToTimestamp(last_fetched_timestamp)\n        : undefined,\n      last_fetched_message_id: last_fetched_message_id\n        ? Buffer.from(deserializeHash(last_fetched_message_id))\n        : undefined,\n    };\n    try {\n      // CALL ZOME\n      const nextBatchOfMessages = await callZome({\n        zomeName: ZOMES.P2PMESSAGE,\n        fnName: FUNCTIONS[ZOMES.P2PMESSAGE].GET_PREVIOUS_MESSAGES,\n        payload: zome_input,\n      });\n\n      // DISPATCH TO REDUCER\n      if (nextBatchOfMessages?.type !== \"error\") {\n        const contactsState = { ...getState().contacts.contacts };\n        const profile = { ...getState().profile };\n        const profileList = {\n          ...contactsState,\n          [profile.id!]: {\n            id: profile.id!,\n            username: profile.username!,\n            fields: profile.fields,\n          },\n        };\n        let toDispatch = transformZomeDataToUIData(\n          nextBatchOfMessages,\n          profileList\n        );\n        if (Object.values(nextBatchOfMessages[1]).length > 0)\n          dispatch(setMessages(toDispatch));\n        return nextBatchOfMessages;\n      }\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__N7t6V\",\"contacts-list\":\"style_contacts-list__20Yc_\",\"warning\":\"style_warning__3mGhB\",\"warning-icon\":\"style_warning-icon__3lrr_\"};","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Store } from \"redux\";\nimport createStore from \"../redux/store\";\n\nexport let store: Store | undefined;\nstore = createStore();\n\nconst ReduxContainer: React.FC = ({ children }) => (\n  <Provider store={store as Store}>{children}</Provider>\n);\n\nexport default ReduxContainer;\n","import {\n  ContactsActionType,\n  ContactsState,\n  SET_BLOCKED,\n  SET_CONTACTS,\n} from \"./types\";\n\nconst initialState: ContactsState = {\n  contacts: {},\n  blocked: {},\n};\n\nconst reducer = (state = initialState, action: ContactsActionType) => {\n  switch (action.type) {\n    case SET_CONTACTS:\n      return { ...state, contacts: action.contacts };\n    case SET_BLOCKED:\n      return { ...state, blocked: action.blocked };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  ADD_GROUP,\n  ADD_MEMBERS,\n  GroupConversationsActionTypes,\n  GroupConversationsState,\n  REMOVE_MEMBERS,\n  SET_CONVERSATIONS,\n  SET_ERR_GROUP_MESSAGE,\n  SET_FILES_BYTES,\n  SET_GROUP_MESSAGE,\n  SET_GROUP_MESSAGES,\n  SET_GROUP_READ_MESSAGE,\n  SET_GROUP_TYPING_INDICATOR,\n  SET_LATEST_GROUP_STATE,\n  SET_PINNED_MESSAGES,\n  UPDATE_GROUP_AVATAR,\n  UPDATE_GROUP_NAME,\n} from \"./types\";\n\nconst initialState: GroupConversationsState = {\n  conversations: {},\n  messages: {},\n  groupFiles: {},\n  members: {},\n  typing: {},\n  pinnedMessages: {},\n  errMsgs: {},\n};\n\nconst reducer = (\n  state = initialState,\n  action: GroupConversationsActionTypes\n) => {\n  switch (action.type) {\n    case ADD_GROUP: {\n      return {\n        ...state,\n        conversations: action.conversations,\n        members: action.members,\n      };\n    }\n    case ADD_MEMBERS: {\n      return {\n        ...state,\n        conversations: action.conversations,\n        members: action.members,\n      };\n    }\n    case REMOVE_MEMBERS: {\n      return {\n        ...state,\n        conversations: action.conversations,\n        members: action.members,\n      };\n    }\n    case UPDATE_GROUP_NAME: {\n      return { ...state, conversations: action.conversations };\n    }\n    case UPDATE_GROUP_AVATAR:\n      return {\n        ...state,\n        conversations: action.conversations,\n      };\n    case SET_GROUP_MESSAGE: {\n      return {\n        ...state,\n        conversations: action.conversations,\n        messages: action.messages,\n        groupFiles: action.groupFiles,\n      };\n    }\n    case SET_ERR_GROUP_MESSAGE: {\n      return {\n        ...state,\n        errMsgs: action.errMsgs,\n      };\n    }\n    case SET_FILES_BYTES:\n      return {\n        ...state,\n        groupFiles: action.filesBytes,\n      };\n    case SET_GROUP_MESSAGES: {\n      return {\n        ...state,\n        messages: action.messages,\n        conversations: action.conversations,\n      };\n    }\n    case SET_LATEST_GROUP_STATE: {\n      return {\n        ...state,\n        conversations: action.conversations,\n        messages: action.messages,\n        members: action.members,\n      };\n    }\n    case SET_GROUP_TYPING_INDICATOR: {\n      return { ...state, typing: action.typing };\n    }\n    case SET_GROUP_READ_MESSAGE: {\n      return { ...state, messages: { ...action.messages } };\n    }\n    case SET_PINNED_MESSAGES: {\n      const { conversations, pinnedMessages } = { ...action };\n\n      return {\n        ...state,\n        conversations,\n        pinnedMessages,\n      };\n    }\n    case SET_CONVERSATIONS: {\n      const { conversations } = action;\n      return {\n        ...state,\n        conversations,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { PreferenceAction, PreferenceState, SET_PREFERENCE } from \"./types\";\n\nconst initialState: PreferenceState = {\n  readReceipt: false,\n  typingIndicator: false,\n  agentReadReceipt: {},\n  agentTypingIndicator: {},\n  groupReadReceipt: {},\n  groupTypingIndicator: {},\n};\n\nconst reducer = (state = initialState, action: PreferenceAction) => {\n  switch (action.type) {\n    case SET_PREFERENCE:\n      return {\n        ...state,\n        ...action.preference,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  ProfileActionTypes,\n  ProfileState,\n  SET_USERNAME,\n  SET_PROFILE,\n} from \"./types\";\n\nconst initialState: ProfileState = {\n  id: null,\n  username: null, // TODO: change this to nickname in next clean up\n  fields: {},\n};\n\nconst reducer = (state = initialState, action: ProfileActionTypes) => {\n  switch (action.type) {\n    case SET_USERNAME:\n      return {\n        ...state,\n        username: action.username,\n        id: action.id,\n      };\n    case SET_PROFILE:\n      return {\n        ...state,\n        username: action.nickname,\n        id: action.id,\n        fields: action.fields,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  P2PMessageActionType,\n  P2PMessageConversationState,\n  SET_MESSAGES,\n  SET_FILES,\n  SET_PINNED,\n  SET_TYPING,\n  SET_RECEIPTS,\n  SET_ERR_MESSAGE,\n} from \"./types\";\n\nconst initialState: P2PMessageConversationState = {\n  conversations: {},\n  messages: {},\n  receipts: {},\n  files: {},\n  typing: {},\n  pinned: {},\n  errMsgs: {},\n};\n\n// Hashes within the redux state are base64 strings with u prepended except for FileHash (except when used as key)\nconst reducer = (state = initialState, action: P2PMessageActionType) => {\n  switch (action.type) {\n    case SET_MESSAGES:\n      return {\n        ...state,\n        conversations: action.state.conversations,\n        messages: action.state.messages,\n        receipts: action.state.receipts,\n      };\n    case SET_ERR_MESSAGE:\n      return { ...state, errMsgs: action.state.errMsgs };\n    case SET_RECEIPTS:\n      return {\n        ...state,\n        receipts: action.state,\n      };\n    case SET_FILES:\n      return {\n        ...state,\n        files: action.state,\n      };\n    case SET_TYPING:\n      return {\n        ...state,\n        typing: action.state,\n      };\n    case SET_PINNED:\n      return {\n        ...state,\n        conversations: action.state.conversations,\n        pinned: action.state.pinned,\n      };\n    // case PIN_MESSAGE:\n    //   var stateToAppendPin = state;\n    //   const pinConversant = action.state.conversant;\n\n    //   for (const [key, value] of Object.entries(action.state.messages)) {\n    //     const existing =\n    //       stateToAppendPin.conversations[pinConversant] !== undefined;\n    //     if (existing) {\n    //       if (\n    //         stateToAppendPin.conversations[pinConversant].pinned === undefined\n    //       ) {\n    //         stateToAppendPin.conversations[pinConversant].pinned = [key];\n    //       } else if (\n    //         !stateToAppendPin.conversations[pinConversant].pinned.includes(key)\n    //       ) {\n    //         stateToAppendPin.conversations[pinConversant].pinned.push(key);\n    //       } else {\n    //         continue;\n    //       }\n    //     }\n    //     if (stateToAppendPin.pinned[key] === undefined) {\n    //       stateToAppendPin.pinned[key] = value;\n    //     } else continue;\n    //   }\n\n    //   return { ...stateToAppendPin };\n\n    // case UNPIN_MESSAGE:\n    //   const stateToRemovePin = state;\n    //   const unpinConversant = action.state.conversant;\n\n    //   Object.keys(action.state.messages).forEach((key) => {\n    //     const existing =\n    //       stateToRemovePin.conversations[unpinConversant] !== undefined;\n\n    //     if (existing) {\n    //       if (stateToRemovePin.conversations[unpinConversant].pinned === undefined) {\n    //         stateToRemovePin.conversations[unpinConversant].pinned = [];\n    //       } else if (stateToRemovePin.conversations[unpinConversant].pinned.includes(key)) {\n    //         const index =\n    //           stateToRemovePin.conversations[unpinConversant].pinned.indexOf(\n    //             key\n    //           );\n    //         if (index > -1)\n    //           stateToRemovePin.conversations[unpinConversant].pinned.splice(\n    //             index,\n    //             1\n    //           );\n    //       }\n\n    //       if (stateToRemovePin.pinned[key]) {\n    //         delete stateToRemovePin.pinned[key];\n    //       }\n    //     }\n    //   });\n\n    //   return { ...stateToRemovePin };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { LanguageActionTypes, LanguageState, SET_LANGUAGE } from \"./types\";\n\nconst initialState: LanguageState = {\n  language: null,\n};\n\nconst reducer = (state = initialState, action: LanguageActionTypes) => {\n  switch (action.type) {\n    case SET_LANGUAGE:\n      localStorage.setItem(\"language\", action.language);\n      return {\n        ...state,\n        language: action.language,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { ErrorActionType, ErrorState, PUSH_ERROR, SHIFT_ERROR } from \"./types\";\n\nconst initialState: ErrorState = {\n  errors: [],\n};\nconst errorReducer = (state = initialState, action: ErrorActionType) => {\n  switch (action.type) {\n    case PUSH_ERROR:\n      const curr = [...state.errors, action.error];\n      return { ...state, errors: curr };\n    case SHIFT_ERROR:\n      return { ...state, errors: action.errors };\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { GifActionType, SET_GIFS } from \"./types\";\n\nconst initialState = {\n  gifs: {},\n  categories: {},\n};\n\nconst reducer = (state = initialState, action: GifActionType) => {\n  switch (action.type) {\n    case SET_GIFS:\n      let currentState = state;\n      currentState.gifs = action.state;\n      return currentState;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport contactsReducer from \"./contacts/reducer\";\nimport groupReducer from \"./group/reducer\";\nimport preferenceReducer from \"./preference/reducer\";\nimport profileReducer from \"./profile/reducer\";\nimport p2pmessagesReducer from \"./p2pmessages/reducer\";\nimport languageReducer from \"./language/reducer\";\nimport errorReducer from \"./error/reducer\";\nimport gifReducer from \"./gif/reducer\";\n\nconst rootReducer = combineReducers({\n  profile: profileReducer,\n  contacts: contactsReducer,\n  preference: preferenceReducer,\n  groups: groupReducer,\n  p2pmessages: p2pmessagesReducer,\n  language: languageReducer,\n  error: errorReducer,\n  gif: gifReducer,\n});\n\nexport default rootReducer;\n","import { AnyAction, applyMiddleware, createStore as create } from \"redux\";\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\nimport {\n  callZome,\n  client,\n  getAgentId,\n  init,\n  retry,\n} from \"../connection/holochainClient\";\nimport rootReducer from \"./reducers\";\nimport { RootState } from \"./types\";\n\nconst createStore = (args?: Object) => {\n  const modifiedThunk = thunk.withExtraArgument({\n    callZome,\n    getAgentId,\n    retry,\n    client,\n    init,\n    ...args,\n  });\n\n  return create(\n    rootReducer,\n    applyMiddleware(modifiedThunk as ThunkMiddleware<RootState, AnyAction>)\n  );\n};\n\nexport default createStore;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"style_controls__2gscS\",\"play-pause\":\"style_play-pause__2Bgys\",\"range-slider-expand\":\"style_range-slider-expand__1y37Y\",\"range-slider\":\"style_range-slider__1leiI\",\"slider-volume\":\"style_slider-volume__1u5c4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"member-page\":\"style_member-page__2gB0m\",\"icon\":\"style_icon__7xzbp\",\"member-title\":\"style_member-title__2-_Xp\",\"member-name\":\"style_member-name__1hzQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"style_register__1IRba\",\"form\":\"style_form__2MPyA\",\"label\":\"style_label__2XMD-\",\"toolbar\":\"style_toolbar__jcPVP\",\"buttons\":\"style_buttons__2MT9g\",\"icon\":\"style_icon__ZLy0M\",\"avatar-button\":\"style_avatar-button__28t1v\",\"modal\":\"style_modal__1pMpC\",\"modal-wrapper\":\"style_modal-wrapper__3BLWX\"};","import {\n  HolochainClient,\n  HoloClient,\n  WebSdkClient,\n} from \"@holochain-open-dev/cell-client\";\nimport { AgentPubKey, AppSignalCb, AppWebsocket } from \"@holochain/client\";\nimport { store } from \"../containers/ReduxContainer\";\nimport { handleSignal } from \"../redux/signal/actions\";\nimport { CallZomeConfig } from \"../redux/types\";\nimport { appId, appUrl, ENV } from \"./constants\";\n// @ts-ignore\nglobal.COMB = undefined;\n// @ts-ignore\nwindow.COMB = require(\"@holo-host/comb\").COMB;\n\nexport let client: null | HolochainClient | HoloClient = null;\n\nlet signalHandler: AppSignalCb = (signal) =>\n  store?.dispatch(\n    handleSignal(signal.data.payload.name, signal.data.payload.payload)\n  );\n\nconst createClient = async (\n  env: string\n): Promise<HoloClient | HolochainClient | null> => {\n  switch (env) {\n    case \"HOLO\":\n    case \"HCC\": {\n      const branding = {\n        logo_url: \"assets/icon/kizuna_logo.png\",\n        app_name: \"Kizuna Messaging App\",\n        skip_registration: true,\n      };\n      const client = new WebSdkClient(appUrl()!, branding);\n\n      await client.connection.ready();\n      await client.connection.signIn();\n\n      const appInfo = await client.connection.appInfo(appId());\n\n      console.log(\"here is the appInfo, \", appInfo);\n\n      if (!appInfo.cell_data)\n        throw new Error(`Holo appInfo() failed: ${JSON.stringify(appInfo)}`);\n\n      const cellData = appInfo.cell_data[0];\n      console.log(\"the cell data is: \", cellData);\n\n      // TODO: remove this when chaperone is fixed\n      if (!(cellData.cell_id[0] instanceof Uint8Array)) {\n        cellData.cell_id = [\n          new Uint8Array((cellData.cell_id[0] as any).data),\n          new Uint8Array((cellData.cell_id[1] as any).data),\n        ] as any;\n      }\n\n      const holoClient = new HoloClient(client, cellData);\n      holoClient.addSignalHandler(signalHandler);\n      return holoClient;\n    }\n    case \"HCDEV\":\n    case \"HC\": {\n      const appWs = await AppWebsocket.connect(\n        appUrl() as string,\n        60000,\n        signalHandler\n      );\n\n      const appInfo = await appWs.appInfo({\n        installed_app_id: appId() as string,\n      });\n      const cellData = appInfo.cell_data[0];\n\n      return new HolochainClient(appWs as any, cellData);\n    }\n    default: {\n      return null;\n    }\n  }\n};\n\nexport const init: () => any = async () => {\n  if (client) return client;\n  try {\n    client = await createClient(ENV);\n    return client;\n  } catch (error) {\n    Object.values(error as object).forEach((e) => console.error(e));\n    console.error(error);\n    throw error;\n  }\n};\n\nlet myAgentId: AgentPubKey | null;\n\n/* DO NOT USE THIS AS IT IS BUT INSTEAD USE THE getAgentId() ACTION FROM PROFILE INSTEAD */\nexport const getAgentId: () => Promise<AgentPubKey | null> = async () => {\n  if (myAgentId) return myAgentId;\n  await init();\n  try {\n    const info = await client?.cellId[1];\n    if (info) return info;\n    return null;\n  } catch (e) {\n    console.warn(e);\n  }\n  return null;\n};\n\nconst backOff = (count: number) => {\n  let waitTime = (2 ** count + Math.random()) * 1000;\n  console.log(\"Retrying after \", waitTime);\n  return new Promise((resolve) => setTimeout(resolve, waitTime));\n};\n\nexport const retry: (config: CallZomeConfig) => Promise<any> = async (\n  config\n) => {\n  console.log(\"entering backoff\");\n  await init();\n\n  const { zomeName, fnName, payload = null } = config;\n\n  const max_retries = 5;\n  let retryCount = 0;\n  let callFailed = true;\n\n  while (callFailed && retryCount < max_retries) {\n    try {\n      return await client?.callZome(\n        zomeName,\n        fnName,\n        payload,\n        process.env.REACT_APP_ENV === \"HC\" ||\n          process.env.REACT_APP_ENV === \"HCDEV\"\n          ? 30000\n          : undefined\n      );\n    } catch (e) {\n      console.warn(e);\n      const { type = null, data = null } = { ...(e as any) };\n      if (type === \"error\") {\n        switch (data?.type) {\n          case \"ribosome_error\":\n            console.log(\"ribsosome error\", e);\n\n            const networkRegex = /Network error/;\n            const networkMatch = networkRegex.exec(data.data);\n\n            if (networkMatch !== null) {\n              await backOff(retryCount);\n              retryCount += 1;\n            } else {\n              callFailed = false;\n              const regex = /Guest\\(\"([\\s\\S]*?)\"\\)/;\n              const result = regex.exec(data.data);\n              throw {\n                type: \"error\",\n                function: fnName,\n                message: result ? result[1] : \"Something went wrong\",\n              };\n            }\n            break;\n          case \"internal_error\":\n            console.log(\"internal error\", e);\n            if (retryCount > max_retries) {\n              throw {\n                type: \"error\",\n                function: fnName,\n                message:\n                  \"An internal error occured. This is likely a bug in holochain.\",\n              };\n            } else {\n              await backOff(retryCount);\n              retryCount += 1;\n            }\n            break;\n          default:\n            console.log(\"default error\", e);\n            if (retryCount > max_retries) {\n              throw e;\n            } else {\n              await backOff(retryCount);\n              retryCount += 1;\n            }\n        }\n      }\n    }\n  }\n};\n\nexport const callZome: (config: CallZomeConfig) => Promise<any> = async (\n  config\n) => {\n  await init();\n\n  const {\n    // cellId = info?.cell_data[0].cell_id,\n    zomeName,\n    fnName,\n    // provenance = info?.cell_data[0].cell_id[1],\n    payload = null,\n  } = config;\n  try {\n    return await client?.callZome(\n      zomeName,\n      fnName,\n      payload,\n      process.env.REACT_APP_ENV === \"HC\" ||\n        process.env.REACT_APP_ENV === \"HCDEV\"\n        ? 60000\n        : undefined\n    );\n  } catch (e) {\n    console.log(\n      \"zome call has failed in zome: \",\n      zomeName,\n      \" with call \",\n      fnName,\n      \". Error: \",\n      e\n    );\n    const { type = null, data = null } = { ...(e as any) };\n    if (type === \"error\") {\n      switch (data?.type) {\n        case \"ribosome_error\": {\n          const regex = /Guest\\(\"([\\s\\S]*?)\"\\)/;\n          const result = regex.exec(data.data);\n          throw {\n            type: \"error\",\n            function: fnName,\n            message: result ? result[1] : \"Something went wrong\",\n          };\n        }\n        case \"internal_error\": {\n          /*\n            temporarily throwing a custom error for any internal_error\n            until we have a better grasp of how to handle each error separately.\n          */\n          throw {\n            type: \"error\",\n            function: fnName,\n            message: data.data,\n          };\n        }\n        default:\n          throw e;\n      }\n    }\n\n    throw e;\n  }\n};\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { ThunkAction } from \"../../types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../../redux/error/actions\";\nimport { AgentPubKeyBase64, SET_PINNED } from \"../types\";\nimport { transformZomeDataToUIData } from \"./helpers/transformZomeDateToUIData\";\n\n// action to get all pinned messages\nexport const getPinnedMessages =\n  (conversant: AgentPubKeyBase64): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    try {\n      // CALL ZOME\n      const pinnedMessages = await callZome({\n        zomeName: ZOMES.P2PMESSAGE,\n        fnName: FUNCTIONS[ZOMES.P2PMESSAGE].GET_PINNED_MESSAGES,\n        payload: Buffer.from(deserializeHash(conversant)),\n      });\n\n      // DISPATCH TO REDUCER\n      if (pinnedMessages?.type !== \"error\") {\n        const contactsState = { ...getState().contacts.contacts };\n        const profile = { ...getState().profile };\n        const profileList = {\n          ...contactsState,\n          [profile.id!]: {\n            id: profile.id!,\n            username: profile.username!,\n            fields: profile.fields,\n          },\n        };\n        const toDispatch = transformZomeDataToUIData(\n          pinnedMessages,\n          profileList\n        );\n\n        let currentState = { ...getState().p2pmessages };\n\n        if (currentState.conversations[conversant] === undefined) {\n          currentState.conversations[conversant] = {\n            messages: [],\n            pinned: [],\n          };\n          for (const [key, value] of Object.entries(toDispatch.messages)) {\n            if (!currentState.conversations[conversant].pinned.includes(key)) {\n              currentState.conversations[conversant].pinned.push(key);\n            }\n            if (currentState.pinned[key] === undefined) {\n              currentState.pinned[key] = value;\n            } else {\n              continue;\n            }\n          }\n        } else {\n          if (currentState.conversations[conversant].pinned === undefined) {\n            currentState.conversations[conversant].pinned = [];\n            for (const [key, value] of Object.entries(toDispatch.messages)) {\n              if (\n                !currentState.conversations[conversant].pinned.includes(key)\n              ) {\n                currentState.conversations[conversant].pinned.push(key);\n              }\n              if (currentState.pinned[key] === undefined) {\n                currentState.pinned[key] = value;\n              } else {\n                continue;\n              }\n            }\n          } else {\n            for (const [key, value] of Object.entries(toDispatch.messages)) {\n              if (\n                !currentState.conversations[conversant].pinned.includes(key)\n              ) {\n                currentState.conversations[conversant].pinned.push(key);\n              }\n              if (currentState.pinned[key] === undefined) {\n                currentState.pinned[key] = value;\n              } else {\n                continue;\n              }\n            }\n          }\n        }\n\n        dispatch({\n          type: SET_PINNED,\n          state: currentState,\n        });\n        // dispatch({\n        //   type: SET_PINNED,\n        //   state: { conversant: conversant, messages: toDispatch.messages },\n        // });\n\n        return toDispatch;\n      }\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n","import { ThunkAction } from \"../../types\";\nimport { P2PMessage, P2PMessageReceipt, P2PFile, SET_MESSAGES } from \"../types\";\n\n/*\n    append a message, receipt, file bytes [no fetch] into the redux after a user sends a message\n    append a message, receipt, file bytes [with fetch] into the redux after a receiver receives a signal\n*/\nexport const appendMessage =\n  (state: {\n    message: P2PMessage;\n    receipt?: P2PMessageReceipt;\n    file?: P2PFile;\n    key?: string;\n  }): ThunkAction =>\n  async (dispatch, getState) => {\n    let currentState = { ...getState().p2pmessages };\n\n    const conversantID = state.key ? state.key : state.message.receiver.id;\n    const messageHash = state.message.p2pMessageEntryHash;\n    const receiptHash = state.receipt\n      ? state.receipt.p2pMessageReceiptEntryHash\n      : undefined;\n\n    if (currentState.conversations[conversantID]) {\n      currentState.conversations[conversantID] = {\n        pinned: [...currentState.conversations[conversantID].pinned],\n        messages: [\n          messageHash,\n          ...currentState.conversations[conversantID].messages,\n        ],\n      };\n    } else {\n      currentState.conversations[conversantID] = {\n        messages: [messageHash],\n        pinned: [],\n      };\n    }\n\n    if (state.file)\n      currentState.files[state.file.fileHash] = state.file.fileBytes;\n\n    currentState.messages = {\n      ...currentState.messages,\n      [messageHash]: state.message,\n    };\n\n    if (receiptHash) currentState.receipts[receiptHash] = state.receipt!;\n    // currentState.receipts = {\n    //   ...currentState.receipts,\n    //   [receiptHash]: state.receipt,\n    // };\n\n    dispatch({\n      type: SET_MESSAGES,\n      state: currentState,\n    });\n\n    return true;\n  };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__2yePJ\",\"avatar\":\"style_avatar__2AEM3\",\"container\":\"style_container__3rZpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file\":\"style_file__27RDJ\",\"file-name\":\"style_file-name__3vGib\",\"file-size\":\"style_file-size__2GKYG\",\"file-icon-dark\":\"style_file-icon-dark__2I31W\",\"file-icon-light\":\"style_file-icon-light__1U9Kf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"style_content__aLpb2\",\"image-cropper\":\"style_image-cropper__3Bzfw\",\"header\":\"style_header__2qiAP\",\"footer\":\"style_footer__yyGe5\",\"react-crop\":\"style_react-crop__2ourV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"style_login__1hf3N\",\"form\":\"style_form__1gyhK\",\"label\":\"style_label__1PI6L\",\"toolbar\":\"style_toolbar__17MVN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__2l0cM\",\"error-input\":\"style_error-input__2EDgX\",\"error-container\":\"style_error-container__2w9sT\",\"error\":\"style_error__3-HlZ\"};","import { ThunkAction } from \"../../types\";\nimport { P2PMessageConversationState, SET_MESSAGES } from \"../types\";\n\n/*\n    set P2PMessageConversations into the redux state\n*/\nexport const setMessages =\n  (state: P2PMessageConversationState): ThunkAction =>\n  (dispatch, getState) => {\n    // get state\n    let currentState = { ...getState().p2pmessages };\n    let { conversations, messages, receipts } = state;\n\n    for (const [key, value] of Object.entries(conversations)) {\n      let existing = currentState.conversations[key];\n      if (existing === undefined) {\n        currentState.conversations[key] = {\n          messages: value.messages,\n          pinned: [],\n        };\n      } else\n        currentState.conversations[key] = {\n          messages: [...new Set(existing.messages.concat(value.messages))],\n          pinned: [],\n        };\n    }\n    currentState.messages = {\n      ...currentState.messages,\n      ...messages,\n    };\n    currentState.receipts = {\n      ...currentState.receipts,\n      ...receipts,\n    };\n\n    dispatch({\n      type: SET_MESSAGES,\n      state: currentState,\n    });\n    return true;\n  };\n","import { ThunkAction } from \"../../types\";\nimport { P2PMessageReceipt, SET_RECEIPTS } from \"../types\";\n\n/*\n    append a receipt into the redux state \n    after receving a signal (e.g., message has been read)\n*/\nexport const appendReceipt =\n  (state: P2PMessageReceipt): ThunkAction =>\n  async (dispatch, getState) => {\n    let currentState = { ...getState().p2pmessages };\n\n    const receipt = state;\n    const receiptHash = state.p2pMessageReceiptEntryHash;\n\n    receipt.p2pMessageEntryHashes.forEach((hash) => {\n      if (currentState.messages[hash] !== undefined) {\n        currentState.messages[hash].receipts.push(receiptHash);\n      }\n    });\n\n    currentState.receipts = {\n      ...currentState.receipts,\n      [receiptHash]: receipt,\n    };\n\n    dispatch({\n      type: SET_RECEIPTS,\n      state: currentState.receipts,\n    });\n\n    return true;\n  };\n","import { ThunkAction } from \"../../../types\";\nimport { FUNCTIONS, ZOMES } from \"../../../../connection/types\";\nimport { pushError } from \"../../../../redux/error/actions\";\nimport { deserializeHash } from \"@holochain-open-dev/core-types\";\n\nconst recommitMessage =\n  (payload: any): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    let message = payload;\n\n    try {\n      await callZome({\n        zomeName: ZOMES.P2PMESSAGE,\n        fnName: FUNCTIONS[ZOMES.P2PMESSAGE].COMMIT_MESSAGE_TO_RECEIVER,\n        payload: Buffer.from(deserializeHash(message.p2pMessageEntryHash)),\n      });\n\n      return true;\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n\nexport default recommitMessage;\n","export const SET_LANGUAGE = \"SET_LANGUAGE\";\n\nexport type languages = \"en\" | \"jp\";\n\nexport interface LanguageState {\n  language: languages | null;\n}\n\nexport interface SetLanguage {\n  type: typeof SET_LANGUAGE;\n  language: languages;\n}\n\nexport interface Languages {\n  language: string;\n  code: languages;\n}\n\nexport type LanguageActionTypes = SetLanguage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"style_menu__C0WwI\",\"container\":\"style_container__3CTeu\",\"identicon\":\"style_identicon__1z4iW\",\"avatar\":\"style_avatar__2ofpZ\",\"version\":\"style_version__2tuEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"style_toolbar__2dB4u\",\"content\":\"style_content__1CXxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"style_chat__3kLZ6\",\"title-container\":\"style_title-container__E-R-r\",\"avatar\":\"style_avatar__1SPMS\",\"title\":\"style_title__1l1FZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatdetails\":\"style_chatdetails__1PZL-\",\"titlebar\":\"style_titlebar__3OOiT\",\"title\":\"style_title__3P2qo\",\"month\":\"style_month__1RYcT\",\"mediarow\":\"style_mediarow__1VBzj\",\"mediacard\":\"style_mediacard__3gdyr\",\"mediadiv\":\"style_mediadiv__2fS_a\",\"filelist\":\"style_filelist__1FxpQ\",\"filecard\":\"style_filecard__29HIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"style_title__37T1W\",\"title-container\":\"style_title-container__nJyXL\",\"avatar\":\"style_avatar__I9T18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"style_contacts__3Y8Wl\",\"close-label\":\"style_close-label__1yiho\",\"close-button\":\"style_close-button__3-eYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing\":\"style_landing__1AJBK\",\"logo\":\"style_logo__1i6xk\",\"landingImage\":\"style_landingImage__3JKn5\",\"actions\":\"style_actions__2DAvl\",\"register-label\":\"style_register-label__3U74A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"style_icon__2nRa9\",\"avatar\":\"style_avatar__3dQuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"style_icon__-mJ3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video-player\":\"style_video-player__pxhnt\",\"video\":\"style_video__10sA-\",\"content\":\"style_content__3iRlb\",\"modal-control\":\"style_modal-control__1fdb7\",\"slider-volume\":\"style_slider-volume__6jcJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"style_video__2ufHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typing\":\"style_typing__203NC\",\"dot\":\"style_dot__1YRwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"style_row__RQQHj\",\"chip\":\"style_chip__3-Ro1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"style_toolbar__3sSyu\",\"file-view\":\"style_file-view__2lYJo\",\"col\":\"style_col__3sOY-\",\"close-button\":\"style_close-button__2AE8Y\",\"textarea\":\"style_textarea___6FLN\",\"card\":\"style_card__3Bl2A\",\"blackborder\":\"style_blackborder__1GH8W\"};","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { ThunkAction } from \"../../types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\n\nexport const isTyping =\n  (agent: string, isTyping: boolean): ThunkAction =>\n  async (dispatch, _getState, { callZome }) => {\n    let payload = {\n      agent: Buffer.from(deserializeHash(agent)),\n      isTyping: isTyping,\n    };\n\n    await callZome({\n      zomeName: ZOMES.P2PMESSAGE,\n      fnName: FUNCTIONS[ZOMES.P2PMESSAGE].TYPING,\n      payload: payload,\n    });\n\n    return null;\n  };\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { dateToTimestamp } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport { P2PMessage, SET_PINNED } from \"../types\";\n\nexport const pinMessage =\n  (messages: P2PMessage[]): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    const timestamp = dateToTimestamp(new Date());\n    let currentState = { ...getState().p2pmessages };\n\n    const hashes: Uint8Array[] = [];\n    messages.map((message) =>\n      hashes.push(deserializeHash(message.p2pMessageEntryHash))\n    );\n\n    const conversants = [\n      Buffer.from(deserializeHash(messages[0].author.id)),\n      Buffer.from(deserializeHash(messages[0].receiver.id)),\n    ];\n\n    const input = {\n      message_hashes: hashes,\n      conversants: conversants,\n      timestamp: timestamp,\n      status: currentState.pinned[messages[0].p2pMessageEntryHash]\n        ? \"Unpinned\"\n        : \"Pinned\",\n    };\n\n    try {\n      const pinnedMessages = await callZome({\n        zomeName: ZOMES.P2PMESSAGE,\n        fnName: FUNCTIONS[ZOMES.P2PMESSAGE].PIN_MESSAGE,\n        payload: input,\n      });\n\n      const pin: any = Object.values(pinnedMessages)[0];\n      const pinStatus = pin.status;\n\n      const conversant =\n        getState().profile.id === pin.conversants[0]\n          ? serializeHash(pin.conversants[0])\n          : serializeHash(pin.conversants[1]);\n\n      pin.id.forEach((id: Uint8Array) => {\n        const messageHash = serializeHash(id);\n        const pinnedMessage = currentState.messages[messageHash];\n\n        if (currentState.conversations[conversant]) {\n          // initialize any undefined values\n          if (!currentState.conversations[conversant].pinned) {\n            currentState.conversations[conversant].pinned = [];\n          }\n\n          // pinned\n          if (pinStatus === \"pinned\") {\n            // push hash into conversations.pinned\n            if (\n              !currentState.conversations[conversant].pinned.includes(\n                messageHash\n              )\n            ) {\n              currentState.conversations[conversant].pinned.push(messageHash);\n            }\n            // push message into pinned\n            if (!currentState.pinned[messageHash]) {\n              currentState.pinned[messageHash] = pinnedMessage;\n            }\n          }\n\n          // unpinned\n          if (pinStatus === \"unpined\") {\n            // remove hash from conversations.pinned\n            if (\n              currentState.conversations[conversant].pinned.includes(\n                messageHash\n              )\n            ) {\n              const index =\n                currentState.conversations[conversant].pinned.indexOf(\n                  messageHash\n                );\n              if (index > -1)\n                currentState.conversations[conversant].pinned.splice(index, 1);\n            }\n            // remove hash from pinned\n            if (currentState.pinned[messageHash]) {\n              delete currentState.pinned[messageHash];\n            }\n          }\n        }\n      });\n\n      // if (pinStatus.pinstatus === \"pinned\") {\n      //   dispatch({\n      //     type: PIN_MESSAGE,\n      //     state: { conversant, messages: pinMessages },\n      //   });\n      // } else {\n      //   dispatch({\n      //     type: UNPIN_MESSAGE,\n      //     state: { conversant, messages: pinMessages },\n      //   });\n      // }\n\n      dispatch({\n        type: SET_PINNED,\n        state: currentState,\n      });\n\n      return true;\n    } catch (e) {}\n    return false;\n  };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3nacn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"style_search__1P1Jo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"style_contacts-list__2633z\",\"add-label\":\"style_add-label__3UjKf\",\"my-custom-modal-css\":\"style_my-custom-modal-css__2_5sM\",\"modal-wrapper\":\"style_modal-wrapper__1uXqE\",\"modal\":\"style_modal__3XaVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"identifier\":\"style_identifier__3vwzh\",\"avatar\":\"style_avatar__1CVEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipients\":\"style_recipients__3Tz9O\",\"to\":\"style_to__3Gtm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"style_spinner__1BA-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"style_contacts-list__1o7GN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty-contacts\":\"style_empty-contacts__qKKye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"style_chat__2rr5Z\",\"item-inner\":\"style_item-inner__3Pzc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"style_image__1PE4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"me\":\"style_me__3fhVY\",\"others\":\"style_others__1jm3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message-text\":\"style_message-text__MzgzV\"};","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { ThunkAction } from \"../../types\";\nimport { P2PMessage } from \"../types\";\nimport { dateToTimestamp, timestampToDate } from \"../../../utils/helpers\";\nimport { appendReceipt } from \"./appendReceipt\";\n\nexport const readMessage =\n  (messages: P2PMessage[]): ThunkAction =>\n  async (dispatch, _getState, { callZome }) => {\n    // CONSTRUCT ZOME INPUT\n    // construct the timestamp\n    let now = new Date();\n    let timestamp = dateToTimestamp(now);\n\n    // get hashes of messages to be marked\n    let hashes: any = [];\n    messages.map((message) =>\n      hashes.push(deserializeHash(message.p2pMessageEntryHash))\n    );\n\n    // get the sender (sender = conversant since p2p)\n    let sender = Buffer.from(deserializeHash(messages[0].author.id));\n\n    let input = {\n      message_hashes: hashes,\n      sender: sender,\n      timestamp: timestamp,\n    };\n\n    // CALL ZOME\n    const readReceiptMap = await callZome({\n      zomeName: ZOMES.P2PMESSAGE,\n      fnName: FUNCTIONS[ZOMES.P2PMESSAGE].READ_MESSAGE,\n      payload: input,\n    });\n\n    // DISPATCH TO REDUCER\n    if (readReceiptMap?.type !== \"error\") {\n      let [key] = Object.keys(readReceiptMap);\n\n      let messageIDs: string[] = [];\n      readReceiptMap[key].id.forEach((id: Uint8Array) => {\n        messageIDs.push(serializeHash(id));\n      });\n\n      let p2pReceipt = {\n        p2pMessageReceiptEntryHash: key,\n        p2pMessageEntryHashes: messageIDs,\n        timestamp: timestampToDate(readReceiptMap[key].status.timestamp),\n        status: readReceiptMap[key].status.status,\n      };\n\n      dispatch(appendReceipt(p2pReceipt));\n      return true;\n    }\n\n    // ERROR\n    return false;\n  };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar-container\":\"style_avatar-container__2Qls7\",\"contacts-list\":\"style_contacts-list__3gSNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty-contacts\":\"style_empty-contacts__JmFbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty-conversations\":\"style_empty-conversations__2L30A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversation\":\"style_conversation__28KWI\",\"empty-conversations\":\"style_empty-conversations__1_1Ss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home-tab-bar\":\"style_home-tab-bar__2vOP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__3PkRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popover-list\":\"style_popover-list__14lHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings-list\":\"style_settings-list__i3vNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"err\":\"style_err__1GKMd\"};","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { AgentPubKey } from \"@holochain/client\";\nimport { FUNCTIONS, ZOMES } from \"../../../../connection/types\";\nimport {\n  deserializeAgentPubKey,\n  timestampToDate,\n} from \"../../../../utils/helpers\";\nimport { AgentProfile, Profile } from \"../../../profile/types\";\nimport { ThunkAction } from \"../../../types\";\nimport { AddGroupAction, ADD_GROUP, GroupConversation } from \"../../types\";\n\nconst addedToGroup =\n  (signalPayload: any): ThunkAction =>\n  async (dispatch, getState, { callZome, getAgentId }) => {\n    const { payload } = signalPayload;\n\n    const state = getState();\n    const contacts = state.contacts.contacts;\n    const { username, fields } = state.profile; // At this point, username is non-nullable\n    const id = await getAgentId();\n    const myAgentId = serializeHash(id!); // AgentPubKey should be non-nullable here\n\n    const groupData: GroupConversation = {\n      originalGroupId: serializeHash(payload.groupId),\n      originalGroupRevisionId: serializeHash(payload.groupRevisionId),\n      name: payload.latestName,\n      members: payload.members.map((member: Buffer) => serializeHash(member)),\n      createdAt: timestampToDate(payload.created),\n      creator: serializeHash(payload.creator),\n      /* \n        Messages are empty at the creation of group\n        This creates a tad bit of delay in rendering group in Conversations page\n        as group conversation is created first and then the first message\n        arrives with signal\n      */\n      messages: [],\n      pinnedMessages: [],\n      avatar: payload.avatar,\n    };\n\n    /* \n    Attempt to get the profile of group members from own contacts list.\n    If not found from contacts nor own AgentPubKey, then push it to\n    undefinedProfiles\n    */\n    const groupMembers = [...groupData.members, groupData.creator];\n    const membersProfile: { [key: string]: Profile } = {};\n    const nonAddedProfiles: AgentPubKey[] = groupMembers.reduce(\n      (res, member: any) => {\n        const memberProfile: Profile | null = contacts[member]\n          ? contacts[member]\n          : member === myAgentId\n          ? {\n              id: myAgentId,\n              username: username!,\n              fields,\n            }\n          : null;\n        if (memberProfile) {\n          membersProfile[member] = memberProfile;\n        } else {\n          const pubkey = deserializeAgentPubKey(member);\n          res.push(pubkey);\n        }\n        return res;\n      },\n      [] as AgentPubKey[]\n    );\n\n    // get the profiles not in contacts from HC\n    // TODO: change for profiles module\n    if (nonAddedProfiles?.length) {\n      const nonAddedProfilesB64 = nonAddedProfiles.map((nonAddedProfile) =>\n        serializeHash(nonAddedProfile)\n      );\n      const profiles = await callZome({\n        zomeName: ZOMES.PROFILES,\n        fnName: FUNCTIONS[ZOMES.PROFILES].GET_AGENTS_PROFILES,\n        payload: nonAddedProfilesB64,\n      });\n      profiles.forEach((agentProfile: AgentProfile) => {\n        const id = agentProfile.agent_pub_key;\n        membersProfile[id] = {\n          id,\n          username: agentProfile.profile.nickname,\n          fields: agentProfile.profile.fields.avatar\n            ? {\n                avatar: agentProfile.profile.fields.avatar,\n              }\n            : {},\n        };\n      });\n    }\n\n    let groupEntryHash: string = groupData.originalGroupId;\n    let newConversation: { [key: string]: GroupConversation } = {\n      [groupEntryHash]: groupData,\n    };\n    let conversations = state.groups.conversations;\n    conversations = {\n      ...conversations,\n      ...newConversation,\n    };\n    let members = state.groups.members;\n    members = {\n      ...members,\n      ...membersProfile,\n    };\n    dispatch<AddGroupAction>({\n      type: ADD_GROUP,\n      conversations,\n      members,\n    });\n  };\n\nexport default addedToGroup;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { timestampToDate } from \"../../../../utils/helpers\";\nimport {\n  FilePayload,\n  FilePayloadInput,\n  isImage,\n  isOther,\n  isTextPayload,\n  TextPayload,\n} from \"../../../commons/types\";\nimport { ThunkAction } from \"../../../types\";\nimport {\n  GroupConversation,\n  GroupMessage,\n  SetGroupMessageAction,\n  SET_GROUP_MESSAGE,\n} from \"../../types\";\n\nconst handleGroupMessagePayload = (payload: any) =>\n  isTextPayload(payload as TextPayload | FilePayloadInput | FilePayload)\n    ? payload\n    : {\n        type: \"FILE\",\n        fileName: payload.payload.metadata.fileName,\n        fileSize: payload.payload.metadata.fileSize,\n        fileType: isOther(payload.payload.fileType)\n          ? \"OTHER\"\n          : isImage(payload.payload.fileType)\n          ? \"IMAGE\"\n          : \"VIDEO\",\n        fileHash: serializeHash(payload.payload.metadata.fileHash),\n        thumbnail: isOther(payload.payload.fileType)\n          ? undefined\n          : payload.payload.fileType.payload.thumbnail,\n      };\n\nconst groupMessageData =\n  (signalPayload: any): ThunkAction =>\n  async (dispatch, getState) => {\n    const { payload } = signalPayload;\n    const state = getState();\n    const groupMessage: GroupMessage = {\n      groupMessageId: serializeHash(payload.messageId),\n      groupId: serializeHash(payload.groupHash),\n      author: serializeHash(payload.sender),\n      payload: handleGroupMessagePayload(payload.payload),\n      timestamp: timestampToDate(payload.created),\n      replyTo: payload.replyTo\n        ? {\n            groupId: serializeHash(payload.replyTo.content.groupHash),\n            author: serializeHash(payload.replyTo.content.sender),\n            payload: handleGroupMessagePayload(payload.replyTo.content.payload),\n            timestamp: timestampToDate(payload.replyTo.content.created),\n            /*\n              TODO: currently undefined but we will have to modify this once jumping\n              to replied message will be possible.\n            */\n            replyTo: undefined,\n            readList: {},\n          }\n        : undefined,\n      /* assume no one read the message since it just arrived as signal to the recepient */\n      readList: {},\n    };\n\n    const groupId: string = groupMessage.groupId;\n    const groupMessageId: string = groupMessage.groupMessageId;\n    const groupConversation = state.groups.conversations[groupId];\n    const currMessages = groupConversation ? groupConversation.messages : [];\n\n    const messageIds = [groupMessage.groupMessageId, ...currMessages];\n\n    const newMessage: { [key: string]: GroupMessage } = {\n      [groupMessageId]: groupMessage,\n    };\n    let messages = state.groups.messages;\n    messages = {\n      ...messages,\n      ...newMessage,\n    };\n    const groupFiles = state.groups.groupFiles;\n    const conversations: {\n      [key: string]: GroupConversation;\n    } = {\n      ...state.groups.conversations,\n      [groupId]: { ...groupConversation, messages: messageIds },\n    };\n\n    dispatch<SetGroupMessageAction>({\n      type: SET_GROUP_MESSAGE,\n      conversations,\n      messages,\n      groupFiles,\n    });\n  };\n\nexport default groupMessageData;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { timestampToDate } from \"../../../../utils/helpers\";\nimport { ThunkAction } from \"../../../types\";\nimport {\n  GroupMessage,\n  SetGroupReadMessage,\n  SET_GROUP_READ_MESSAGE,\n} from \"../../types\";\n\nconst groupMessageRead =\n  (signalPayload: any): ThunkAction =>\n  async (dispatch, getState) => {\n    const { payload } = signalPayload;\n    const state = getState();\n\n    /* \n    There is a case where the read signal comes first from another agent\n    before the groupMessage has arrived (whether through signal or with getters).\n    This is because there is really no guarantee of order in the receiving of signals.\n    And in the case that read signal comes first before groupMessage,\n    we should simply ignore the signal for read since there is no\n    message yet to attach the read status to.\n    */\n    const messagesArrived = payload.messageIds\n      .map((messageId: Uint8Array) => serializeHash(messageId))\n      .filter((messageId: string) => state.groups.messages[messageId]);\n\n    const reader = serializeHash(payload.reader);\n\n    const timestamp = timestampToDate(payload.timestamp);\n\n    const messages: { [key: string]: GroupMessage } = {\n      ...getState().groups.messages,\n    };\n\n    messagesArrived.forEach((messageId: string) => {\n      messages[messageId].readList = {\n        ...messages[messageId].readList,\n        [reader]: timestamp,\n      };\n    });\n   \n\n    dispatch<SetGroupReadMessage>({\n      type: SET_GROUP_READ_MESSAGE,\n      messages,\n    });\n  };\n\nexport default groupMessageRead;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../../connection/types\";\nimport { AgentProfile, Profile } from \"../../../profile/types\";\nimport { CallZomeConfig, ThunkAction } from \"../../../types\";\nimport {\n  GroupTypingDetail,\n  SetGroupTypingIndicator,\n  SET_GROUP_TYPING_INDICATOR,\n} from \"../../types\";\n\nconst fetchProfile = async (\n  indicatedBy: string,\n  callZome: (config: CallZomeConfig) => Promise<any>\n) => {\n  let fetchedProfile: AgentProfile = await callZome({\n    zomeName: ZOMES.PROFILES,\n    fnName: FUNCTIONS[ZOMES.PROFILES].GET_AGENT_PROFILE,\n    payload: indicatedBy,\n  });\n  let id = fetchedProfile.agent_pub_key;\n  return {\n    id: id,\n    username: fetchedProfile.profile.nickname,\n    fields: fetchedProfile.profile.fields.avatar\n      ? { avatar: fetchedProfile.profile.fields.avatar }\n      : {},\n  };\n};\n\nconst groupTypingDetail =\n  (signalPayload: any): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    const { payload } = signalPayload;\n    const groupIdB64 = serializeHash(payload.groupId);\n    const state = getState();\n    const groupTyping = state.groups.typing[groupIdB64]\n      ? state.groups.typing[groupIdB64]\n      : [];\n    const { contacts } = state.contacts;\n    const memberId = serializeHash(payload.indicatedBy);\n    const currTypers = groupTyping.map((profile: Profile) => profile.id);\n\n    /*\n    only work with typing signal if needed be.\n    Do not work with signal if we already know that the\n    typer is typing and the signal is still an indication of typing\n    and vice versa.\n    */\n    if (\n      (payload.isTyping && !currTypers.includes(memberId)) ||\n      (!payload.isTyping && currTypers.includes(memberId))\n    ) {\n      let indicatedBy: Profile = contacts[memberId]\n        ? contacts[memberId]\n        : await fetchProfile(memberId, callZome);\n      let GroupTypingDetail: GroupTypingDetail = {\n        groupId: groupIdB64,\n        indicatedBy: indicatedBy,\n        isTyping: payload.isTyping,\n      };\n\n      let typing = state.groups.typing;\n      let groupTyping = typing[GroupTypingDetail.groupId]\n        ? typing[GroupTypingDetail.groupId]\n        : [];\n      const id = groupTyping.map((profile: Profile) => profile.id);\n      if (GroupTypingDetail.isTyping) {\n        if (!id.includes(GroupTypingDetail.indicatedBy.id)) {\n          groupTyping.push(GroupTypingDetail.indicatedBy);\n        }\n      } else {\n        groupTyping = groupTyping.filter((profile) => {\n          return profile.id !== GroupTypingDetail.indicatedBy.id;\n        });\n      }\n\n      typing = {\n        ...typing,\n        [GroupTypingDetail.groupId]: groupTyping,\n      };\n\n      dispatch<SetGroupTypingIndicator>({\n        type: SET_GROUP_TYPING_INDICATOR,\n        typing,\n      });\n    }\n  };\n\nexport default groupTypingDetail;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { timestampToDate } from \"../../../../utils/helpers\";\nimport { ThunkAction } from \"../../../types\";\nimport { P2PMessage, P2PMessageReceipt } from \"../../types\";\nimport { appendMessage } from \"../../actions/appendMessage\";\n\nconst receiveP2PMessage =\n  (payload: any): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    const receivedMessage = payload.message;\n\n    const contactsState = { ...getState().contacts.contacts };\n    const profile = { ...getState().profile };\n    const profileList = {\n      ...contactsState,\n      [profile.id!]: {\n        id: profile.id!,\n        username: profile.username!,\n        fields: profile.fields,\n      },\n    };\n\n    const [messageTuple, receiptTuple] = receivedMessage;\n    const [messageID, message] = messageTuple;\n    const [receiptID, receipt] = receiptTuple!;\n\n    // sender not in contacts\n    if (!Object.keys(contactsState).includes(serializeHash(message.author))) {\n      return;\n    }\n\n    let messagePayload;\n    switch (message.payload.type) {\n      case \"TEXT\":\n        messagePayload = message.payload;\n        break;\n      case \"FILE\":\n        messagePayload = {\n          type: \"FILE\",\n          fileName: message.payload.payload.metadata.fileName,\n          fileSize: message.payload.payload.metadata.fileSize,\n          fileType: message.payload.payload.fileType.type,\n          fileHash: serializeHash(message.payload.payload.metadata.fileHash),\n          thumbnail:\n            message.payload.payload.fileType.type !== \"OTHER\"\n              ? message.payload.payload.fileType.payload.thumbnail\n              : null,\n        };\n        break;\n      default:\n        break;\n    }\n\n    let transformedReplyTo = undefined;\n    let replyToPayload = undefined;\n    if (message.replyTo !== null) {\n      switch (message.replyTo.payload.type) {\n        case \"TEXT\":\n          replyToPayload = message.replyTo.payload;\n          break;\n        case \"FILE\":\n          replyToPayload = {\n            type: \"FILE\",\n            fileName: message.replyTo.payload.payload.metadata.fileName,\n            fileSize: message.replyTo.payload.payload.metadata.fileSize,\n            fileType: message.replyTo.payload.payload.fileType.type,\n            fileHash: serializeHash(\n              message.replyTo.payload.payload.metadata.fileHash\n            ),\n            thumbnail:\n              message.replyTo.payload.payload.fileType.type !== \"OTHER\"\n                ? message.replyTo.payload.payload.fileType.payload.thumbnail\n                : null,\n          };\n          break;\n        default:\n          break;\n      }\n\n      transformedReplyTo = {\n        p2pMessageEntryHash: serializeHash(message.replyTo.hash),\n        author: profileList[serializeHash(message.replyTo.author)],\n        receiver: profileList[serializeHash(message.replyTo.receiver)],\n        payload: replyToPayload ? replyToPayload : message.replyTo.payload,\n        timestamp: timestampToDate(message.replyTo.timeSent),\n        receipts: [],\n      };\n    }\n\n    let p2pMessage: P2PMessage = {\n      p2pMessageEntryHash: serializeHash(messageID),\n      author: profileList[serializeHash(message.author)],\n      receiver: profileList[serializeHash(message.receiver)],\n      payload: messagePayload,\n      timestamp: timestampToDate(message.timeSent),\n      replyTo: transformedReplyTo ? transformedReplyTo : undefined,\n      receipts: [serializeHash(receiptID)],\n    };\n\n    let p2pReceipt: P2PMessageReceipt = {\n      p2pMessageReceiptEntryHash: serializeHash(receiptID),\n      p2pMessageEntryHashes: [serializeHash(receipt.id[0])],\n      timestamp: timestampToDate(receipt.status.timestamp),\n      status: receipt.status.status,\n    };\n\n    dispatch(\n      appendMessage({\n        message: p2pMessage,\n        receipt: p2pReceipt,\n        key: p2pMessage.author.id,\n      })\n    );\n  };\n\nexport default receiveP2PMessage;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { timestampToDate } from \"../../../../utils/helpers\";\nimport { ThunkAction } from \"../../../types\";\nimport { appendReceipt } from \"../appendReceipt\";\n\nconst receiveP2PReceipt =\n  (payload: any): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    let receiptHash = Object.keys(payload.receipt)[0];\n\n    let messageIDs: string[] = [];\n    payload.receipt[receiptHash].id.forEach((id: Uint8Array) => {\n      messageIDs.push(serializeHash(id));\n    });\n\n    let p2pReceipt = {\n      p2pMessageReceiptEntryHash: receiptHash,\n      p2pMessageEntryHashes: messageIDs,\n      timestamp: timestampToDate(payload.receipt[receiptHash].status.timestamp),\n      status: payload.receipt[receiptHash].status.status,\n    };\n\n    dispatch(appendReceipt(p2pReceipt));\n  };\n\nexport default receiveP2PReceipt;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { ThunkAction } from \"../../../types\";\nimport { PIN_MESSAGE, UNPIN_MESSAGE, P2PMessage } from \"../../types\";\n\nconst syncP2PPin =\n  (payload: any): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    let pinHash = Object.keys(payload.pin)[0];\n    const pin = payload.pin[pinHash];\n    const pinStatus = pin.status;\n    const conversants = pin.conversants;\n    const messages = getState().p2pmessages.messages;\n\n    let pinMessages: { [key: string]: P2PMessage } = {};\n    pin.id.forEach((id: Uint8Array) => {\n      const messageHash = serializeHash(id);\n      const pinnedMessage = messages[messageHash];\n      pinMessages[messageHash] = pinnedMessage;\n    });\n\n    let me = getState().profile.id;\n\n    if (pinStatus.pinstatus === \"pinned\") {\n      dispatch({\n        type: PIN_MESSAGE,\n        state: {\n          conversant:\n            serializeHash(conversants[0]) === me\n              ? serializeHash(conversants[1])\n              : serializeHash(conversants[0]),\n          messages: pinMessages,\n        },\n      });\n    } else {\n      dispatch({\n        type: UNPIN_MESSAGE,\n        state: {\n          conversant:\n            serializeHash(conversants[0]) === me\n              ? serializeHash(conversants[1])\n              : serializeHash(conversants[0]),\n          messages: pinMessages,\n        },\n      });\n    }\n  };\n\nexport default syncP2PPin;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { ThunkAction } from \"../../../types\";\nimport { SET_TYPING } from \"../../types\";\n\nconst typingP2P =\n  (payload: any): ThunkAction =>\n  async (dispatch, getState) => {\n    const contacts = getState().contacts.contacts;\n    const agentHash = serializeHash(payload.agent);\n    const isAdded: boolean = contacts[agentHash] ? true : false;\n    /* \n      We ignore the signals coming from agents that are not part\n      of the contacts list of the agent.\n    */\n\n    if (isAdded) {\n      let currentState = { ...getState().p2pmessages.typing };\n      let profile = contacts[agentHash];\n\n      if (!currentState[profile.id] && payload.is_typing) {\n        currentState[profile.id] = profile;\n      } else {\n        if (!payload.is_typing) {\n          delete currentState[profile.id];\n        }\n      }\n\n      dispatch({\n        type: SET_TYPING,\n        state: currentState,\n      });\n\n      // dispatch({\n      //   type: SET_TYPING,\n      //   state: {\n      //     profile: {\n      //       id: agentHash,\n      //       username: username,\n      //     },\n      //     isTyping: payload.is_typing,\n      //   },\n      // });\n\n      return true;\n    }\n  };\n\nexport default typingP2P;\n","import { ThunkAction } from \"../../../types\";\nimport { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { SetPinnedMessages, SET_PINNED_MESSAGES } from \"../../types\";\n\nconst pinMessageData =\n  (signalPayload: any): ThunkAction =>\n  async (dispatch, getState, { callZome, getAgentId }) => {\n    const { payload } = signalPayload;\n    const groupId = serializeHash(payload.groupHash);\n    const groupMessageId = serializeHash(payload.groupMessageHash);\n    const { conversations, pinnedMessages, message } = {\n      ...{\n        pinnedMessages: getState().groups.pinnedMessages,\n        message: getState().groups.messages[groupMessageId],\n        conversations: getState().groups.conversations,\n      },\n    };\n\n    const conversation = conversations[groupId];\n    pinnedMessages[groupMessageId] = message;\n    if (conversation.pinnedMessages)\n      conversation.pinnedMessages!.push(groupMessageId);\n    else conversation.pinnedMessages = [groupMessageId];\n\n    dispatch<SetPinnedMessages>({\n      type: SET_PINNED_MESSAGES,\n      conversations: {\n        ...conversations,\n        [groupId]: conversation,\n      },\n      pinnedMessages: {\n        ...getState().groups.pinnedMessages,\n        ...pinnedMessages,\n      },\n    });\n  };\n\nexport default pinMessageData;\n","import { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { SIGNALS, ZOMES } from \"../../connection/types\";\nimport addedToGroup from \"../group/actions/signals/addedToGroup\";\nimport groupMessageData from \"../group/actions/signals/groupMessageData\";\nimport groupMessageRead from \"../group/actions/signals/groupMessageRead\";\nimport groupTypingDetail from \"../group/actions/signals/groupTypingDetail\";\nimport receiveP2PMessage from \"../p2pmessages/actions/signals/receiveP2PMessage\";\nimport receiveP2PReceipt from \"../p2pmessages/actions/signals/receiveP2PReceipt\";\nimport receiveP2PPin from \"../p2pmessages/actions/signals/receiveP2PPin\";\nimport typingP2P from \"../p2pmessages/actions/signals/typingP2P\";\nimport recommitMessage from \"../p2pmessages/actions/signals/recommitMessage\";\nimport { RootState } from \"../types\";\nimport pinMessageData from \"../group/actions/signals/pinMessageData\";\n\nexport const handleSignal =\n  (type: string, payload: any): any =>\n  async (dispatch: ThunkDispatch<RootState, any, AnyAction>) => {\n    switch (type) {\n      case SIGNALS[ZOMES.GROUP].ADDED_TO_GROUP:\n        dispatch(addedToGroup(payload));\n        break;\n      case SIGNALS[ZOMES.GROUP].GROUP_MESSAGE_DATA:\n        dispatch(groupMessageData(payload));\n        break;\n      case SIGNALS[ZOMES.GROUP].GROUP_TYPING_DETAIL:\n        dispatch(groupTypingDetail(payload));\n        break;\n      case SIGNALS[ZOMES.GROUP].GROUP_MESSAGE_READ:\n        dispatch(groupMessageRead(payload));\n        break;\n      case SIGNALS[ZOMES.GROUP].PIN_MESSAGE_DATA:\n        dispatch(pinMessageData(payload));\n        break;\n      case SIGNALS[ZOMES.P2PMESSAGE].RECEIVE_P2P_MESSAGE:\n        dispatch(receiveP2PMessage(payload));\n        break;\n      case SIGNALS[ZOMES.P2PMESSAGE].RECEIVE_P2P_RECEIPT:\n        dispatch(receiveP2PReceipt(payload));\n        break;\n      case SIGNALS[ZOMES.P2PMESSAGE].TYPING_P2P:\n        dispatch(typingP2P(payload));\n        break;\n      case SIGNALS[ZOMES.P2PMESSAGE].SYNC_P2P_PINS:\n        dispatch(receiveP2PPin(payload));\n        break;\n      case SIGNALS[ZOMES.P2PMESSAGE].POST_COMMIT_ERROR_COMMIT_MESSAGE:\n        dispatch(recommitMessage(payload));\n        break;\n    }\n  };\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t229,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t230,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t231,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t232,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t233,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t234,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t235,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t236,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t237,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t238,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t239,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t240,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t241,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t242,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t243,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t244,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t245,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t246,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t247,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t248,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t249,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t250,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t251,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t252,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t253,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t254,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t255,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t256,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t257,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t258,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t259,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t260,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t261,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t262,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t263,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t264,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t265,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t266,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t267,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t268,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t269,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t270,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t271,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 187;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t272,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 189;\nmodule.exports = webpackAsyncContext;","import { IonSpinner } from \"@ionic/react\";\nimport React from \"react\";\nimport styles from \"./style.module.css\";\n\nconst Spinner: React.FC<any> = (props) => (\n  <div className={styles.spinner}>\n    <IonSpinner {...props} />\n  </div>\n);\n\nexport default Spinner;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { binaryToUrl } from \"../../../utils/helpers\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport { ProfileActionTypes, SET_PROFILE } from \"../types\";\n\nconst createProfile =\n  (nickname: string, image: Uint8Array | null): ThunkAction =>\n  async (dispatch, _getState, { callZome, getAgentId }) => {\n    try {\n      const myAgentId = await getAgentId();\n      /* assume that getAgentId() is non-nullable */\n      const myAgentIdB64 = serializeHash(myAgentId!);\n\n      const payload = image\n        ? {\n            nickname,\n            fields: {\n              avatar: serializeHash(image),\n            },\n          }\n        : { nickname, fields: {} };\n      const res = await callZome({\n        zomeName: ZOMES.PROFILES,\n        fnName: FUNCTIONS[ZOMES.PROFILES].CREATE_PROFILE,\n        payload,\n      });\n      dispatch<ProfileActionTypes>({\n        type: SET_PROFILE,\n        id: myAgentIdB64,\n        nickname: res.profile.nickname,\n        fields: image ? { avatar: serializeHash(image) } : {},\n      });\n      return res;\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n\nexport default createProfile;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { binaryToUrl } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport { ProfileActionTypes, SET_PROFILE } from \"../types\";\n\nconst getMyProfile =\n  (): ThunkAction =>\n  async (dispatch, _getState, { callZome, getAgentId }) => {\n    try {\n      const res = await callZome({\n        zomeName: ZOMES.PROFILES,\n        fnName: FUNCTIONS[ZOMES.PROFILES].GET_MY_PROFILE,\n      });\n      console.warn(\"Agent's profile: \", res);\n      const myAgentId = await getAgentId();\n      /* assume that getAgentId() is non-nullable */\n      const myAgentIdB64 = serializeHash(myAgentId!);\n\n      if (res) {\n        dispatch<ProfileActionTypes>({\n          type: SET_PROFILE,\n          nickname: res.profile.nickname,\n          id: myAgentIdB64,\n          fields: res.profile.fields.avatar\n            ? {\n                avatar: res.profile.fields.avatar,\n              }\n            : {},\n        });\n      }\n      return true;\n    } catch (e) {}\n    return false;\n  };\n\nexport default getMyProfile;\n","import { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { binaryToUrl } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport { AgentProfile, Profile } from \"../types\";\n\nconst searchProfiles =\n  (nicknamePrefix: string): ThunkAction =>\n  async (_dispatch, getState, { callZome }) => {\n    const state = getState();\n    const contacts = { ...state.contacts.contacts };\n    const id = state.profile.id;\n    try {\n      let res: AgentProfile[] = await callZome({\n        zomeName: ZOMES.PROFILES,\n        fnName: FUNCTIONS[ZOMES.PROFILES].SEARCH_PROFILES,\n        payload: { nickname_prefix: nicknamePrefix },\n      });\n      /*\n      filter the contacts that are already added\n      and remove yourself from the searched result as well as duplicates\n      */\n      // console.log(\"searched profiles\", res);\n\n      const filteredMappedProfiles: Profile[] = res\n        .filter(\n          (res: AgentProfile) =>\n            !Object.keys(contacts).includes(res.agent_pub_key) &&\n            res.agent_pub_key !== id\n        )\n        .map((v: AgentProfile) => {\n          return {\n            id: v.agent_pub_key,\n            username: v.profile.nickname,\n            fields: v.profile.fields.avatar\n              ? {\n                  avatar: v.profile.fields.avatar,\n                }\n              : {},\n          };\n        });\n      // console.log(filteredMappedProfiles);\n      return filteredMappedProfiles;\n    } catch (e) {}\n    return false;\n  };\n\nexport default searchProfiles;\n","import { ThunkAction } from \"../../types\";\n\nconst logout =\n  (): ThunkAction =>\n  async (_dispatch, _getState, { client, init }) => {\n    const c = client ? (client as any) : await init();\n    console.log(c);\n    await c.connection.connection.signOut();\n    window.location.reload();\n  };\n\nexport default logout;\n","import renderIcon from \"@holo-host/identicon\";\nimport { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { IonAvatar } from \"@ionic/react\";\nimport React, { useEffect, useRef } from \"react\";\nimport { binaryToUrl } from \"../../utils/helpers\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  hash: string;\n  size?: number | undefined;\n  avatar?: string;\n  shape?: \"circle\" | \"square\";\n  className?: string;\n}\n\nconst Identicon: React.FC<Props> = ({\n  hash,\n  size = 32,\n  className = \"\",\n  avatar = undefined,\n}) => {\n  // const canvas = document.getElementById(styles.icon) as HTMLCanvasElement;\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const opts = {\n    hash: deserializeHash(hash),\n    size,\n  };\n  useEffect(() => {\n    if (canvas.current) renderIcon(opts, canvas.current);\n  });\n  return (\n    <div>\n      {!avatar ? (\n        <canvas\n          ref={canvas}\n          className={`${styles[\"icon\"]} ${className}`}\n          id=\"identicon\"\n          width={size}\n          height={size}\n        />\n      ) : (\n        <IonAvatar className={styles[\"avatar\"]}>\n          <img src={binaryToUrl(avatar)} alt=\"avatar\"></img>\n        </IonAvatar>\n      )}\n    </div>\n  );\n};\n\nexport default Identicon;\n","import {\n  IonAvatar,\n  IonContent,\n  IonFooter,\n  IonIcon,\n  IonItem,\n  IonItemGroup,\n  IonLabel,\n  IonList,\n  IonMenu,\n  IonText,\n  IonToolbar,\n} from \"@ionic/react\";\nimport {\n  banOutline,\n  cogOutline,\n  logOutOutline,\n  warningOutline,\n} from \"ionicons/icons\";\nimport React, { useRef } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { isHoloEnv } from \"../../connection/constants\";\nimport { logout } from \"../../redux/profile/actions\";\nimport { Profile } from \"../../redux/profile/types\";\nimport { RootState } from \"../../redux/types\";\nimport { binaryToUrl, useAppDispatch } from \"../../utils/helpers\";\nimport Identicon from \"../Identicon\";\nimport styles from \"./style.module.css\";\n\ninterface MenuItem {\n  onClick(): any;\n  label: string;\n  icon: string;\n  disabled?: boolean;\n}\n\nconst Menu: React.FC = () => {\n  const history = useHistory();\n  const { username, id, fields } = useSelector((state: RootState) => {\n    return { ...state.profile };\n  });\n\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const menu = useRef<any>(null);\n\n  const menuList: MenuItem[] = [\n    {\n      onClick: () => {\n        history.push(\"/settings\");\n      },\n      label: intl.formatMessage({ id: \"app.menu.settings-label\" }),\n      icon: cogOutline,\n    },\n    {\n      onClick: () => {\n        history.push(\"/blocked\");\n      },\n      label: intl.formatMessage({ id: \"app.menu.blocked-label\" }),\n      icon: banOutline,\n    },\n    {\n      onClick: () =>\n        window.open(\n          \"https://github.com/hc-institute-japan/kizuna/issues/new?assignees=&labels=bug&template=bug_report.md&title=\"\n        ),\n      label: intl.formatMessage({ id: \"app.menu.report-label\" }),\n      icon: warningOutline,\n    },\n    {\n      onClick: () => {\n        // const c = (client as any).connection;\n        // await c.signOut();\n        // await c.signIn();\n        dispatch(logout());\n      },\n      label: intl.formatMessage({ id: \"app.menu.logout-label\" }),\n      icon: logOutOutline,\n      disabled: isHoloEnv() ? false : true,\n    },\n  ];\n\n  const handleOnClick = () => {\n    menu?.current?.close();\n    history.push({\n      pathname: `/p/${id}`,\n      state: { profile: { username, id, fields } as Profile, prev: `/home` },\n    });\n  };\n\n  return (\n    <IonMenu ref={menu} contentId=\"main\" type=\"overlay\">\n      <IonContent className={`${styles.menu} ion-padding-top`}>\n        <IonList id=\"inbox-list\" lines=\"none\">\n          <IonItemGroup className=\"ion-no-margin\">\n            <div\n              onClick={handleOnClick}\n              className={`${styles.container} ion-padding`}\n            >\n              {fields.avatar ? (\n                <IonAvatar>\n                  <img src={binaryToUrl(fields.avatar)} alt=\"avatar\"></img>\n                </IonAvatar>\n              ) : (\n                <Identicon hash={id!} size={60} />\n              )}\n            </div>\n\n            <IonItem onClick={handleOnClick} lines=\"none\">\n              <IonLabel>{username}</IonLabel>\n            </IonItem>\n          </IonItemGroup>\n          {menuList.map(({ onClick, label, icon, disabled = false }) => (\n            <IonItem\n              key={label}\n              onClick={() => {\n                menu?.current?.close();\n                onClick();\n              }}\n              disabled={disabled}\n            >\n              <IonIcon className=\"ion-margin-end\" icon={icon} />\n              <IonLabel>{label}</IonLabel>\n            </IonItem>\n          ))}\n        </IonList>\n      </IonContent>\n      <IonFooter className=\"ion-no-border\">\n        <IonToolbar>\n          <IonText className={`ion-padding ${styles[\"version\"]}`}>\n            {intl.formatMessage({ id: \"app.menu.version\" })} 0.2.0\n          </IonText>\n        </IonToolbar>\n      </IonFooter>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { AgentPubKey } from \"@holochain/client\";\nimport { FUNCTIONS, ZOMES } from \"../../../../connection/types\";\nimport {\n  deserializeAgentPubKey,\n  objectMap,\n  timestampToDate,\n} from \"../../../../utils/helpers\";\nimport {\n  isOther,\n  // type guards\n  isTextPayload,\n  Payload,\n  TextPayload,\n} from \"../../../commons/types\";\nimport { AgentProfile, Profile } from \"../../../profile/types\";\nimport { CallZomeConfig, RootState } from \"../../../types\";\nimport {\n  GroupMessage,\n  GroupMessagesContents,\n  GroupMessagesOutput,\n  MessagesByGroup,\n} from \"../../types\";\n\n// helper function\nexport const convertFetchedResToGroupMessagesOutput = (\n  fetchedRes: any\n): GroupMessagesOutput => {\n  let messagesByGroup: MessagesByGroup = objectMap(\n    fetchedRes.messagesByGroup,\n    (message_ids: Uint8Array[]): string[] =>\n      message_ids.map((message_id) => serializeHash(message_id))\n  );\n\n  const groupMessagesContents: GroupMessagesContents = objectMap(\n    fetchedRes.groupMessagesContents,\n    (msg_content): GroupMessage => {\n      const convertedReadList: {\n        [key: string]: Date;\n      } = objectMap(\n        msg_content.readList,\n        (timestamp): Date => timestampToDate(timestamp)\n      );\n\n      return {\n        groupMessageId: serializeHash(\n          msg_content.groupMessageElement.signedHeader.header.content.entry_hash\n        ),\n        groupId: serializeHash(msg_content.groupMessageElement.entry.groupHash),\n        author: serializeHash(msg_content.groupMessageElement.entry.sender),\n        payload: convertPayload(msg_content.groupMessageElement.entry.payload),\n        timestamp: timestampToDate(\n          msg_content.groupMessageElement.entry.created\n        ),\n        replyTo: msg_content.groupMessageElement.entry.replyTo\n          ? {\n              groupId: serializeHash(\n                msg_content.groupMessageElement.entry.replyTo.content.groupHash\n              ),\n              author: serializeHash(\n                msg_content.groupMessageElement.entry.replyTo.content.sender\n              ),\n              payload: convertPayload(\n                msg_content.groupMessageElement.entry.replyTo.content.payload\n              ),\n              timestamp: timestampToDate(\n                msg_content.groupMessageElement.entry.replyTo.content.created\n              ),\n\n              replyTo: msg_content.groupMessageElement.entry.replyTo\n                ? serializeHash(msg_content.groupMessageElement.entry.replyTo)\n                : undefined,\n              readList: {},\n            }\n          : undefined,\n        readList: convertedReadList,\n      };\n    }\n  );\n\n  let groupMessagesOutput: GroupMessagesOutput = {\n    messagesByGroup,\n    groupMessagesContents,\n  };\n\n  return groupMessagesOutput;\n};\n\nexport const convertPayload = (payload: any | TextPayload): Payload => {\n  if (isTextPayload(payload)) return payload;\n  if (isOther(payload.payload.fileType)) {\n    return {\n      type: \"FILE\",\n      fileName: payload.payload.metadata.fileName,\n      fileSize: payload.payload.metadata.fileSize,\n      fileType: payload.payload.metadata.fileType,\n      fileHash: serializeHash(payload.payload.metadata.fileHash),\n    };\n  } else {\n    return {\n      type: \"FILE\",\n      fileName: payload.payload.metadata.fileName,\n      fileSize: payload.payload.metadata.fileSize,\n      fileType: payload.payload.metadata.fileType,\n      fileHash: serializeHash(payload.payload.metadata.fileHash),\n      thumbnail: payload.payload.fileType.payload.thumbnail,\n    };\n  }\n};\n\nexport const fetchUsernameOfMembers = async (\n  state: RootState,\n  members: string[],\n  callZome: (config: CallZomeConfig) => Promise<any>,\n  myAgentId: string\n) => {\n  const contacts = state.contacts.contacts;\n  // can assume that this is non-nullable since agent cannot call this\n  // function without having a username.\n  const myProfile = state.profile;\n\n  let undefinedProfiles: AgentPubKey[] = [];\n  let membersUsernames: { [key: string]: Profile } = {};\n\n  members.forEach((member) => {\n    if (contacts[member]) {\n      membersUsernames[member] = contacts[member];\n    } else if (member === myAgentId) {\n      membersUsernames[myAgentId] = {\n        id: myAgentId,\n        username: myProfile.username!,\n        fields: myProfile.fields,\n      };\n    } else {\n      undefinedProfiles.push(deserializeAgentPubKey(member));\n    }\n  });\n\n  if (undefinedProfiles?.length) {\n    const undefinedProfilesB64 = undefinedProfiles.map((undefinedProfile) =>\n      serializeHash(undefinedProfile)\n    );\n    const res = await callZome({\n      zomeName: ZOMES.PROFILES,\n      fnName: FUNCTIONS[ZOMES.PROFILES].GET_AGENTS_PROFILES,\n      payload: undefinedProfilesB64,\n    });\n    res.forEach((agentProfile: AgentProfile) => {\n      let id = agentProfile.agent_pub_key;\n      membersUsernames[id] = {\n        id,\n        username: agentProfile.profile.nickname,\n        fields: agentProfile.profile.fields.avatar\n          ? {\n              avatar: agentProfile.profile.fields.avatar,\n            }\n          : {},\n      };\n    });\n  }\n\n  return membersUsernames;\n};\n","import React from \"react\";\nimport Identicon from \"../Identicon\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  nickname: string;\n  id: string; // base64 of AgentPubKey\n  charToShow?: number; // no of characters to show in agentpubkey\n  avatar?: string;\n  displayId?: boolean;\n  displayAvatar?: boolean;\n  displayNickname?: boolean;\n  noSpace?: boolean;\n}\n\nconst AgentIdentifier: React.FC<Props> = ({\n  nickname,\n  id,\n  charToShow,\n  avatar = undefined,\n  displayId = true,\n  displayAvatar = false,\n  displayNickname = true,\n  noSpace = false,\n}) => {\n  /* trim the hash type prefix */\n  const trimmedId = id.slice(5);\n\n  const renderId = (id: string, numOfChar: number | undefined) => (\n    <span className={styles[\"label\"]}>\n      {numOfChar ? id.slice(0, numOfChar).concat(\"...\") : id}\n    </span>\n  );\n  const renderAvatar = (id: string) => (\n    <div className={styles[\"avatar\"]}>\n      <Identicon hash={id} avatar={avatar} size={50} />\n    </div>\n  );\n\n  return (\n    <div className={!noSpace ? styles[\"container\"] : styles[\"\"]}>\n      {displayAvatar ? renderAvatar(id) : null}\n      {displayNickname ? nickname : null}\n      {displayId ? renderId(trimmedId, charToShow) : null}\n    </div>\n  );\n};\n\nexport default AgentIdentifier;\n","import { IonButton, IonButtons, IonIcon, IonItem } from \"@ionic/react\";\nimport { chatboxOutline, informationCircleOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport AgentIdentifier from \"../../AgentIdentifier\";\n\ninterface Props {\n  contact: Profile;\n  displayMsgBtn?: boolean;\n}\n\nconst ContactItem: React.FC<Props> = ({ contact, displayMsgBtn = false }) => {\n  const history = useHistory();\n  const handleOnInfoBtnClick = () =>\n    history.push({\n      pathname: `/p/${contact.id}`,\n      state: { profile: contact },\n    });\n\n  const handleOnMsgBtnClick = () => {\n    history.push({\n      pathname: `/u/${contact.id}`,\n      state: { username: contact.username },\n    });\n  };\n\n  return (\n    <IonItem key={JSON.stringify(contact)}>\n      <AgentIdentifier\n        displayAvatar={true}\n        avatar={contact.fields.avatar}\n        nickname={contact.username}\n        id={contact.id}\n      />\n      <IonButtons slot=\"end\">\n        {displayMsgBtn ? (\n          <IonButton onClick={handleOnMsgBtnClick}>\n            <IonIcon icon={chatboxOutline} />\n          </IonButton>\n        ) : null}\n        <IonButton onClick={handleOnInfoBtnClick}>\n          <IonIcon icon={informationCircleOutline} />\n        </IonButton>\n      </IonButtons>\n    </IonItem>\n  );\n};\n\nexport default ContactItem;\n","import { IonItemDivider, IonLabel } from \"@ionic/react\";\nimport React from \"react\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport ContactItem from \"../ContactItem\";\n\ninterface Props {\n  char: string;\n  contacts: Profile[];\n  displayMsgBtn?: boolean;\n}\n\nconst IndexSection: React.FC<Props> = ({\n  char,\n  contacts,\n  displayMsgBtn = false,\n}) => (\n  <React.Fragment key={char}>\n    <IonItemDivider>\n      <IonLabel>{char}</IonLabel>\n    </IonItemDivider>\n    {contacts.map((contact) => (\n      <ContactItem\n        displayMsgBtn={displayMsgBtn}\n        key={JSON.stringify(contact)}\n        contact={contact}\n      />\n    ))}\n  </React.Fragment>\n);\n\nexport default IndexSection;\n","import { IonList } from \"@ionic/react\";\nimport React from \"react\";\nimport { Profile } from \"../../redux/profile/types\";\nimport IndexSection from \"./IndexSection\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  contacts: {\n    [key: string]: Profile[];\n  };\n  displayMsgBtn?: boolean;\n}\n\nconst ContactsList: React.FC<Props> = ({\n  contacts: indexedContacts,\n  displayMsgBtn = false,\n}) => (\n  <IonList className={styles[\"contacts-list\"]}>\n    {Object.keys(indexedContacts).map((char) => {\n      const contacts = indexedContacts[char];\n      return (\n        <IndexSection\n          displayMsgBtn={displayMsgBtn}\n          key={char}\n          char={char}\n          contacts={contacts}\n        ></IndexSection>\n      );\n    })}\n  </IonList>\n);\n\nexport default ContactsList;\n","import { IonIcon, IonText } from \"@ionic/react\";\nimport { happyOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\nconst EmptyBlocked: React.FC = () => {\n  const intl = useIntl();\n  return (\n    <div className={styles[\"empty-contacts\"]}>\n      <IonIcon icon={happyOutline} />\n      <IonText className=\"ion-padding ion-margin-bottom\">\n        {intl.formatMessage({ id: \"app.blocked.empty-blocked-list\" })}\n      </IonText>\n    </div>\n  );\n};\n\nexport default EmptyBlocked;\n","import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBackSharp } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport ContactsList from \"../../components/ContactList\";\nimport { Profile } from \"../../redux/profile/types\";\nimport { RootState } from \"../../redux/types\";\nimport { indexContacts } from \"../../utils/helpers\";\nimport EmptyBlocked from \"./EmptyBlocked\";\n\nconst Blocked = () => {\n  const history = useHistory();\n  const blocked = useSelector((state: RootState) =>\n    Object.values(state.contacts.blocked)\n  );\n\n  const indexedContacts = indexContacts(Object.values(blocked));\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonButton\n              onClick={() => history.push({ pathname: `/home` })}\n              className=\"ion-no-padding\"\n            >\n              <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        {Object.values(blocked).length !== 0 ? (\n          <ContactsList contacts={indexedContacts ? indexedContacts : {}} />\n        ) : (\n          <EmptyBlocked />\n        )}\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Blocked;\n","import {\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonList,\n  IonText,\n} from \"@ionic/react\";\nimport React, {\n  forwardRef,\n  ForwardRefRenderFunction,\n  Fragment,\n  Ref,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\nimport { ChatListMethods, ChatListProps, ChatProps } from \"../types\";\n\nconst ChatList: ForwardRefRenderFunction<ChatListMethods, ChatListProps> = (\n  { children, type = \"p2p\", onScrollTop, disabled, onScrollBottom },\n  ref: Ref<ChatListMethods>\n) => {\n  const arrChildren = React.Children.toArray(children);\n  const intl = useIntl();\n  const scroll = useRef<HTMLDivElement | null>(null);\n  const infiniteScroll = useRef<HTMLIonInfiniteScrollElement>(null);\n  const infiniteScrollBottom = useRef<HTMLIonInfiniteScrollElement>(null);\n\n  const assess = (\n    child: React.ReactElement,\n    arrChildren: React.ReactElement[],\n    i: number\n  ) => {\n    let showProfilePicture = false;\n    let space = false;\n    let showName = false;\n    let showDate = i === 0;\n\n    const hasRead =\n      Object.values(arrChildren[i]?.props?.readList)?.length !== 0;\n\n    if (i === 0) showProfilePicture = true;\n\n    const prevChild = arrChildren[i - 1];\n    const props: ChatProps = child?.props;\n    const prevChildProps: ChatProps = prevChild?.props;\n    if (props?.profile.id !== prevChildProps?.profile.id) {\n      showProfilePicture = true;\n      space = true;\n    }\n    const timestamp: Date = props?.timestamp;\n    const prevTimestamp: Date = prevChildProps?.timestamp;\n    if (timestamp && prevTimestamp) {\n      showDate = !(\n        timestamp.getDate() === prevTimestamp.getDate() &&\n        timestamp.getMonth() === prevTimestamp.getMonth() &&\n        timestamp.getFullYear() === prevTimestamp.getFullYear()\n      );\n      if (showDate) showProfilePicture = true;\n    }\n    if (type === \"group\") showName = showProfilePicture;\n\n    return { showProfilePicture, space, showName, showDate, hasRead };\n  };\n\n  const elements = React.Children.map(arrChildren, (child, i) => {\n    if (React.isValidElement(child)) {\n      const { showProfilePicture, showName, showDate, hasRead } = assess(\n        child,\n        arrChildren as React.ReactElement[],\n        i\n      );\n\n      return (\n        <Fragment key={i}>\n          {showDate ? (\n            <IonText className=\"ion-text-center\">\n              {child.props.timestamp.toDateString() ===\n              new Date().toDateString()\n                ? intl.formatMessage({ id: \"components.chat.chat-list.today\" })\n                : intl.formatDate(child.props.timestamp, {\n                    year: \"numeric\",\n                    month: \"numeric\",\n                    day: \"numeric\",\n                  })}\n            </IonText>\n          ) : null}\n          {React.cloneElement(child, {\n            isSeen: hasRead,\n            type,\n            showProfilePicture,\n            showName,\n          })}\n        </Fragment>\n      );\n    }\n    return child;\n  });\n\n  useEffect(() => {\n    if (scroll.current) {\n      setTimeout(() => {\n        scroll.current?.scrollIntoView({ behavior: \"smooth\" });\n      }, 500);\n    }\n  }, [scroll]);\n\n  const complete: () => any = () => infiniteScroll.current?.complete();\n  const completeBottom: () => any = () =>\n    infiniteScrollBottom.current?.complete();\n\n  useImperativeHandle(ref, () => ({\n    scrollToBottom: () => {\n      /* TODO: come up with a better implementation than simply setting a timeout for scrollIntoView */\n      setTimeout(\n        () => scroll.current?.scrollIntoView({ behavior: \"smooth\" }),\n        500\n      );\n    },\n  }));\n\n  const list = useRef<HTMLIonListElement>(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (\n        list.current &&\n        list.current!.getBoundingClientRect().height <=\n          (list.current!.parentNode as any).getBoundingClientRect().height\n      ) {\n        if (onScrollTop) {\n          onScrollTop(complete, {} as any);\n        }\n      }\n    }, 500);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children]);\n\n  return (\n    <IonList ref={list} className={`${styles.chat} chat-list`}>\n      {onScrollTop ? (\n        <IonInfiniteScroll\n          disabled={disabled ? true : false}\n          threshold=\"0\"\n          ref={infiniteScroll}\n          position=\"top\"\n          /* Adding a 1 second timeout just because messages are being fetched too freakin' fast locally :D */\n          onIonInfinite={(e) =>\n            setTimeout(() => onScrollTop(complete, e), 1000)\n          }\n        >\n          <IonInfiniteScrollContent loadingSpinner=\"crescent\" />\n        </IonInfiniteScroll>\n      ) : null}\n\n      {elements}\n      <div ref={scroll} />\n      {onScrollBottom ? (\n        <IonInfiniteScroll\n          disabled={disabled ? true : false}\n          threshold=\"0px\"\n          ref={infiniteScrollBottom}\n          position=\"bottom\"\n          /* Adding a 1 second timeout just because messages are being fetched too freakin' fast locally :D */\n          onIonInfinite={(e) =>\n            setTimeout(() => onScrollBottom(completeBottom, e), 1000)\n          }\n        >\n          <IonInfiniteScrollContent loadingSpinner=\"crescent\" />\n        </IonInfiniteScroll>\n      ) : null}\n    </IonList>\n  );\n};\n\nexport default forwardRef(ChatList);\n","import { IonIcon, IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport {\n  arrowUndoOutline,\n  closeCircleOutline,\n  gitCompareOutline,\n  pin,\n} from \"ionicons/icons\";\nimport React from \"react\";\nimport { IntlShape } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  onPin(): any;\n  onReply(): any;\n  isPinned: boolean;\n  intl: IntlShape;\n  onHide(): any;\n  onDelete(): any;\n  onRetry(): any;\n  err?: boolean;\n}\n\nconst ChatPopover: React.FC<Props> = ({\n  onPin,\n  onReply,\n  onDelete,\n  isPinned,\n  intl,\n  onRetry,\n  onHide,\n  err,\n}) => {\n  const renderItems = () => (\n    <IonList>\n      <IonItem\n        button\n        lines=\"none\"\n        onClick={() => {\n          onReply();\n          onHide();\n        }}\n      >\n        <IonLabel>\n          {intl.formatMessage({ id: \"components.chat.chat-modal-reply\" })}\n        </IonLabel>\n        <IonIcon icon={arrowUndoOutline} className={styles[\"icon\"]} />\n      </IonItem>\n\n      <IonItem\n        onClick={() => {\n          onPin();\n          onHide();\n        }}\n        button\n        lines=\"none\"\n      >\n        <IonLabel>\n          {isPinned\n            ? intl.formatMessage({ id: \"components.chat.chat-modal-unpin\" })\n            : intl.formatMessage({ id: \"components.chat.chat-modal-pin\" })}\n        </IonLabel>\n        <IonIcon icon={pin} slot=\"end\" />\n      </IonItem>\n    </IonList>\n  );\n  const renderErrItems = () => (\n    <IonList>\n      <IonItem\n        button\n        lines=\"none\"\n        onClick={() => {\n          onRetry();\n          onHide();\n        }}\n      >\n        <IonLabel>\n          {intl.formatMessage({ id: \"components.chat.chat-modal-resend\" })}\n        </IonLabel>\n        <IonIcon icon={gitCompareOutline} className={styles[\"icon\"]} />\n      </IonItem>\n\n      <IonItem\n        onClick={() => {\n          onDelete();\n          onHide();\n        }}\n        button\n        lines=\"none\"\n      >\n        <IonLabel>\n          {intl.formatMessage({ id: \"components.chat.chat-modal-delete\" })}\n        </IonLabel>\n        <IonIcon icon={closeCircleOutline} slot=\"end\" />\n      </IonItem>\n    </IonList>\n  );\n  return !err ? renderItems() : renderErrItems();\n};\n\nexport default ChatPopover;\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { AgentPubKey } from \"@holochain/client\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { deserializeAgentPubKey } from \"../../../utils/helpers\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  AddMembersAction,\n  ADD_MEMBERS,\n  GroupConversation,\n\n  // IO\n  UpdateGroupMembersData,\n} from \"../types\";\nimport { fetchUsernameOfMembers } from \"./helpers\";\n\nconst addMembers =\n  (updateGroupMembersData: UpdateGroupMembersData): ThunkAction =>\n  async (\n    dispatch,\n    getState,\n    { callZome, getAgentId }\n  ): Promise<UpdateGroupMembersData | boolean> => {\n    const state = getState();\n    const myAgentId = await getAgentId();\n    const input = {\n      members: updateGroupMembersData.members\n        /* dedup */\n        .filter(\n          (member: string, i) =>\n            updateGroupMembersData.members.indexOf(member) === i\n        )\n        .map((member: string) => deserializeAgentPubKey(member)),\n      groupId: deserializeHash(updateGroupMembersData.groupId),\n      groupRevisionId: deserializeHash(updateGroupMembersData.groupRevisionId),\n    };\n\n    try {\n      const addMembersOutput = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].ADD_MEMBERS,\n        payload: input,\n      });\n\n      const membersBase64 = addMembersOutput.members.map(\n        (member: AgentPubKey) => serializeHash(member)\n      );\n\n      const updateGroupMembersDataFromRes: UpdateGroupMembersData = {\n        members: membersBase64,\n        groupId: serializeHash(addMembersOutput.groupId),\n        groupRevisionId: serializeHash(addMembersOutput.groupRevisionId),\n      };\n\n      const membersUsernames = await fetchUsernameOfMembers(\n        state,\n        membersBase64,\n        callZome,\n        serializeHash(myAgentId!)\n      );\n\n      let groupEntryHash: string = updateGroupMembersDataFromRes.groupId;\n      let groupConversation: GroupConversation =\n        state.groups.conversations[groupEntryHash];\n      groupConversation.members = groupConversation.members.concat(\n        updateGroupMembersDataFromRes.members\n      );\n      let conversations = state.groups.conversations;\n      conversations = {\n        ...conversations,\n        [groupEntryHash]: groupConversation,\n      };\n      let members = state.groups.members;\n      members = {\n        ...members,\n        ...membersUsernames,\n      };\n\n      dispatch<AddMembersAction>({\n        type: ADD_MEMBERS,\n        conversations,\n        members,\n      });\n\n      return updateGroupMembersData;\n    } catch (e) {\n      switch (true) {\n        case (e as any).message.includes(\"members field is empty\"):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.add-members.1\" })\n          );\n          return false;\n        case (e as any).message.includes(\n          \"cannot create group with blocked agents\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.add-members.2\" })\n          );\n          return false;\n        case (e as any).message.includes(\"failed to get the given group id\"):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.add-members.3\" })\n          );\n          return false;\n        case (e as any).message.includes(\n          \"cannot update a group entry if you are not the group creator (admin)\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.add-members.4\" })\n          );\n          return false;\n        case (e as any).message.includes(\n          \"creator AgentPubKey cannot be included in the group members list\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.add-members.5\" })\n          );\n          return false;\n        default:\n          dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n          return false;\n      }\n    }\n  };\n\nexport default addMembers;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { ThunkAction } from \"../../types\";\nimport { Profile } from \"../../profile/types\";\nimport {\n  ADD_GROUP, // action type\n  // IO\n  CreateGroupInput,\n  GroupConversation,\n  AddGroupAction, // action payload type\n} from \"../types\";\nimport { fetchUsernameOfMembers } from \"./helpers\";\nimport { deserializeAgentPubKey } from \"../../../utils/helpers\";\n\nconst createGroup =\n  (createGroupInput: CreateGroupInput): ThunkAction =>\n  async (\n    dispatch,\n    getState,\n    { callZome, getAgentId }\n  ): Promise<GroupConversation> => {\n    const state = getState();\n    const myAgentId = await getAgentId();\n\n    const input = {\n      name: createGroupInput.name,\n      members: createGroupInput.members.map((member: string) =>\n        deserializeAgentPubKey(member)\n      ),\n    };\n    try {\n      const createGroupRes = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].CREATE_GROUP,\n        payload: input,\n      });\n\n      const groupData: GroupConversation = {\n        originalGroupId: serializeHash(createGroupRes.groupId),\n        originalGroupRevisionId: serializeHash(createGroupRes.groupRevisionId),\n        name: createGroupRes.content.name,\n        members: createGroupRes.content.members.map((member: Buffer) =>\n          serializeHash(member)\n        ),\n        createdAt: createGroupRes.content.created,\n        creator: serializeHash(createGroupRes.content.creator),\n        messages: [],\n        pinnedMessages: [],\n        avatar: null,\n      };\n\n      const groupMembers = [...groupData.members, groupData.creator];\n\n      const membersProfile: {\n        [key: string]: Profile;\n      } = await fetchUsernameOfMembers(\n        state,\n        groupMembers,\n        callZome,\n        serializeHash(myAgentId!)\n      );\n\n      let groupEntryHash: string = groupData.originalGroupId;\n      let newConversation: { [key: string]: GroupConversation } = {\n        [groupEntryHash]: groupData,\n      };\n      let conversations = state.groups.conversations;\n      conversations = {\n        ...conversations,\n        ...newConversation,\n      };\n      let members = state.groups.members;\n      members = {\n        ...members,\n        ...membersProfile,\n      };\n\n      dispatch<AddGroupAction>({\n        type: ADD_GROUP,\n        conversations,\n        members,\n      });\n\n      return groupData;\n    } catch (e) {\n      /* We are throwing the error here and handle it in the caller sendInitialGroupMessage */\n      throw e;\n    }\n  };\n\nexport default createGroup;\n","import { ThunkAction } from \"../../types\";\nimport { GroupConversation } from \"../types\";\n\nconst getBadgeCount =\n  (groupId: string): ThunkAction =>\n  (_dispatch, getState) => {\n    const state = getState();\n    const myAgentId = state.profile.id;\n    const groupConversation: GroupConversation =\n      state.groups.conversations[groupId];\n    const allGroupMessages = state.groups.messages;\n\n    /* \n      filter messageIds that corresponds to messages sent by own\n      and then return the ReadList of each of the messages\n    */\n    const readLists = groupConversation.messages\n      .filter(\n        (messageId: string) => allGroupMessages[messageId].author !== myAgentId\n      )\n      .map((messageId: string) => allGroupMessages[messageId].readList);\n\n    /* \n      filter each readList of a message and see if own AgentId is \n      present as key in the readList object.\n    */\n    const badgeCount = readLists.filter((readList: { [key: string]: Date }) => {\n      return readList[myAgentId!] === undefined;\n    }).length;\n\n    return badgeCount;\n  };\n\nexport default getBadgeCount;\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { timestampToDate } from \"../../../utils/helpers\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  GroupConversation,\n  GroupMessagesOutput,\n  SetLatestGroupState,\n  SET_LATEST_GROUP_STATE,\n} from \"../types\";\nimport {\n  convertFetchedResToGroupMessagesOutput,\n  fetchUsernameOfMembers,\n} from \"./helpers\";\n\nconst getLatestGroupVersion =\n  (groupId: string): ThunkAction =>\n  async (dispatch, getState, { callZome, getAgentId }) => {\n    const myAgentId = await getAgentId();\n    const state = getState();\n    try {\n      const latestGroupVersionRes = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].GET_GROUP_LATEST_VERSION,\n        payload: deserializeHash(groupId),\n      });\n\n      const input = {\n        groupId: deserializeHash(groupId),\n        batchSize: 10,\n        payloadType: {\n          type: \"ALL\",\n          payload: null,\n        },\n      };\n\n      const groupMessagesRes = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].GET_PREVIOUS_GROUP_MESSAGES,\n        payload: input,\n      });\n\n      const groupPinnedMessages = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].FETCH_PINNED_MESSAGES,\n        payload: groupId,\n      });\n\n      const groupMessagesOutput: GroupMessagesOutput =\n        convertFetchedResToGroupMessagesOutput(groupMessagesRes);\n\n      const groupData: GroupConversation = {\n        originalGroupId: serializeHash(latestGroupVersionRes.groupId),\n        originalGroupRevisionId: serializeHash(\n          latestGroupVersionRes.groupRevisionId\n        ),\n        name: latestGroupVersionRes.latestName,\n        members: latestGroupVersionRes.members.map((member: any) =>\n          serializeHash(member)\n        ),\n        createdAt: timestampToDate(latestGroupVersionRes.created),\n        creator: serializeHash(latestGroupVersionRes.creator),\n        messages:\n          groupMessagesOutput.messagesByGroup[\n            serializeHash(latestGroupVersionRes.groupId)\n          ],\n        pinnedMessages: Object.values(groupPinnedMessages).map((message: any) =>\n          serializeHash(message.entry.messageId)\n        ),\n        avatar: latestGroupVersionRes.avatar,\n      };\n\n      const membersUsernames = await fetchUsernameOfMembers(\n        getState(),\n        groupData.members,\n        callZome,\n        serializeHash(myAgentId!)\n      );\n\n      let conversations = state.groups.conversations;\n      conversations = {\n        ...conversations,\n        [groupData.originalGroupId]: groupData,\n      };\n\n      let messages = state.groups.messages;\n      messages = {\n        ...messages,\n        ...groupMessagesOutput.groupMessagesContents,\n      };\n\n      let members = state.groups.members;\n      Object.keys(membersUsernames).forEach((key: string) => {\n        members[key] = membersUsernames[key];\n      });\n\n      dispatch<SetLatestGroupState>({\n        type: SET_LATEST_GROUP_STATE,\n        conversations,\n        messages,\n        members,\n      });\n\n      return groupData;\n    } catch (e) {\n      if ((e as any)?.message?.includes(\"failed to get the given group id\")) {\n        return dispatch(\n          pushError(\n            \"TOAST\",\n            {},\n            { id: \"redux.err.group.get-latest-group-version.1\" }\n          )\n        );\n      } else {\n        return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n      }\n    }\n  };\n\nexport default getLatestGroupVersion;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { dateToTimestamp } from \"../../../utils/helpers\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  GroupConversation,\n  GroupMessageBatchFetchFilter,\n  GroupMessagesOutput,\n  SetGroupMessagesAction,\n  SET_GROUP_MESSAGES,\n} from \"../types\";\nimport { convertFetchedResToGroupMessagesOutput } from \"./helpers\";\n\nconst getPreviousGroupMessages =\n  (filter: GroupMessageBatchFetchFilter): ThunkAction =>\n  async (dispatch, getState, { callZome }): Promise<GroupMessagesOutput> => {\n    const state = getState();\n    /* deserialize fields for zome fn */\n    const input = {\n      groupId: deserializeHash(filter.groupId),\n      lastFetched: filter.lastFetched\n        ? deserializeHash(filter.lastFetched)\n        : undefined,\n      lastMessageTimestamp: filter.lastMessageTimestamp\n        ? dateToTimestamp(filter.lastMessageTimestamp)\n        : undefined,\n      batchSize: filter.batchSize,\n      payloadType: filter.payloadType,\n    };\n\n    try {\n      const groupMessagesRes = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].GET_PREVIOUS_GROUP_MESSAGES,\n        payload: input,\n      });\n\n      const groupMessagesOutput: GroupMessagesOutput =\n        convertFetchedResToGroupMessagesOutput(groupMessagesRes);\n\n      let groupConversations = state.groups.conversations;\n      const groupConversation: GroupConversation =\n        groupConversations[filter.groupId];\n\n      if (groupConversation) {\n        const messageIds = groupConversation.messages\n          ? Array.from(\n              new Set(\n                groupConversation.messages.concat(\n                  groupMessagesOutput.messagesByGroup[filter.groupId]\n                )\n              )\n            )\n          : groupMessagesOutput.messagesByGroup[filter.groupId];\n\n        groupConversations = {\n          ...groupConversations,\n          [filter.groupId]: groupConversation,\n        };\n        let messages = state.groups.messages;\n        messages = {\n          ...messages,\n          ...groupMessagesOutput.groupMessagesContents,\n        };\n\n        const conversations: {\n          [key: string]: GroupConversation;\n        } = {\n          ...groupConversations,\n          [filter.groupId]: { ...groupConversation, messages: messageIds },\n        };\n\n        dispatch<SetGroupMessagesAction>({\n          type: SET_GROUP_MESSAGES,\n          conversations,\n          messages,\n        });\n      }\n\n      return groupMessagesOutput;\n    } catch (e) {\n      /* \n        No useful error is getting returned from\n        the Guest/Host so we are simply returning a generic error here\n      */\n      return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n\nexport default getPreviousGroupMessages;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { dateToTimestamp } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  GroupConversation,\n  GroupMessageByDateFetchFilter,\n  GroupMessagesOutput,\n  SetGroupMessagesAction,\n  SET_GROUP_MESSAGES,\n} from \"../types\";\nimport { convertFetchedResToGroupMessagesOutput } from \"./helpers\";\n\n// TODO: Implement this in the UI first.\nconst getMessagesByGroupByTimestamp =\n  (filter: GroupMessageByDateFetchFilter): ThunkAction =>\n  async (dispatch, getState, { callZome }): Promise<GroupMessagesOutput> => {\n    const state = getState();\n    const input = {\n      groupId: deserializeHash(filter.groupId),\n      date: dateToTimestamp(filter.date),\n      payloadType: filter.payloadType,\n    };\n\n    // TODO: error handling\n    // TODO: input sanitation\n    const groupMessagesRes = await callZome({\n      zomeName: ZOMES.GROUP,\n      fnName: FUNCTIONS[ZOMES.GROUP].GET_MESSAGES_BY_GROUP_BY_TIMESTAMP,\n      payload: input,\n    });\n\n    const groupMessagesOutput: GroupMessagesOutput =\n      convertFetchedResToGroupMessagesOutput(groupMessagesRes);\n\n    let groupConversations = state.groups.conversations;\n    const groupConversation: GroupConversation =\n      groupConversations[filter.groupId];\n\n    if (groupConversation) {\n      const messageIds = groupConversation.messages\n        ? Array.from(\n            new Set(\n              groupConversation.messages.concat(\n                groupMessagesOutput.messagesByGroup[filter.groupId]\n              )\n            )\n          )\n        : groupConversations[filter.groupId].messages;\n\n      groupConversations = {\n        ...groupConversations,\n        [filter.groupId]: groupConversation,\n      };\n      let messages = state.groups.messages;\n      messages = {\n        ...messages,\n        ...groupMessagesOutput.groupMessagesContents,\n      };\n\n      const conversations: {\n        [key: string]: GroupConversation;\n      } = {\n        ...groupConversations,\n        [filter.groupId]: { ...groupConversation, messages: messageIds },\n      };\n\n      dispatch<SetGroupMessagesAction>({\n        type: SET_GROUP_MESSAGES,\n        conversations,\n        messages,\n      });\n    }\n\n    return groupMessagesOutput;\n  };\n\nexport default getMessagesByGroupByTimestamp;\n","import { Profile } from \"../../profile/types\";\nimport { ThunkAction } from \"../../types\";\nimport { GroupMessage, GroupMessageBundle } from \"../types\";\n\nconst getMessagesWithProfile =\n  (messageIds: string[], groupId: string): ThunkAction =>\n  (_dispatch, getState) => {\n    const { messages, members, errMsgs } = getState().groups;\n    const profile = getState().profile;\n    /* \n      Retrieve the messgaes from redux store and modify\n      the author field to Profile type.\n    */\n    let messageBundles: GroupMessageBundle[] = messageIds.map((messageId) => {\n      /* retrieve the message content from redux */\n      const message: GroupMessage = messages[messageId];\n      const authorProfile: Profile = members[message.author];\n\n      return {\n        ...message,\n        author: authorProfile\n          ? authorProfile\n          : // if profile was not found from allMembers, then the author is self\n            // assuming that allMembers have all the members of group at all times\n            {\n              username: profile.username!,\n              id: message.author,\n              fields: profile.fields,\n            },\n      };\n    });\n    // append error messages if there are any\n    if (errMsgs[groupId]) {\n      messageBundles = messageBundles.concat(errMsgs[groupId]);\n    }\n    messageBundles.sort((x, y) => {\n      return x.timestamp.getTime() - y.timestamp.getTime();\n    });\n\n    return messageBundles;\n  };\n\nexport default getMessagesWithProfile;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { deserializeAgentPubKey } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport { GroupTypingDetailData } from \"../types\";\n\nconst indicateGroupTyping =\n  (groupTypingDetailData: GroupTypingDetailData): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    /* deserialize fields for zome fn */\n\n    const input = {\n      groupId: deserializeHash(groupTypingDetailData.groupId),\n      indicatedBy: deserializeAgentPubKey(groupTypingDetailData.indicatedBy),\n      members: groupTypingDetailData.members.map((member) =>\n        deserializeAgentPubKey(member)\n      ),\n      isTyping: groupTypingDetailData.isTyping,\n    };\n\n    await callZome({\n      zomeName: ZOMES.GROUP,\n      fnName: FUNCTIONS[ZOMES.GROUP].INDICATE_GROUP_TYPING,\n      payload: input,\n    });\n\n    return null;\n  };\n\nexport default indicateGroupTyping;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { dateToTimestamp } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport { GroupMessageReadData } from \"../types\";\n\nconst readGroupMessage =\n  (groupMessageReadData: GroupMessageReadData): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    /* deserialize fields for zome fn */\n    const input = {\n      groupId: deserializeHash(groupMessageReadData.groupId),\n      messageIds: groupMessageReadData.messageIds.map((messageId: string) =>\n        deserializeHash(messageId)\n      ),\n      reader: groupMessageReadData.reader,\n      timestamp: dateToTimestamp(groupMessageReadData.timestamp),\n      members: groupMessageReadData.members,\n    };\n    try {\n      await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].READ_GROUP_MESSAGE,\n        payload: input,\n      });\n    } catch (e) {\n      /*\n      The error that could be returned here is of internal_error from create_link\n      but we ignore it since we don't have a workaround on this aotm.\n      See https://github.com/hc-institute-japan/kizuna/issues/54\n      */\n    }\n    return null;\n  };\n\nexport default readGroupMessage;\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { AgentPubKey } from \"@holochain/client\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { deserializeAgentPubKey } from \"../../../utils/helpers\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  GroupConversation,\n  RemoveMembersAction,\n  REMOVE_MEMBERS,\n\n  // IO\n  UpdateGroupMembersData,\n} from \"../types\";\n\nconst removeMembers =\n  (updateGroupMembersData: UpdateGroupMembersData): ThunkAction =>\n  async (\n    dispatch,\n    getState,\n    { callZome }\n  ): Promise<UpdateGroupMembersData | false> => {\n    const input = {\n      members: updateGroupMembersData.members.map((member: string) =>\n        deserializeAgentPubKey(member)\n      ),\n      groupId: deserializeHash(updateGroupMembersData.groupId),\n      groupRevisionId: deserializeHash(updateGroupMembersData.groupRevisionId),\n    };\n\n    const state = getState();\n\n    try {\n      const removeMembersOutput = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].REMOVE_MEMBERS,\n        payload: input,\n      });\n\n      const updateGroupMembersDataFromRes: UpdateGroupMembersData = {\n        members: removeMembersOutput.members.map((member: AgentPubKey) =>\n          serializeHash(member)\n        ),\n        groupId: serializeHash(removeMembersOutput.groupId),\n        groupRevisionId: serializeHash(removeMembersOutput.groupRevisionId),\n      };\n\n      const groupEntryHash: string = updateGroupMembersDataFromRes.groupId;\n      const removedMembers: string[] = updateGroupMembersDataFromRes.members;\n      const groupConversation: GroupConversation =\n        state.groups.conversations[groupEntryHash];\n      groupConversation.members = groupConversation.members.filter(\n        (x) => !removedMembers.includes(x)\n      );\n      let conversations = state.groups.conversations;\n      conversations = {\n        ...conversations,\n        [groupEntryHash]: groupConversation,\n      };\n      let members = state.groups.members;\n      removedMembers.forEach((memberId: any) => {\n        delete members[memberId];\n      });\n\n      dispatch<RemoveMembersAction>({\n        type: REMOVE_MEMBERS,\n        conversations,\n        members,\n      });\n\n      return updateGroupMembersData;\n    } catch (e) {\n      switch (true) {\n        case (e as any).message.includes(\"members field is empty\"):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.remove-members.1\" })\n          );\n          return false;\n        case (e as any).message.includes(\"failed to get the given group id\"):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.remove-members.2\" })\n          );\n          return false;\n        case (e as any).message.includes(\n          \"groups cannot be created with less than 3 members\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.remove-members.3\" })\n          );\n          return false;\n        case (e as any).message.includes(\n          \"cannot update a group entry if you are not the group creator (admin)\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.remove-members.4\" })\n          );\n          return false;\n        default:\n          dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n          return false;\n      }\n    }\n  };\n\nexport default removeMembers;\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { CombinedState } from \"redux\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { timestampToDate } from \"../../../utils/helpers\";\nimport {\n  FilePayload,\n  FileType,\n  isImage,\n  isOther,\n  // type guards\n  isTextPayload,\n  isVideo,\n  Payload,\n} from \"../../commons/types\";\nimport { ContactsState } from \"../../contacts/types\";\nimport { pushError } from \"../../error/actions\";\nimport { ErrorState } from \"../../error/types\";\nimport { LanguageState } from \"../../language/types\";\nimport { P2PMessageConversationState } from \"../../p2pmessages/types\";\nimport { PreferenceState } from \"../../preference/types\";\nimport { ProfileState } from \"../../profile/types\";\nimport { CallZomeConfig, ThunkAction } from \"../../types\";\nimport { setFilesBytes } from \"../actions\";\nimport {\n  GroupConversation,\n  GroupConversationsState,\n  GroupMessage,\n  // IO\n  GroupMessageInput,\n  // action types\n  SET_GROUP_MESSAGE,\n} from \"../types\";\n\nconst setGroupMessage = async (\n  sendGroupMessageOutput: any,\n  groupMessageData: GroupMessageInput,\n  callZome: (config: CallZomeConfig) => Promise<any>,\n  getState: () => CombinedState<{\n    profile: ProfileState;\n    contacts: ContactsState;\n    preference: PreferenceState;\n    groups: GroupConversationsState;\n    p2pmessages: P2PMessageConversationState;\n    language: LanguageState;\n    error: ErrorState;\n  }>,\n  dispatch: any\n) => {\n  let payload: Payload;\n  let fileBytes: Uint8Array | undefined;\n\n  /* convert the payload returned from HC to UI appropriate payload type */\n  if (isTextPayload(groupMessageData.payloadInput)) {\n    payload = sendGroupMessageOutput.content.payload;\n  } else {\n    let fileType: FileType =\n      sendGroupMessageOutput.content.payload.payload.fileType;\n    /* set the thumbnail if the file type is either a media or video */\n    let thumbnail: Uint8Array | undefined = isOther(fileType)\n      ? undefined\n      : isImage(fileType)\n      ? fileType.payload.thumbnail\n      : isVideo(fileType)\n      ? fileType.payload.thumbnail\n      : undefined;\n    fileBytes = groupMessageData.payloadInput.payload.fileBytes;\n    if (fileType.type === \"VIDEO\") {\n      const fetchedFileBytes = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].GET_FILES_BYTES,\n        payload: [\n          sendGroupMessageOutput.content.payload.payload.metadata.fileHash,\n        ],\n      });\n\n      if (fetchedFileBytes?.type !== \"error\") {\n        dispatch(setFilesBytes({ ...fetchedFileBytes }));\n      }\n    }\n    const filePayload: FilePayload = {\n      type: \"FILE\",\n      fileName:\n        sendGroupMessageOutput.content.payload.payload.metadata.fileName,\n      fileSize:\n        sendGroupMessageOutput.content.payload.payload.metadata.fileSize,\n      fileType:\n        sendGroupMessageOutput.content.payload.payload.metadata.fileType,\n      fileHash: serializeHash(\n        sendGroupMessageOutput.content.payload.payload.metadata.fileHash\n      ),\n      thumbnail,\n    };\n    payload = filePayload;\n  }\n  const message = sendGroupMessageOutput.content.replyTo\n    ? getState().groups.messages[\n        serializeHash(sendGroupMessageOutput.content.replyTo)\n      ]\n    : null;\n\n  /* the final GroupMessage data type converted from the returned value of the Zome fn above */\n  const groupMessageDataConverted: GroupMessage = {\n    groupMessageId: serializeHash(sendGroupMessageOutput.id),\n    groupId: serializeHash(sendGroupMessageOutput.content.groupHash),\n    author: serializeHash(sendGroupMessageOutput.content.sender),\n    payload,\n    timestamp: timestampToDate(sendGroupMessageOutput.content.created),\n    replyTo: message\n      ? {\n          groupId: message.groupId,\n          author: message.author,\n          payload: message.payload,\n          timestamp: message.timestamp,\n          /*\n            TODO: currently undefined but we will have to modify this once jumping\n            to replied message will be possible.\n          */\n          replyTo: undefined,\n          readList: {},\n        }\n      : undefined,\n    readList: {},\n  };\n\n  const groupId: string = groupMessageDataConverted.groupId;\n  const groupMessageId: string = groupMessageDataConverted.groupMessageId;\n  const groupConversation = getState().groups.conversations[groupId];\n\n  const messageIds = [\n    groupMessageDataConverted.groupMessageId,\n    ...groupConversation.messages,\n  ];\n  const newMessage: { [key: string]: GroupMessage } = {\n    [groupMessageId]: groupMessageDataConverted,\n  };\n  let messages = getState().groups.messages;\n  messages = {\n    ...messages,\n    ...newMessage,\n  };\n\n  let groupFiles = getState().groups.groupFiles;\n  if (!isTextPayload(groupMessageDataConverted.payload)) {\n    // work with file payload\n    const newFile: { [key: string]: Uint8Array } = {\n      [groupMessageDataConverted.payload.fileHash!]: fileBytes!,\n    };\n    groupFiles = {\n      ...groupFiles,\n      ...newFile,\n    };\n  }\n\n  const conversations: {\n    [key: string]: GroupConversation;\n  } = {\n    ...getState().groups.conversations,\n    [groupId]: { ...groupConversation, messages: messageIds },\n  };\n\n  dispatch({\n    type: SET_GROUP_MESSAGE,\n    conversations,\n    messages,\n    groupFiles,\n  });\n\n  return groupMessageDataConverted;\n};\n\nconst sendGroupMessage =\n  (groupMessageData: GroupMessageInput): ThunkAction =>\n  async (dispatch, getState, { callZome, retry }) => {\n    if (isTextPayload(groupMessageData.payloadInput)) {\n      let message = groupMessageData.payloadInput.payload.payload;\n      /* input sanitization for text payload */\n      groupMessageData.payloadInput.payload = { payload: message.trim() };\n    }\n\n    /* deserialize fields for zome fn */\n    const input = {\n      groupHash: deserializeHash(groupMessageData.groupId),\n      payloadInput: groupMessageData.payloadInput,\n      sender: deserializeHash(groupMessageData.sender),\n      replyTo: groupMessageData.replyTo\n        ? deserializeHash(groupMessageData.replyTo)\n        : undefined,\n    };\n\n    try {\n      const sendGroupMessageOutput = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].SEND_MESSAGE,\n        payload: input,\n      });\n      return await setGroupMessage(\n        sendGroupMessageOutput,\n        groupMessageData,\n        callZome,\n        getState,\n        dispatch\n      );\n      return false;\n    } catch (e) {\n      try {\n        if (!(e as any).message.includes(\"Timed out\")) {\n          const sendGroupMessageOutput = retry({\n            zomeName: ZOMES.GROUP,\n            fnName: FUNCTIONS[ZOMES.GROUP].SEND_MESSAGE,\n            payload: input,\n          });\n          return await setGroupMessage(\n            sendGroupMessageOutput,\n            groupMessageData,\n            callZome,\n            getState,\n            dispatch\n          );\n        } else {\n          return dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.conductor-time-out\" })\n          );\n        }\n      } catch (e) {\n        handleError(e, dispatch, groupMessageData);\n        // console.log(\"sending of group message has failed\", e);\n        return false;\n      }\n    }\n  };\n\nconst handleError = (\n  e: any,\n  dispatch: any,\n  groupMessageData: GroupMessageInput\n) => {\n  switch (true) {\n    case e.message.includes(\"failed to get the given group id\"):\n      dispatch(\n        pushError(\n          \"TOAST\",\n          {},\n          {\n            id: \"redux.err.group.send-group-message.1\",\n            value: {\n              payload: isTextPayload(groupMessageData.payloadInput)\n                ? groupMessageData.payloadInput.payload\n                : groupMessageData.payloadInput.payload.metadata.fileName,\n            },\n          }\n        )\n      );\n      break;\n    case e.message.includes(\"failed to get the replied message from DHT\"):\n      dispatch(\n        pushError(\"TOAST\", {}, { id: \"redux.err.group.send-group-message.2\" })\n      );\n      break;\n    default:\n      break;\n  }\n};\n\nexport default sendGroupMessage;\n","import { isTextPayload, Payload } from \"../../commons/types\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  GroupMessageBundle,\n  GroupMessageInput,\n  SetGroupErrMessageAction,\n  SET_ERR_GROUP_MESSAGE,\n} from \"../types\";\n\n// TODO: cache error messages\nconst setErrGroupMessage =\n  (errMsg: GroupMessageInput): ThunkAction =>\n  async (dispatch, getState) => {\n    const { id, username, fields } = getState().profile;\n    const groups = getState().groups;\n    let payload: Payload | null;\n    if (isTextPayload(errMsg.payloadInput)) {\n      payload = {\n        type: \"TEXT\",\n        payload: { payload: errMsg.payloadInput.payload.payload },\n      };\n    } else {\n      payload = {\n        type: \"FILE\",\n        fileName: errMsg.payloadInput.payload.metadata.fileName,\n        fileSize: errMsg.payloadInput.payload.metadata.fileSize,\n        fileType: errMsg.payloadInput.payload.fileType.type,\n        fileBytes: errMsg.payloadInput.payload.fileBytes,\n        thumbnail: errMsg.payloadInput.payload.fileType.payload?.thumbnail,\n      };\n    }\n    const msg: GroupMessageBundle = {\n      groupMessageId: \"error message\", // TODO: use a unique id\n      groupId: errMsg.groupId,\n      author: { username: username!, id: id!, fields },\n      payload: payload,\n      timestamp: new Date(),\n      replyTo:\n        errMsg.replyTo && groups.messages[errMsg.replyTo]\n          ? {\n              groupId: groups.messages[errMsg.replyTo].groupId,\n              author: groups.messages[errMsg.replyTo].author,\n              payload: groups.messages[errMsg.replyTo].payload,\n              timestamp: groups.messages[errMsg.replyTo].timestamp,\n              replyTo: undefined,\n              readList: groups.messages[errMsg.replyTo].readList,\n            }\n          : undefined,\n      replyToId: errMsg.replyTo ? errMsg.replyTo : undefined,\n      readList: {},\n      err: true,\n    };\n\n    let allErrMessages = groups.errMsgs;\n    let groupErrMessages = allErrMessages[msg.groupId]\n      ? groups.errMsgs[msg.groupId]\n      : [];\n    allErrMessages = {\n      ...allErrMessages,\n      [msg.groupId]: [msg, ...groupErrMessages],\n    };\n\n    dispatch<SetGroupErrMessageAction>({\n      type: SET_ERR_GROUP_MESSAGE,\n      errMsgs: allErrMessages,\n    });\n  };\n\nexport default setErrGroupMessage;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FilePayloadInput } from \"../../commons/types\";\nimport { pushError } from \"../../error/actions\";\nimport { Profile } from \"../../profile/types\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  // IO\n  GroupConversation,\n  GroupMessageInput,\n} from \"../types\";\nimport createGroup from \"./createGroup\";\nimport sendGroupMessage from \"./sendGroupMessage\";\nimport setErrGroupMessage from \"./setErrGroupMessage\";\n\nconst sendInitialGroupMessage =\n  (\n    members: Profile[],\n    // need to handle files as well\n    message: string,\n    files: FilePayloadInput[]\n  ): ThunkAction =>\n  async (dispatch, getState) => {\n    const name = members.map((member) => member.username);\n\n    /* Include yourself in the initial name of the Group */\n    name.push(getState().profile.username!);\n\n    try {\n      const groupResult: GroupConversation = await dispatch(\n        createGroup({\n          name: name.join(\",\"),\n          members: members.map((member: Profile) => member.id),\n        })\n      );\n\n      const inputs: GroupMessageInput[] = [];\n      /* Work on each file that were uploaded and convert them to appropriate input to Zome fn */\n      files.forEach((file: any) => {\n        const filePayloadInput: FilePayloadInput = {\n          type: \"FILE\",\n          payload: {\n            metadata: {\n              fileName: file.payload.metadata.fileName,\n              fileSize: file.payload.metadata.fileSize,\n              fileType: file.payload.metadata.fileType,\n            },\n            fileType: file.payload.fileType,\n            fileBytes: file.payload.fileBytes,\n          },\n        };\n        const groupMessage: GroupMessageInput = {\n          groupId: groupResult.originalGroupId,\n          payloadInput: filePayloadInput,\n          sender: groupResult.creator,\n          // TODO: handle replying to message here as well\n          replyTo: undefined,\n        };\n        inputs.push(groupMessage);\n      });\n\n      /* if there is a text payload, then include that in the input to the zome fn as well */\n      if (message.length) {\n        inputs.push({\n          groupId: groupResult.originalGroupId,\n          payloadInput: {\n            type: \"TEXT\",\n            payload: { payload: message },\n          },\n          sender: groupResult.creator,\n          // TODO: handle replying to message here as well\n          replyTo: undefined,\n        });\n      }\n\n      const messageResults: any[] = [];\n      inputs.forEach(async (groupMessage) => {\n        // res: boolean | group message res\n        await dispatch(sendGroupMessage(groupMessage)).then((res: any) => {\n          res === false\n            ? dispatch(setErrGroupMessage(groupMessage))\n            : messageResults.push(res);\n        });\n      });\n\n      return {\n        groupResult,\n        messageResults,\n      };\n    } catch (e) {\n      /* err from createGoup.ts */\n      switch (true) {\n        case (e as any).message.includes(\n          \"cannot create group with blocked agents\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.create-group.1\" })\n          );\n          break;\n        case (e as any).message.includes(\n          \"groups cannot be created with less than 3 members\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.create-group.2\" })\n          );\n          break;\n        case (e as any).message.includes(\n          \"creator AgentPubKey cannot be included in the group members list\"\n        ):\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.create-group.3\" })\n          );\n          break;\n        case (e as any).message.includes(\n          \"the group name must at least contain 1 character and maximun 50 characters\"\n        ):\n          // console.log(e);\n          dispatch(\n            pushError(\"TOAST\", {}, { id: \"redux.err.group.create-group.4\" })\n          );\n          break;\n        default:\n          dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n          return false;\n      }\n    }\n    return false;\n  };\n\nexport default sendInitialGroupMessage;\n","import { ThunkAction } from \"../../types\";\nimport {\n  GroupMessageBundle,\n  SetGroupErrMessageAction,\n  SET_ERR_GROUP_MESSAGE,\n} from \"../types\";\n\nconst removeErrGroupMessage =\n  (message: GroupMessageBundle): ThunkAction =>\n  async (dispatch, getState) => {\n    if (message.err) {\n      const groups = getState().groups;\n      let groupErrMessages = groups.errMsgs[message.groupId]\n        ? groups.errMsgs[message.groupId]\n        : [];\n\n      const stringified = groupErrMessages.map((errMsg) =>\n        JSON.stringify(errMsg)\n      );\n      const i = stringified.indexOf(JSON.stringify(message));\n      if (i > -1) groupErrMessages.splice(i, 1);\n      dispatch<SetGroupErrMessageAction>({\n        type: SET_ERR_GROUP_MESSAGE,\n        errMsgs: { ...groups.errMsgs, [message.groupId]: groupErrMessages },\n      });\n    }\n  };\n\nexport default removeErrGroupMessage;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport { SET_FILES_BYTES } from \"../types\";\n\nexport const fetchFilesBytes =\n  (fileHashes: string[]): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    /* deserialize id for zome fn */\n    const input = fileHashes.map((fileId: string) => deserializeHash(fileId));\n\n    try {\n      const res = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].GET_FILES_BYTES,\n        payload: input,\n      });\n\n      const { groupFiles } = getState().groups;\n\n      dispatch(\n        setFilesBytes({\n          ...groupFiles,\n          ...res,\n        })\n      );\n      // console.log(res);\n      return res;\n    } catch (e) {\n      if ((e as any).message.includes(\"The file bytes were not found\")) {\n        return dispatch(\n          pushError(\"TOAST\", {}, { id: \"redux.err.group.set-files-bytes.1\" })\n        );\n      } else {\n        return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n      }\n    }\n  };\n\nexport const setFilesBytes =\n  (filesBytes: { [key: string]: Uint8Array }): ThunkAction =>\n  async (dispatch, getState) => {\n    const { groupFiles } = getState().groups;\n    dispatch({\n      type: SET_FILES_BYTES,\n      filesBytes: {\n        ...groupFiles,\n        ...filesBytes,\n      },\n    });\n  };\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  GroupConversation,\n  // action payload types\n  UpdateGroupNameAction,\n  // IO\n  UpdateGroupNameData,\n  // action types\n  UPDATE_GROUP_NAME,\n} from \"../types\";\n\nconst updateGroupName =\n  (updateGroupNameData: UpdateGroupNameData): ThunkAction =>\n  async (dispatch, getState, { callZome }): Promise<UpdateGroupNameData> => {\n    const state = getState();\n    const group = state.groups.conversations[updateGroupNameData.groupId];\n\n    /* return err right away if the group name is the same as the old one */\n    if (group.name === updateGroupNameData.name) {\n      return dispatch(\n        pushError(\"TOAST\", {}, { id: \"redux.err.group.update-group-name.1\" })\n      );\n    }\n\n    /* deserialize fields for zome fn */\n    const input = {\n      name: updateGroupNameData.name,\n      groupId: deserializeHash(updateGroupNameData.groupId),\n      groupRevisionId: deserializeHash(updateGroupNameData.groupRevisionId),\n    };\n\n    try {\n      const updateGroupNameOutput = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].UPDATE_GROUP_NAME,\n        payload: input,\n      });\n\n      /* serializeHash returned value from zome fn */\n      const updateGroupNameDataFromRes: UpdateGroupNameData = {\n        name: updateGroupNameOutput.name,\n        groupId: serializeHash(updateGroupNameOutput.groupId),\n        groupRevisionId: serializeHash(updateGroupNameOutput.groupRevisionId),\n      };\n\n      const groupEntryHash: string = updateGroupNameDataFromRes.groupId;\n      const groupConversation: GroupConversation =\n        state.groups.conversations[groupEntryHash];\n      groupConversation.name = updateGroupNameDataFromRes.name;\n      let conversations = state.groups.conversations;\n      conversations = {\n        ...conversations,\n        [groupEntryHash]: groupConversation,\n      };\n\n      dispatch<UpdateGroupNameAction>({\n        type: UPDATE_GROUP_NAME,\n        conversations,\n      });\n\n      return updateGroupNameData;\n    } catch (e) {\n      switch (true) {\n        case (e as any).message.includes(\"failed to get the given group id\"):\n          return dispatch(\n            pushError(\n              \"TOAST\",\n              {},\n              { id: \"redux.err.group.update-group-name.2\" }\n            )\n          );\n        case (e as any).message.includes(\n          \"the group name must be 1 to 50 characters length\"\n        ):\n          return dispatch(\n            pushError(\n              \"TOAST\",\n              {},\n              { id: \"redux.err.group.update-group-name.3\" }\n            )\n          );\n        case (e as any).message.includes(\n          \"cannot update a group entry if you are not the group creator (admin)\"\n        ):\n          return dispatch(\n            pushError(\n              \"TOAST\",\n              {},\n              { id: \"redux.err.group.update-group-name.4\" }\n            )\n          );\n        default:\n          return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n      }\n    }\n  };\n\nexport default updateGroupName;\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport {\n  GroupConversation,\n  // action payload types\n  UpdateGroupAvatarAction,\n  // IO\n  UpdateGroupAvatarData,\n  // action types\n  UPDATE_GROUP_AVATAR,\n} from \"../types\";\n\nconst updateGroupAvatar =\n  (updateGroupAvatarData: UpdateGroupAvatarData): ThunkAction =>\n  async (dispatch, getState, { callZome }): Promise<UpdateGroupAvatarData> => {\n    const state = getState();\n    const group = state.groups.conversations[updateGroupAvatarData.groupId];\n\n    /* return err right away if the group name is the same as the old one */\n    if (group.avatar === updateGroupAvatarData.avatar) {\n      return dispatch(\n        pushError(\"TOAST\", {}, { id: \"redux.err.group.update-group-name.1\" })\n      );\n    }\n\n    /* deserialize fields for zome fn */\n    const input = {\n      avatar: updateGroupAvatarData.avatar,\n      groupId: deserializeHash(updateGroupAvatarData.groupId),\n      groupRevisionId: deserializeHash(updateGroupAvatarData.groupRevisionId),\n    };\n\n    try {\n      const updateGroupAvatarOutput = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].UPDATE_GROUP_AVATAR,\n        payload: input,\n      });\n\n      /* serializeHash returned value from zome fn */\n      const updateGroupNameDataFromRes: UpdateGroupAvatarData = {\n        avatar: updateGroupAvatarOutput.avatar,\n        groupId: serializeHash(updateGroupAvatarOutput.groupId),\n        groupRevisionId: serializeHash(updateGroupAvatarOutput.groupRevisionId),\n      };\n\n      const groupEntryHash: string = updateGroupNameDataFromRes.groupId;\n      const groupConversation: GroupConversation =\n        state.groups.conversations[groupEntryHash];\n      groupConversation.avatar = updateGroupNameDataFromRes.avatar;\n      let conversations = state.groups.conversations;\n      conversations = {\n        ...conversations,\n        [groupEntryHash]: groupConversation,\n      };\n\n      dispatch<UpdateGroupAvatarAction>({\n        type: UPDATE_GROUP_AVATAR,\n        conversations,\n      });\n\n      return updateGroupAvatarData;\n    } catch (e) {\n      switch (true) {\n        case (e as any).message.includes(\"failed to get the given group id\"):\n          return dispatch(\n            pushError(\n              \"TOAST\",\n              {},\n              { id: \"redux.err.group.update-group-name.2\" }\n            )\n          );\n        case (e as any).message.includes(\n          \"the group name must be 1 to 50 characters length\"\n        ):\n          return dispatch(\n            pushError(\n              \"TOAST\",\n              {},\n              { id: \"redux.err.group.update-group-name.3\" }\n            )\n          );\n        case (e as any).message.includes(\n          \"cannot update a group entry if you are not the group creator (admin)\"\n        ):\n          return dispatch(\n            pushError(\n              \"TOAST\",\n              {},\n              { id: \"redux.err.group.update-group-name.4\" }\n            )\n          );\n        default:\n          return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n      }\n    }\n  };\n\nexport default updateGroupAvatar;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { ThunkAction } from \"../../types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { HoloHashBase64, SET_FILES } from \"../types\";\nimport { pushError } from \"../../../redux/error/actions\";\n\n// action to get the file bytes of a list of file addresses\nexport const getFileBytes =\n  (inputHashes: HoloHashBase64[]): ThunkAction =>\n  async (dispatch, _getState, { callZome }) => {\n    let hashes = inputHashes.map((hash) => deserializeHash(hash));\n    try {\n      const fetchedFiles = await callZome({\n        zomeName: ZOMES.P2PMESSAGE,\n        fnName: FUNCTIONS[ZOMES.P2PMESSAGE].GET_FILE_BYTES,\n        payload: hashes,\n      });\n\n      let transformedFiles: { [key: string]: Uint8Array } = {};\n      if (fetchedFiles?.type !== \"error\") {\n        Object.keys(fetchedFiles).forEach((key) => {\n          transformedFiles[key] = fetchedFiles[key];\n        });\n        if (Object.entries(transformedFiles).length > 0) {\n          dispatch({\n            type: SET_FILES,\n            state: transformedFiles,\n          });\n        }\n        return transformedFiles;\n      }\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n","import { IonGrid, IonIcon, IonLabel, IonRow, IonText } from \"@ionic/react\";\nimport { documentOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FilePayload } from \"../../../../redux/commons/types\";\nimport { RootState } from \"../../../../redux/types\";\nimport { convertSizeToReadableSize } from \"../../../../utils/helpers\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  file: FilePayload;\n  onDownload?(file: FilePayload): any;\n  darken?: boolean;\n  err?: boolean;\n}\n\nconst File: React.FC<Props> = ({ file, onDownload, darken = false, err }) => {\n  const { fileName, fileSize } = file;\n  const fileBytes = useSelector((state: RootState) =>\n    // state.groups.groupFiles[`u${file.fileHash}`]\n    {\n      let fileSet = Object.assign(\n        {},\n        state.groups.groupFiles,\n        state.p2pmessages.files\n      );\n      return fileSet[file.fileHash!];\n    }\n  );\n  const download = () => {\n    if (fileBytes) {\n      const blob = new Blob([fileBytes]); // change resultByte to bytes\n\n      const link = document.createElement(\"a\");\n      link.href = window.URL.createObjectURL(blob);\n      link.download = file.fileName;\n      link.click();\n    }\n  };\n\n  const renderSize = () => {\n    return convertSizeToReadableSize(fileSize);\n  };\n  return (\n    <IonGrid>\n      <IonRow\n        onClick={\n          err ? () => null : onDownload ? () => onDownload(file) : download\n        }\n        className={`ion-align-items-center ${styles.file}`}\n      >\n        <div className=\"ion-padding-end\">\n          <IonIcon\n            className={styles[darken ? \"file-icon-dark\" : \"file-icon-light\"]}\n            size=\"small\"\n            icon={documentOutline}\n          ></IonIcon>\n        </div>\n        <div className=\"ion-align-items-center\">\n          <IonRow>\n            <IonLabel className={`${styles[\"file-name\"]}`}>\n              <p className=\"ion-no-margin ion-text-wrap\">{fileName}</p>\n            </IonLabel>\n          </IonRow>\n          <IonRow>\n            <IonText className={styles[\"file-size\"]}>\n              <span>{renderSize()}</span>\n            </IonText>\n          </IonRow>\n        </div>\n      </IonRow>\n    </IonGrid>\n  );\n};\n\nexport default File;\n","import {\n  IonButton,\n  IonButtons,\n  IonFooter,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonModal,\n  IonPage,\n  IonPopover,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBack, ellipsisVerticalOutline } from \"ionicons/icons\";\nimport React, { SetStateAction, useEffect, useRef, useState } from \"react\";\nimport { IntlShape, useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { FilePayload } from \"../../../../../redux/commons/types\";\nimport { RootState } from \"../../../../../redux/types\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  onDismiss(): any;\n  src: string;\n  file: FilePayload;\n  onDownload?(file: FilePayload): any;\n  intl: IntlShape;\n  fileBytes: Uint8Array;\n}\n\nconst ImageModal: React.FC<Props> = ({\n  onDismiss,\n  src,\n  file,\n  onDownload,\n  intl,\n  fileBytes,\n}) => {\n  const footer = useRef<HTMLIonToolbarElement>(null);\n  const header = useRef<HTMLIonToolbarElement>(null);\n  const [length, setLength] = useState(\"0px\");\n  const [popover, setPopover] = useState<{\n    isOpen: boolean;\n    event: Event | undefined;\n  }>({\n    isOpen: false,\n    event: undefined,\n  });\n\n  useEffect(() => {\n    setLength(\n      footer.current && header.current\n        ? `calc(100vh - ${footer.current!.getBoundingClientRect().height}px - ${\n            header.current!.getBoundingClientRect().height\n          }px)`\n        : \"0px\"\n    );\n  }, []);\n\n  const download = () => {\n    if (fileBytes) {\n      const blob = new Blob([fileBytes]); // change resultByte to bytes\n\n      const link = document.createElement(\"a\");\n      link.href = window.URL.createObjectURL(blob);\n      link.download = file.fileName;\n      link.click();\n      setPopover({\n        isOpen: false,\n        event: undefined,\n      });\n    }\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar className={styles.toolbar} ref={header}>\n          <IonButtons>\n            <IonButton onClick={() => onDismiss()}>\n              <IonIcon icon={arrowBack} />\n            </IonButton>\n          </IonButtons>\n          <IonButtons slot=\"end\">\n            <IonButton\n              onClick={(e: any) => {\n                e.persist();\n                setPopover({ isOpen: true, event: e });\n              }}\n            >\n              <IonIcon icon={ellipsisVerticalOutline} />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n\n      <div\n        className={styles.content}\n        style={{\n          height: length,\n        }}\n      >\n        <img\n          style={{\n            [window.innerWidth > window.innerHeight ? \"height\" : \"width\"]:\n              \"100%\",\n          }}\n          alt=\"Message content\"\n          src={src}\n        />\n      </div>\n      {/* <ion-popover ><popover-example-page class=\"popover-viewport sc-ion-popover-ios\">\n          <ion-list class=\"ios list-ios hydrated\">\n            <ion-list-header class=\"ios hydrated\">Ionic</ion-list-header>\n            <ion-item button=\"\" class=\"item ios in-list ion-activatable ion-focusable hydrated\">Learn Ionic</ion-item>\n            <ion-item button=\"\" class=\"item ios in-list ion-activatable ion-focusable hydrated\">Documentation</ion-item>\n            <ion-item button=\"\" class=\"item ios in-list ion-activatable ion-focusable hydrated\">Showcase</ion-item>\n            <ion-item button=\"\" class=\"item ios in-list ion-activatable ion-focusable hydrated\">GitHub Repo</ion-item>\n            <ion-item lines=\"none\" detail=\"false\" button=\"\" onclick=\"dismissPopover()\" class=\"item ios item-lines-none in-list ion-activatable ion-focusable hydrated\">Close</ion-item>\n          </ion-list>\n        </popover-example-page></div></div><div tabindex=\"0\" class=\"sc-ion-popover-ios\"></div></ion-popover> */}\n      <IonPopover\n        event={popover.event}\n        isOpen={popover.isOpen}\n        onDidDismiss={() => setPopover({ isOpen: false, event: undefined })}\n      >\n        <IonList>\n          <IonItem\n            lines=\"none\"\n            button\n            onClick={onDownload ? () => onDownload(file) : download}\n          >\n            <IonLabel>\n              {intl.formatMessage({\n                id: \"components.chat.media-modal-download\",\n              })}\n            </IonLabel>\n          </IonItem>\n        </IonList>\n      </IonPopover>\n      <IonFooter>\n        <IonToolbar className={styles.toolbar} ref={footer} />\n      </IonFooter>\n    </IonPage>\n  );\n};\n\nexport default ImageModal;\n","import { IonImg, useIonModal } from \"@ionic/react\";\nimport React, { useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { FilePayload } from \"../../../../redux/commons/types\";\nimport { RootState } from \"../../../../redux/types\";\n\nimport ImageModal from \"./ImageModal\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  src: string;\n  file: FilePayload;\n  className?: string;\n  onDownload?(file: FilePayload): any;\n  err?: boolean;\n}\n\nconst Image: React.FC<Props> = ({ src, file, className, onDownload, err }) => {\n  const intl = useIntl();\n  const fileBytes = useSelector((state: RootState) =>\n    // state.groups.groupFiles[`u${file.fileHash}`]\n    {\n      const fileSet = Object.assign(\n        {},\n        state.groups.groupFiles,\n        state.p2pmessages.files\n      );\n      return fileSet[file.fileHash!];\n    }\n  );\n\n  const handleOnImageOnClick = () => {\n    if (!err) {\n      present({ cssClass: \"image-view\" });\n    }\n  };\n  const onDismiss = () => dismiss();\n\n  const [present, dismiss] = useIonModal(ImageModal, {\n    onDownload,\n    onDismiss,\n    src,\n    file,\n    fileBytes,\n    intl,\n  });\n\n  const container = useRef<HTMLDivElement>(null);\n  const [maxHeight, setMaxHeight] = useState(\"auto\");\n\n  return (\n    <>\n      <div\n        ref={container}\n        className={`${styles.image} ${className ? className : \"\"}`}\n        style={{ maxHeight }}\n      >\n        <IonImg\n          onIonImgDidLoad={() =>\n            setMaxHeight(\n              `${container.current!.getBoundingClientRect().width * 1.25}px`\n            )\n          }\n          onClick={handleOnImageOnClick}\n          src={src}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Image;\n","import { isPlatform } from \"@ionic/core\";\nimport { IonIcon, IonSpinner } from \"@ionic/react\";\nimport { download, expandOutline, pause, play } from \"ionicons/icons\";\nimport React, { RefObject, useEffect, useRef, useState } from \"react\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  video: RefObject<HTMLVideoElement>;\n  isPlaying: boolean;\n  duration: number;\n  present(args: any): any;\n  hasError: boolean;\n  onPlayPauseErrorHandler?(): any;\n}\n\nconst Controls: React.FC<Props> = ({\n  video,\n  present,\n  isPlaying,\n  duration,\n  hasError,\n  onPlayPauseErrorHandler,\n}) => {\n  const [visible, setVisible] = useState(isPlatform(\"mobile\"));\n  const timeout = useRef<NodeJS.Timeout>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(\n    function () {\n      if (!hasError) setIsLoading(false);\n    },\n    [hasError]\n  );\n\n  const resetTimeout = () => {\n    if (timeout.current) clearTimeout(timeout.current);\n    timeout.current = setTimeout(function () {\n      setVisible(false);\n    }, 1000);\n  };\n\n  const handleOnMouseEnter = () => {\n    setVisible(true);\n    if (timeout.current) clearTimeout(timeout.current);\n  };\n\n  const handleOnClick = () => {\n    setVisible(true);\n    resetTimeout();\n  };\n\n  const handleOnDoubleClick = () => {\n    present({ cssClass: `video-view` });\n  };\n\n  const onPlayPause = () => {\n    if (!hasError) {\n      if (!isPlaying) video.current?.play();\n      else video.current?.pause();\n    } else {\n      setIsLoading(true);\n      if (onPlayPauseErrorHandler) onPlayPauseErrorHandler();\n    }\n  };\n\n  return (\n    <div\n      onMouseEnter={handleOnMouseEnter}\n      onMouseLeave={resetTimeout}\n      onClick={handleOnClick}\n      className={styles.controls}\n      style={{ opacity: visible ? 1 : 0 }}\n    >\n      <div\n        className={styles[\"play-pause\"]}\n        onClick={onPlayPause}\n        onTouchEnd={onPlayPause}\n      >\n        {isLoading ? (\n          <IonSpinner />\n        ) : (\n          <IonIcon\n            icon={\n              hasError // bytes are not loaded yet\n                ? isPlaying\n                  ? pause // will not happen\n                  : download\n                : isPlaying // bytes are loaded\n                ? pause\n                : play\n            }\n          />\n        )}\n      </div>\n      <div className={styles[\"range-slider-expand\"]}>\n        <div className={styles[\"range-slider\"]}>\n          <input\n            type=\"range\"\n            onChange={() => {}}\n            value={duration * 100}\n            min={0}\n            max={100}\n          />\n        </div>\n        <div className={styles.expand}>\n          <IonIcon\n            onClick={handleOnDoubleClick}\n            onTouchEnd={handleOnDoubleClick}\n            icon={expandOutline}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Controls;\n","import {\n  IonButton,\n  IonButtons,\n  IonFooter,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonModal,\n  IonPage,\n  IonPopover,\n  IonSpinner,\n  IonToolbar,\n} from \"@ionic/react\";\nimport {\n  arrowBack,\n  ellipsisVerticalOutline,\n  pause,\n  play,\n} from \"ionicons/icons\";\nimport React, { SetStateAction, useEffect, useRef, useState } from \"react\";\nimport { IntlShape, useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  src: string;\n  onPlayPauseErrorHandler?(setErrorState: (bool: boolean) => any): any;\n  download?(): any;\n  onDismiss(): any;\n  intl: IntlShape;\n}\n\nconst VideoPlayerModal: React.FC<Props> = ({\n  src,\n  download,\n  onPlayPauseErrorHandler,\n  onDismiss,\n  intl,\n}) => {\n  const [popover, setPopover] = useState({ isOpen: false, event: undefined });\n  const footer = useRef<HTMLIonToolbarElement>(null);\n  const header = useRef<HTMLIonToolbarElement>(null);\n  const [length, setLength] = useState(\"0px\");\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isControlVisible, setIsControlVisible] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const timeout = useRef<NodeJS.Timeout>();\n  const [hasError, setHasError] = useState(false);\n  const video = useRef<HTMLVideoElement>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setLength(\n      footer.current && header.current\n        ? `calc(100vh - ${footer.current!.getBoundingClientRect().height}px - ${\n            header.current!.getBoundingClientRect().height\n          }px)`\n        : \"0px\"\n    );\n  }, []);\n\n  useEffect(\n    function () {\n      if (!hasError) setIsLoading(false);\n    },\n    [hasError]\n  );\n\n  const handleOnPlay = () => {\n    setIsPlaying(true);\n  };\n\n  const handleOnPause = () => {\n    setIsPlaying(false);\n  };\n\n  const onPlayPause = () => {\n    if (!hasError) {\n      if (!isPlaying) video.current?.play();\n      else video.current?.pause();\n    } else {\n      setIsLoading(true);\n      if (onPlayPauseErrorHandler) errorHandler();\n    }\n  };\n\n  const onTimeUpdate = () =>\n    setCurrentTime(video.current!.currentTime / video.current!.duration);\n\n  const handleOnClick = () => {\n    setIsControlVisible(true);\n    if (timeout.current) clearTimeout(timeout.current);\n    timeout.current = setTimeout(function () {\n      setIsControlVisible(false);\n    }, 3000);\n  };\n  const handleError = () => {\n    setHasError(true);\n  };\n\n  const errorHandler = () => {\n    if (onPlayPauseErrorHandler) onPlayPauseErrorHandler(setHasError);\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar ref={header} className={styles.toolbar}>\n          <IonButtons>\n            <IonButton\n              onTouchEnd={() => {\n                setIsPlaying(false);\n                onDismiss();\n              }}\n              onClick={() => {\n                setIsPlaying(false);\n                onDismiss();\n              }}\n            >\n              <IonIcon icon={arrowBack} />\n            </IonButton>\n          </IonButtons>\n          <IonButtons slot=\"end\">\n            <IonButton\n              onTouchEnd={(e: any) => {\n                e.persist();\n                setPopover({ isOpen: true, event: e });\n              }}\n              onClick={(e: any) => {\n                e.persist();\n                setPopover({ isOpen: true, event: e });\n              }}\n            >\n              <IonIcon icon={ellipsisVerticalOutline} />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n\n      <div\n        className={styles.content}\n        style={{\n          height: length,\n        }}\n        onClick={handleOnClick}\n      >\n        <video\n          ref={video}\n          style={{\n            [window.innerWidth > window.innerHeight ? \"height\" : \"width\"]:\n              \"100%\",\n          }}\n          onError={handleError}\n          autoPlay={false}\n          controls={false}\n          onTimeUpdate={onTimeUpdate}\n          onPlay={handleOnPlay}\n          onPause={handleOnPause}\n          loop={false}\n          src={src}\n        />\n        {video.current ? (\n          <div\n            style={{ opacity: isControlVisible ? 1 : 0 }}\n            className={styles[\"modal-control\"]}\n          >\n            {isLoading ? (\n              <IonSpinner></IonSpinner>\n            ) : (\n              <div className={styles[\"play-pause\"]} onClick={onPlayPause}>\n                <IonIcon icon={isPlaying ? pause : play} />\n              </div>\n            )}\n          </div>\n        ) : null}\n      </div>\n\n      <IonFooter>\n        <IonToolbar ref={footer} className={styles.footer}>\n          <div className={styles[\"slider-volume\"]}>\n            <input\n              step={currentTime * 100}\n              value={currentTime * 100}\n              onChange={() => {}}\n              min={0}\n              max={100}\n              type=\"range\"\n            />\n          </div>\n        </IonToolbar>\n      </IonFooter>\n\n      <IonPopover\n        event={popover.event}\n        isOpen={popover.isOpen}\n        onDidDismiss={() => setPopover({ isOpen: false, event: undefined })}\n      >\n        <IonList>\n          {download ? (\n            <IonItem\n              lines=\"none\"\n              button\n              onClick={() => {\n                download();\n                setPopover({ isOpen: false, event: undefined });\n              }}\n            >\n              <IonLabel>\n                {intl.formatMessage({\n                  id: \"components.chat.media-modal-download\",\n                })}\n              </IonLabel>\n            </IonItem>\n          ) : null}\n        </IonList>\n      </IonPopover>\n    </IonPage>\n  );\n};\n\nexport default VideoPlayerModal;\n","import { useIonModal } from \"@ionic/react\";\nimport React, { useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport Controls from \"./Controls\";\nimport styles from \"./style.module.css\";\nimport VideoPlayerModal from \"./VideoPlayerModal\";\n\ninterface Props {\n  src: string;\n  className?: string;\n  thumbnail?: string;\n  download?(): any;\n  onPlayPauseErrorHandler?(setErrorState: (bool: boolean) => any): any;\n  err?: boolean;\n}\n\nconst VideoPlayer: React.FC<Props> = ({\n  src,\n  className,\n  thumbnail,\n  download,\n  onPlayPauseErrorHandler,\n  err,\n}) => {\n  const style = [styles[\"video-player\"]];\n  if (className) style.push(className);\n  const video = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [hasError, setHasError] = useState(false);\n  const container = useRef<HTMLDivElement>(null);\n\n  const handleOnPause = () => {\n    setIsPlaying(false);\n  };\n\n  const handleOnPlay = () => {\n    setIsPlaying(true);\n  };\n\n  const handleError = (e: any) => setHasError(true);\n\n  const errorHandler = () => {\n    if (onPlayPauseErrorHandler) onPlayPauseErrorHandler(setHasError);\n  };\n\n  const intl = useIntl();\n\n  const onDismiss = () => dismiss();\n\n  const [present, dismiss] = useIonModal(VideoPlayerModal, {\n    download,\n    onPlayPauseErrorHandler,\n    src,\n    intl,\n    onDismiss,\n  });\n\n  const onDoubleClick = () => {\n    setIsPlaying(false);\n    present({ cssClass: \"video-view\" });\n  };\n\n  return (\n    <div\n      ref={container}\n      className={style.join(\" \")}\n      onDoubleClick={onDoubleClick}\n    >\n      <video\n        className={styles.video}\n        onTimeUpdate={() =>\n          setCurrentTime(\n            !isNaN(video.current!.currentTime / video.current!.duration)\n              ? video.current!.currentTime / video.current!.duration\n              : 0\n          )\n        }\n        poster={thumbnail}\n        onPlay={handleOnPlay}\n        onPause={handleOnPause}\n        ref={video}\n        controls={false}\n        loop={false}\n        autoPlay={false}\n        src={src}\n        onError={handleError}\n      />\n      {!err ? (\n        <Controls\n          isPlaying={isPlaying}\n          hasError={hasError}\n          onPlayPauseErrorHandler={errorHandler}\n          duration={currentTime}\n          video={video}\n          present={present}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FilePayload } from \"../../../../redux/commons/types\";\nimport { RootState } from \"../../../../redux/types\";\nimport VideoPlayer from \"../../../VideoPlayer\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  file: FilePayload;\n  onDownload?(file: FilePayload): any;\n  onPlayPauseErrorHandler?(setErrorState: (bool: boolean) => any): any;\n  err?: boolean;\n}\n\nconst Video: React.FC<Props> = ({\n  file,\n  onDownload,\n  onPlayPauseErrorHandler,\n  err,\n}) => {\n  const fileBytes = useSelector((state: RootState) => {\n    let fileSet = Object.assign(\n      {},\n      state.groups.groupFiles,\n      state.p2pmessages.files\n    );\n    return fileSet[file.fileHash!];\n    // return state.groups.groupFiles[`u${file.fileHash}`];\n  });\n\n  const download = () => {\n    if (fileBytes) {\n      const blob = new Blob([fileBytes]); // change resultByte to bytes\n      const link = document.createElement(\"a\");\n      link.href = window.URL.createObjectURL(blob);\n      link.download = file.fileName;\n      link.click();\n    }\n  };\n\n  const renderVideo = useMemo(\n    () => (\n      <VideoPlayer\n        download={\n          err ? () => null : onDownload ? () => onDownload(file) : download\n        }\n        src={URL.createObjectURL(new Blob([fileBytes], { type: \"video/mp4\" }))}\n        className={styles.video}\n        thumbnail={URL.createObjectURL(\n          new Blob([file.thumbnail as Uint8Array], { type: \"image/jpeg\" })\n        )}\n        onPlayPauseErrorHandler={onPlayPauseErrorHandler}\n        err={err}\n      />\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fileBytes]\n  );\n  return <div className={styles.video}>{renderVideo}</div>;\n};\n\nexport default Video;\n","import React from \"react\";\nimport { FilePayload } from \"../../../redux/commons/types\";\nimport { fetchFilesBytes } from \"../../../redux/group/actions\";\nimport { getFileBytes } from \"../../../redux/p2pmessages/actions/getFileBytes\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\nimport FileView from \"./FileView\";\nimport ImageView from \"./ImageView\";\nimport VideoView from \"./VideoView\";\n\ninterface Props {\n  timestamp?: Date;\n  file?: FilePayload;\n  type: \"others\" | \"me\";\n  chatType: \"p2p\" | \"group\";\n  onDownload?(file: FilePayload): any;\n  err?: boolean;\n}\n\nconst File: React.FC<Props> = ({\n  timestamp,\n  file,\n  type,\n  onDownload,\n  chatType,\n  err,\n}) => {\n  const decoder = new TextDecoder(\"utf-8\");\n  const dispatch = useAppDispatch();\n\n  const renderFile = () => {\n    switch (file?.fileType) {\n      case \"IMAGE\":\n        return (\n          <ImageView\n            onDownload={onDownload}\n            file={file}\n            src={decoder.decode(file.thumbnail!)}\n            err={err}\n          />\n        );\n      case \"OTHER\":\n        return <FileView onDownload={onDownload} file={file} err={err} />;\n      case \"VIDEO\":\n        return (\n          <VideoView\n            onDownload={onDownload}\n            file={file}\n            onPlayPauseErrorHandler={(setErrorState: any) => {\n              if (chatType === \"p2p\") {\n                dispatch(getFileBytes([file.fileHash!])).then((res: any) => {\n                  if (res) {\n                    setErrorState(false);\n                  }\n                });\n              } else {\n                dispatch(fetchFilesBytes([file.fileHash!])).then((res: any) => {\n                  if (res) {\n                    setErrorState(false);\n                  }\n                });\n              }\n            }}\n            err={err}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return renderFile();\n};\n\nexport default File;\n","import { IonIcon, IonLabel, IonThumbnail } from \"@ionic/react\";\nimport { documentOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport {\n  FilePayload,\n  Payload,\n  TextPayload,\n} from \"../../../redux/commons/types\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { isTextPayload } from \"../../../utils/helpers\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  me: boolean;\n  message: {\n    payload: Payload;\n    author: Profile;\n    id: string;\n  };\n}\n\nconst ReplyTo: React.FC<Props> = ({ me, message }) => {\n  const isText = isTextPayload(message?.payload);\n  const decoder = new TextDecoder();\n  const className = [`${styles[\"reply-to\"]}`];\n\n  return (\n    <div className={className.join(\" \")}>\n      <div\n        className={`${\n          me ? styles[\"vertical-divider-me\"] : styles[\"vertical-divider-others\"]\n        } ion-margin-end`}\n      ></div>\n      {isText ? null : (message.payload as FilePayload)?.fileType ===\n        \"OTHER\" ? (\n        <IonIcon className=\"ion-margin-end\" icon={documentOutline}></IonIcon>\n      ) : (\n        <IonThumbnail className={`${styles.thumbnail} ion-margin-end`}>\n          <img\n            alt=\"Thumbnail\"\n            src={\n              (message?.payload as FilePayload)?.fileType === \"VIDEO\"\n                ? URL.createObjectURL(\n                    new Blob([\n                      (message.payload as FilePayload)?.thumbnail as Uint8Array,\n                    ])\n                  )\n                : decoder.decode((message?.payload as FilePayload)?.thumbnail)\n            }\n          ></img>\n        </IonThumbnail>\n      )}\n      <div\n        className={`${me ? styles[\"content-me\"] : styles[\"content-others\"]}`}\n      >\n        <IonLabel>{message?.author.username}</IonLabel>\n        <p className={styles[\"sub-label\"]}>\n          {isText\n            ? (message?.payload as TextPayload)?.payload?.payload\n            : (message?.payload as FilePayload)?.fileName}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ReplyTo;\n","import { IonText, IonImg } from \"@ionic/react\";\nimport React from \"react\";\nimport { TextPayload } from \"../../../redux/commons/types\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  message: TextPayload;\n  type: \"me\" | \"others\";\n}\n\nconst Text: React.FC<Props> = ({ message, type }) => {\n  const linkExp = new RegExp(\"https://media.tenor.com/images/.*/tenor.gif\");\n  const match = linkExp.test(message.payload.payload);\n\n  return !match ? (\n    <IonText className={styles[type === \"me\" ? \"me\" : \"others\"]}>\n      {message.payload.payload}\n    </IonText>\n  ) : (\n    <IonImg src={message.payload.payload} />\n  );\n};\n\nexport default Text;\n","import {\n  IonAvatar,\n  IonIcon,\n  IonItem,\n  IonText,\n  isPlatform,\n  useIonPopover,\n} from \"@ionic/react\";\nimport {\n  alertCircleOutline,\n  checkmarkCircleOutline,\n  checkmarkDoneCircle,\n  radioButtonOff,\n} from \"ionicons/icons\";\nimport React, { MouseEventHandler, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport {\n  FilePayload,\n  isTextPayload,\n  TextPayload,\n} from \"../../../redux/commons/types\";\nimport { binaryToUrl, usePressHandlers } from \"../../../utils/helpers\";\nimport Identicon from \"../../Identicon\";\nimport Spinner from \"../../Spinner\";\nimport ChatPopover from \"../ChatPopover\";\nimport File from \"../File\";\nimport ReplyTo from \"../ReplyTo\";\nimport { default as common, default as styles } from \"../style.module.css\";\nimport Text from \"../Text\";\nimport { ChatProps } from \"../types\";\n\nconst Me: React.FC<ChatProps> = ({\n  id,\n  profile,\n  payload,\n  timestamp,\n  replyTo,\n  onReply,\n  onDelete,\n  onPinMessage,\n  isPinned,\n  type,\n  showProfilePicture,\n  isSeen = false,\n  onDownload,\n  onRetry,\n  err,\n}) => {\n  const intl = useIntl();\n  const [loading, setLoading] = useState(false);\n\n  const onLongPress = (e: any) =>\n    present({\n      event: e.nativeEvent,\n    });\n  const [present, dismiss] = useIonPopover(ChatPopover, {\n    onHide: () => dismiss(),\n    onPin: onPinMessage,\n    onReply: () => {\n      if (onReply) onReply({ author: profile.username, payload, id });\n    },\n    onDelete: () => {\n      if (onDelete) onDelete();\n    },\n    onRetry: () => {\n      if (onRetry) onRetry(setLoading);\n    },\n    isPinned,\n    intl,\n    err,\n  });\n\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  const pressHandlers = usePressHandlers(onLongPress, () => {});\n  const isText = isTextPayload(payload);\n  const isP2P = type === \"p2p\";\n\n  const fileMaxWidth = isText\n    ? \"\"\n    : isPlatform(\"desktop\")\n    ? common[\"max-file\"]\n    : \"\";\n\n  return (\n    <>\n      <IonItem\n        lines=\"none\"\n        className={`${common[\"me-container\"]} ${fileMaxWidth}`}\n        onClick={(e) => {\n          if (err) onLongPress(e);\n        }}\n        {...pressHandlers}\n      >\n        <div\n          className={`${common[\"me\"]} ${common[isText ? \"text\" : \"file\"]} ${\n            common.bubble\n          }`}\n        >\n          {replyTo ? <ReplyTo me={true} message={replyTo}></ReplyTo> : null}\n          {isText ? (\n            <Text type=\"me\" message={payload as TextPayload} />\n          ) : (\n            <File\n              chatType={isP2P ? \"p2p\" : \"group\"}\n              onDownload={onDownload}\n              type=\"me\"\n              timestamp={timestamp}\n              file={payload as FilePayload}\n              err={err}\n            />\n          )}\n          <IonText>\n            <h6\n              className={`ion-no-margin ion-text-end ${styles[\"message-text\"]}`}\n            >\n              {intl.formatTime(timestamp)}\n              <IonIcon\n                size=\"medium\"\n                icon={\n                  isSeen\n                    ? checkmarkDoneCircle\n                    : err && id !== \"error message\"\n                    ? radioButtonOff\n                    : checkmarkCircleOutline\n                }\n              />\n            </h6>\n          </IonText>\n        </div>\n        {err && id === \"error message\" ? (\n          loading ? (\n            <div className={common.picture}>\n              <Spinner />\n            </div>\n          ) : (\n            <IonIcon\n              color=\"danger\"\n              className={common.picture}\n              style={{ marginLeft: \"0.5rem\" }}\n              icon={alertCircleOutline}\n            />\n          )\n        ) : isP2P ? null : (\n          <div className={common[\"picture\"]} style={{ marginLeft: \"0.5rem\" }}>\n            {showProfilePicture ? (\n              profile.fields.avatar ? (\n                <IonAvatar className={common[\"avatar-container\"]}>\n                  <img src={binaryToUrl(profile.fields.avatar)} alt=\"avatar\" />\n                </IonAvatar>\n              ) : (\n                <IonAvatar className={common[\"avatar-container\"]}>\n                  <Identicon hash={profile.id!} size={35} />\n                </IonAvatar>\n              )\n            ) : null}\n          </div>\n        )}\n      </IonItem>\n      {err && id === \"error message\" ? (\n        loading ? null : (\n          <IonItem lines=\"none\" className={styles[\"not-delivered-container\"]}>\n            <IonText className={styles[\"not-delivered\"]} color=\"danger\">\n              Not delivered\n            </IonText>\n          </IonItem>\n        )\n      ) : null}\n    </>\n  );\n};\n\nexport default Me;\n","import { IonText } from \"@ionic/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  timestamp: Date;\n  onSeen?(complete: () => any): any;\n}\n\nconst MessageTimestamp: React.FC<Props> = ({ timestamp, onSeen }) => {\n  const intl = useIntl();\n  const observerStorage = useRef<IntersectionObserver>();\n  const ref = useRef<HTMLIonTextElement>(null);\n\n  const options = {\n    root: document.querySelector(\".chat-list\"),\n    rootMargin: \"0px\",\n    threshold: 1,\n  };\n\n  const [isComplete, setIsComplete] = useState(false);\n  useEffect(() => {\n    observerStorage.current?.disconnect();\n    observerStorage.current = new IntersectionObserver(() => {\n      if (onSeen) {\n        if (!isComplete) {\n          setIsComplete(true);\n          onSeen(complete);\n        }\n      }\n    }, options);\n    if (ref.current) observerStorage.current?.observe(ref.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isComplete, ref.current]);\n\n  const complete = () => {\n    if (isComplete) setIsComplete(false);\n  };\n\n  return (\n    <IonText ref={ref}>\n      <h6 className={`ion-no-margin ion-text-end ${styles[\"message-text\"]}`}>\n        {intl.formatTime(timestamp)}\n      </h6>\n    </IonText>\n  );\n};\n\nexport default MessageTimestamp;\n","import {\n  IonAvatar,\n  IonItem,\n  IonText,\n  isPlatform,\n  useIonPopover,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport {\n  FilePayload,\n  isTextPayload,\n  TextPayload,\n} from \"../../../redux/commons/types\";\nimport { binaryToUrl, usePressHandlers } from \"../../../utils/helpers\";\nimport Identicon from \"../../Identicon\";\nimport ChatPopover from \"../ChatPopover\";\nimport File from \"../File\";\nimport MessageTimestamp from \"../MessageTimestamp\";\nimport ReplyTo from \"../ReplyTo\";\nimport { default as common } from \"../style.module.css\";\nimport Text from \"../Text\";\nimport { ChatProps } from \"../types\";\n\nconst Others: React.FC<ChatProps> = ({\n  id,\n  profile,\n  type,\n  timestamp,\n  payload,\n  readList,\n  onSeen,\n  showProfilePicture,\n  showName,\n  onReply,\n  isPinned,\n  onPinMessage,\n  replyTo,\n  isSeen = false,\n  onDownload,\n}) => {\n  const intl = useIntl();\n\n  const [show, dismiss] = useIonPopover(ChatPopover, {\n    onHide: () => dismiss(),\n    onPin: onPinMessage,\n    onReply: () => {\n      if (onReply) onReply({ author: profile.username, payload, id });\n    },\n    isPinned,\n    intl,\n  });\n\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  const onLongPress = (e: any) => {\n    show({ event: e.nativeEvent });\n  };\n  const pressHandlers = usePressHandlers(onLongPress, () => {});\n\n  const isText = isTextPayload(payload);\n  const isP2P = type === \"p2p\";\n  const fileMaxWidth = isText\n    ? \"\"\n    : isPlatform(\"desktop\")\n    ? common[\"max-file\"]\n    : \"\";\n\n  return (\n    <>\n      {isP2P ? null : showName ? (\n        <IonItem lines=\"none\" className={`${common[\"author-name\"]}`}>\n          <IonText color=\"medium\">{profile.username}</IonText>\n        </IonItem>\n      ) : null}\n\n      <IonItem\n        lines=\"none\"\n        className={`${common[\"others-container\"]} ${fileMaxWidth}`}\n        {...pressHandlers}\n      >\n        {isP2P ? null : (\n          <div className={common[\"picture\"]} style={{ marginRight: \"0.5rem\" }}>\n            {showProfilePicture ? (\n              profile.fields.avatar ? (\n                <IonAvatar className={common[\"avatar-container\"]}>\n                  <img\n                    src={binaryToUrl(profile.fields.avatar)}\n                    alt=\"avatar\"\n                  ></img>\n                </IonAvatar>\n              ) : (\n                <Identicon hash={profile.id!} size={35} />\n              )\n            ) : null}\n          </div>\n        )}\n\n        <div\n          className={`${common[\"others\"]} ${common[isText ? \"text\" : \"file\"]} ${\n            common.bubble\n          }`}\n        >\n          {replyTo ? <ReplyTo me={false} message={replyTo}></ReplyTo> : null}\n          {isText ? (\n            <Text type=\"others\" message={payload as TextPayload} />\n          ) : (\n            <File\n              chatType={isP2P ? \"p2p\" : \"group\"}\n              onDownload={onDownload}\n              type=\"others\"\n              file={payload as FilePayload}\n              timestamp={timestamp}\n            />\n          )}\n          <MessageTimestamp onSeen={onSeen} timestamp={timestamp} />\n        </div>\n      </IonItem>\n      {/* <ChatModal\n        onPin={onPinMessage as () => any}\n        isPinned={isPinned}\n        onReply={() => {\n          if (onReply) onReply({ author, payload, id });\n        }}\n        open={[isModalOpen, setIsModalOpen]}\n      ></ChatModal> */}\n    </>\n  );\n};\n\nexport default Others;\n","import React, { ForwardRefExoticComponent, RefAttributes } from \"react\";\nimport ChatList from \"./ChatList\";\nimport { ChatListMethods, ChatListProps, ChatProps } from \"./types\";\nimport Me from \"./Me\";\nimport Others from \"./Others\";\n\nconst Chat: {\n  ChatList: ForwardRefExoticComponent<\n    ChatListProps & RefAttributes<ChatListMethods>\n  >;\n  Me: React.FC<ChatProps>;\n  Others: React.FC<ChatProps>;\n} = {\n  ChatList,\n  Me,\n  Others,\n};\n\nexport { Me, Others, ChatList };\n\nexport default Chat;\n","import React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  profiles: Profile[];\n  disabled?: boolean;\n}\n\nconst Typing: React.FC<Props> = ({ profiles, disabled }) => {\n  const intl = useIntl();\n\n  const others = (remaining: Profile[]) => {\n    switch (remaining.length) {\n      case 0:\n        return null;\n      case 1:\n        return `, ${remaining[0].username}`;\n      default:\n        return <span>, {remaining.length} others </span>;\n    }\n  };\n\n  const animateDots = () => {\n    return [\".\", \".\", \".\"].map((dot, i) => (\n      <span\n        key={i}\n        style={{ animationDelay: `${0.3 * i}s` }}\n        className={styles.dot}\n      >\n        {dot}\n      </span>\n    ));\n  };\n\n  const displayNames = (profiles: Profile[]) => {\n    const limit = 3;\n    if (profiles.length === 1)\n      return (\n        <span>\n          {intl.formatMessage(\n            {\n              id: \"components.typing.is-typing\",\n            },\n            { user: profiles[0].username }\n          )}\n        </span>\n      );\n    const names = `${profiles\n      .slice(0, limit - 1)\n      .map((profile) => profile.username)\n      .join(\", \")}`;\n    const remaining = profiles.slice(limit - 1, profiles.length);\n\n    return (\n      <span>\n        {names}\n        {others(remaining)} are typing\n      </span>\n    );\n  };\n  return profiles.length > 0 ? (\n    <div className={`${styles.typing} ion-padding-start`}>\n      {displayNames(profiles)}\n      {animateDots()}\n    </div>\n  ) : null;\n};\n\nexport default Typing;\n","import { createContext, useContext } from \"react\";\nimport { ToastContextType } from \"./types\";\n\nexport const ToastContext = createContext<ToastContextType>({\n  showToast: () => {},\n  dismissToast: () => {},\n  showErrorToast: () => {},\n});\n\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) throw new Error(\"Cannot get toast context :(\");\n  return context;\n};\n","import { IonButton, IonButtons, IonIcon } from \"@ionic/react\";\nimport { send } from \"ionicons/icons\";\nimport React from \"react\";\nimport { FileContent } from \"..\";\nimport Spinner from \"../../Spinner\";\n\ninterface Props {\n  files: FileContent[];\n  message: string;\n  onSend?(): any;\n  loading: boolean;\n}\n\nconst EndButtons: React.FC<Props> = ({ message, files, onSend, loading }) => (\n  <IonButtons slot=\"end\">\n    {/* {message.length > 0 ? null : (\n      <>\n        <IonButton>\n          <IonIcon color=\"medium\" icon={camera} />\n        </IonButton>\n        <IonButton>\n          <IonIcon color=\"medium\" icon={mic} />\n        </IonButton>\n      </>\n    )} */}\n    <IonButton\n      type=\"submit\"\n      onClick={onSend}\n      disabled={message.length === 0 && files.length === 0}\n    >\n      {loading ? <Spinner /> : <IonIcon color=\"medium\" icon={send} />}\n    </IonButton>\n  </IonButtons>\n);\n\nexport default EndButtons;\n","import { IonChip, IonIcon, IonLabel, IonRow } from \"@ionic/react\";\nimport { closeCircle } from \"ionicons/icons\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  files: any[];\n  setFiles: Dispatch<SetStateAction<any[]>>;\n  file: HTMLInputElement | null;\n}\nconst FileView: React.FC<Props> = ({ file, files, setFiles }) => {\n  const handleClose = (index: number) => {\n    (file as HTMLInputElement).value = \"\";\n    setFiles((currFiles) => {\n      currFiles.splice(index, 1);\n      return [...currFiles];\n    });\n  };\n  const decoder = new TextDecoder();\n\n  const getThumbnail = (type: string, thumbnail: Uint8Array) => {\n    if (type === \"IMAGE\") return decoder.decode(thumbnail);\n    else\n      return URL.createObjectURL(new Blob([thumbnail], { type: \"image/jpeg\" }));\n  };\n  return (\n    <IonRow className={styles.row}>\n      {files.map((file, index) => {\n        return (\n          <IonChip\n            {...(file.fileType.type === \"IMAGE\" ||\n            file.fileType.type === \"VIDEO\"\n              ? {\n                  style: {\n                    backgroundImage: `url(${getThumbnail(\n                      file.fileType.type,\n                      file.fileType.payload.thumbnail\n                    )})`,\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundPosition: \"center\",\n                    backgroundSize: \"cover\",\n                  },\n                }\n              : {})}\n            className={styles.chip}\n            key={index}\n          >\n            {file.fileType.type === \"IMAGE\" ||\n            file.fileType.type === \"VIDEO\" ? null : (\n              <IonLabel>{file.metadata.fileName}</IonLabel>\n            )}\n            <IonIcon icon={closeCircle} onClick={() => handleClose(index)} />\n          </IonChip>\n        );\n      })}\n    </IonRow>\n  );\n};\n\nexport default FileView;\n","import { IonIcon, IonThumbnail } from \"@ionic/react\";\nimport { closeCircleOutline, documentsOutline } from \"ionicons/icons\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  messageState: [any, Dispatch<SetStateAction<any>>];\n}\n\nconst ReplyView: React.FC<Props> = ({ messageState }) => {\n  const [message, setMessage] = messageState;\n  const displayPayload = () => {\n    if (message.payload.type === \"TEXT\")\n      return (\n        <div className={`${styles.column} ion-padding-start`}>\n          <span className={styles.author}>{message.author}</span>\n          <span className={styles.text}>{message.payload.payload.payload}</span>\n        </div>\n      );\n    else {\n      switch (message.payload.fileType) {\n        case \"OTHER\": {\n          return (\n            <div className={`${styles.row} ion-padding-start`}>\n              <IonIcon icon={documentsOutline}></IonIcon>\n              <div className={`${styles.column} ion-padding-start`}>\n                <span className={styles.author}>{message.author}</span>\n                <span className={styles.text}>{message.payload.fileName}</span>\n              </div>\n            </div>\n          );\n        }\n        case \"IMAGE\":\n        case \"VIDEO\": {\n          const decoder = new TextDecoder();\n\n          return (\n            <div>\n              <div className={`${styles.row} ion-padding-start`}>\n                <IonThumbnail className={styles.thumbnail}>\n                  <img\n                    alt=\"Thumbnail\"\n                    src={\n                      message.payload?.fileType === \"VIDEO\"\n                        ? URL.createObjectURL(\n                            new Blob([message.payload.thumbnail as Uint8Array])\n                          )\n                        : decoder.decode(message.payload.thumbnail)\n                    }\n                  ></img>\n                </IonThumbnail>\n                <div className={`${styles.column} ion-padding-start`}>\n                  <span className={styles.author}>{message.author}</span>\n                  <span className={styles.text}>\n                    {message.payload.fileName}\n                  </span>\n                </div>\n              </div>\n            </div>\n          );\n        }\n        default:\n          return null;\n      }\n    }\n  };\n\n  return (\n    <div\n      className={`ion-padding-start ion-padding-end ${styles.row} ${styles.reply}`}\n    >\n      <IonIcon\n        icon={closeCircleOutline}\n        onClick={() => {\n          setMessage(null);\n        }}\n      ></IonIcon>\n      {displayPayload()}\n    </div>\n  );\n};\n\nexport default ReplyView;\n","import { ThunkAction } from \"../../types\";\nimport { setGifs } from \"./setGifs\";\nconst apikey = \"9QL1R5ZGUNGM\";\nconst searchLimit = 20;\nlet baseUrl = \"https://g.tenor.com/v1\";\n\nexport const getGifs =\n  (searchTerm: string | undefined, pos?: any): ThunkAction =>\n  (dispatch, getState) => {\n    const { language } = getState().language;\n    const locale = language === \"en\" ? \"en_US\" : \"ja_JP\";\n    return new Promise(function (resolve, reject) {\n      var endpoint = \"\";\n\n      if (searchTerm === undefined) {\n        endpoint = \"/trending?\";\n      } else {\n        endpoint = \"/search?q=\" + searchTerm + \"&\";\n      }\n\n      let searchUrl =\n        baseUrl +\n        endpoint +\n        \"key=\" +\n        apikey +\n        \"&locale=\" +\n        locale +\n        \"&limit=\" +\n        searchLimit;\n\n      // language!;\n\n      if (pos) {\n        searchUrl = searchUrl + \"&pos=\" + pos;\n      }\n\n      var xmlHttp = new XMLHttpRequest();\n\n      xmlHttp.open(\"GET\", searchUrl, true);\n\n      // set the state change callback to capture when the response comes in\n      xmlHttp.onload = function () {\n        if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\n          let responseObjects = JSON.parse(xmlHttp.responseText);\n          let top = responseObjects[\"results\"];\n          let next = responseObjects[\"next\"];\n          let returnValue = { gifs: top, next: next };\n          dispatch(setGifs(top));\n          resolve(returnValue);\n        } else {\n          reject({});\n        }\n      };\n\n      xmlHttp.onerror = function () {\n        reject({});\n      };\n\n      xmlHttp.send(null);\n    });\n  };\n","import { ThunkAction } from \"../../types\";\nimport { SET_GIFS } from \"../types\";\n\nexport const setGifs =\n  (fetchedGifs: any): ThunkAction =>\n  async (dispatch, getState) => {\n    //   let currentState = { ...getState().gif };\n\n    dispatch({\n      type: SET_GIFS,\n      state: fetchedGifs,\n    });\n\n    return;\n  };\n","import { ThunkAction } from \"../../types\";\nimport { returnValue } from \"../types\";\nimport { setCategories } from \"./setCategories\";\n\nconst apikey = \"9QL1R5ZGUNGM\";\nconst searchLimit = 20;\nlet baseUrl = \"https://g.tenor.com/v1\";\n\nexport const getCategories = (): ThunkAction => (dispatch, getState) => {\n  const { language } = getState().language;\n  const locale = language === \"en\" ? \"en_US\" : \"ja_JP\";\n  return new Promise(function (resolve, reject) {\n    var endpoint = \"/categories?\";\n    let searchUrl = baseUrl + endpoint + \"key=\" + apikey + \"&locale=\" + locale;\n\n    var xmlHttp = new XMLHttpRequest();\n\n    xmlHttp.open(\"GET\", searchUrl, true);\n\n    // set the state change callback to capture when the response comes in\n    xmlHttp.onload = function () {\n      if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {\n        let responseObjects = JSON.parse(xmlHttp.responseText);\n        let top = responseObjects[\"tags\"];\n        let returnValue = { top };\n        dispatch(setCategories(top));\n        resolve(returnValue);\n      } else {\n        reject({});\n      }\n    };\n\n    xmlHttp.onerror = function () {\n      reject({});\n    };\n\n    xmlHttp.send(null);\n  });\n};\n","import { ThunkAction } from \"../../types\";\nimport { SET_CATEGORIES } from \"../types\";\n\nexport const setCategories =\n  (fetchedCategories: any): ThunkAction =>\n  async (dispatch, getState) => {\n\n    dispatch({\n      type: SET_CATEGORIES,\n      state: fetchedCategories,\n    });\n\n    return;\n  };\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport {\n  IonContent,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonCard,\n  IonCardHeader,\n  IonSearchbar,\n  IonText,\n  IonButton,\n  IonIcon,\n} from \"@ionic/react\";\nimport {\n  chevronUpOutline,\n  chevronDownOutline,\n  arrowBack,\n} from \"ionicons/icons\";\nimport { getGifs } from \"../../../redux/gif/actions/getGifs\";\nimport { getCategories } from \"../../../redux/gif/actions/getCategories\";\nimport styles from \"./style.module.css\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\nimport Spinner from \"../../../components/Spinner\";\nimport { getGifsState } from \"../../../redux/gif/actions/getGifsState\";\n\nexport interface FileContent {\n  metadata: {\n    fileName: string;\n    fileType: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    fileSize: number;\n  };\n  fileType: {\n    type: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    payload?: { thumbnail: Uint8Array };\n  };\n  fileBytes: Uint8Array;\n}\n\nexport interface MessageInputOnSendParams {\n  message?: string;\n  files?: FileContent[];\n  reply?: string;\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ninterface Props {\n  onChange?: (message: string) => any;\n  onSend?: (opt?: MessageInputOnSendParams) => any;\n  onSelect?: (message: string) => any;\n}\n\nconst GifKeyboard: React.FC<Props> = ({ onSend, onChange, onSelect }) => {\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = useState(\"\");\n  const [selectedGif, setSelectedGif] = useState(\"\");\n  const [categories, setCategories] = useState<any[]>([]);\n  const [showCategories, setShowCategories] = useState<boolean>(true);\n  const [gifs, setGifs] = useState<any[]>([]);\n  const [next, setNext] = useState<any>(undefined);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const handleOnChange = (e: CustomEvent) => setSearchText(e.detail.value!);\n\n  const handleOnClick = (url: string) => {\n    setSelectedGif(url);\n    resetSearchText();\n  };\n\n  const handleOnExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleOnBackClick = () => {\n    setShowCategories(true);\n    resetSearchText();\n  };\n\n  const handleOnCategoryClick = (searchTerm: string) => {\n    setSearchText(searchTerm);\n\n    dispatch(getGifs(searchText)).then((res: any) => {\n      setGifs(res.gifs);\n      setNext(res.next);\n    });\n    setShowCategories(false);\n  };\n\n  const handleOnScrollBottom = (complete: () => Promise<void>) => {\n    dispatch(getGifs(searchText, next)).then((res: any) => {\n      setGifs(gifs ? [...gifs, ...res.gifs] : res.gifs);\n      setNext(res.next);\n    });\n    complete();\n  };\n\n  const resetSearchText = () => setSearchText(\"\");\n\n  const onChangeCallback = useCallback(() => {\n    if (onSelect) onSelect(selectedGif);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedGif]);\n\n  useEffect(() => {\n    dispatch(getCategories()).then((res: any) => {\n      setCategories(res.top);\n    });\n    dispatch(getGifs(searchText)).then((res: any) => {\n      setGifs(res.gifs);\n      setNext(res.next);\n    });\n    dispatch(getGifsState()).then((res: any[]) => setGifs(res));\n  }, [searchText]);\n\n  useEffect(() => onChangeCallback(), [selectedGif, onChangeCallback]);\n\n  const infiniteGifScroll = useRef<HTMLIonInfiniteScrollElement>(null);\n  const complete: () => any = () => infiniteGifScroll.current?.complete();\n\n  const renderCategories = () => {\n    return Object.values(categories).map((category: any) => {\n      return (\n        <div key={category.name}>\n          <div\n            className={styles.textholder}\n            onClick={() => handleOnCategoryClick(category.searchterm)}\n          >\n            <IonText className={styles.categorytext}>\n              {category.name.replace(\"#\", \"\").toUpperCase()}\n            </IonText>\n          </div>\n          <img className={styles.categorypreview} src={category.image} />\n        </div>\n      );\n    });\n  };\n\n  const renderGif = () =>\n    Object.values(gifs).map((gif: any) => {\n      return (\n        // <IonCard\n        //   className={styles.gifcard}\n        //   onClick={() => handleOnClick(gif.media[0].gif.url)}\n        // >\n        <div key={gif.media[0].nanogif.url}>\n          <img\n            className={styles.gifpreview}\n            onClick={() => handleOnClick(gif.media[0].gif.url)}\n            alt={gif.title}\n            src={\n              gif.media[0].tinygif.preview\n                ? gif.media[0].nanogif.url\n                : gif.media[0].gif.preview\n            }\n          />\n        </div>\n        // </IonCard>\n      );\n    });\n\n  return (\n    <IonCard className={styles.keyboardcontainer}>\n      <IonCardHeader className={styles.header}>\n        {showCategories ? null : (\n          <IonButton onClick={handleOnBackClick} fill=\"clear\">\n            <IonIcon icon={arrowBack} />\n          </IonButton>\n        )}\n        <IonSearchbar\n          value={searchText}\n          onIonChange={handleOnChange}\n          debounce={2000}\n        ></IonSearchbar>\n\n        <IonButton onClick={handleOnExpandClick} fill=\"clear\">\n          <IonIcon icon={expanded ? chevronDownOutline : chevronUpOutline} />\n        </IonButton>\n      </IonCardHeader>\n\n      <IonContent\n        className={expanded ? styles.gifcontainerexpanded : styles.gifcontainer}\n      >\n        {gifs && Object.values(gifs).length > 0 ? (\n          <div className={styles.images}>\n            {showCategories && searchText === \"\"\n              ? renderCategories()\n              : renderGif()}\n\n            <IonInfiniteScroll\n              ref={infiniteGifScroll}\n              position=\"bottom\"\n              threshold=\"0px\"\n              onIonInfinite={(e) => handleOnScrollBottom(complete)}\n            >\n              <IonInfiniteScrollContent loadingSpinner=\"circles\"></IonInfiniteScrollContent>\n            </IonInfiniteScroll>\n          </div>\n        ) : (\n          <Spinner />\n        )}\n      </IonContent>\n    </IonCard>\n  );\n};\n\nexport default GifKeyboard;\n","import { ThunkAction } from \"../../types\";\n\nexport const getGifsState = (): ThunkAction => async (dispatch, getState) => {\n  let state = { ...getState().gif.gifs };\n\n  return state;\n};\n","import {\n  IonButton,\n  IonButtons,\n  IonFooter,\n  IonIcon,\n  IonTextarea,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { attachOutline } from \"ionicons/icons\";\nimport React, {\n  forwardRef,\n  ForwardRefRenderFunction,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useToast } from \"../../containers/ToastContainer/context\";\nimport { Payload } from \"../../redux/commons/types\";\nimport EndButtons from \"./EndButtons\";\nimport FileView from \"./FileView\";\nimport ReplyView from \"./ReplyView\";\nimport GifKeyboard from \"../Gif/GifKeyboard\";\nimport styles from \"./style.module.css\";\n\nexport interface FileContent {\n  metadata: {\n    fileName: string;\n    fileType: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    fileSize: number;\n  };\n  fileType: {\n    type: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    payload?: { thumbnail: Uint8Array };\n  };\n  fileBytes: Uint8Array;\n}\n\nexport interface MessageInputOnSendParams {\n  message?: string;\n  files?: FileContent[];\n  reply?: string;\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport interface ReplyParams {\n  payload: Payload;\n  author: string;\n  id: string;\n}\n\ninterface Props {\n  onChange?: (message: string) => any;\n  onSend?: (opt?: MessageInputOnSendParams) => any;\n  onFileSelect?: (e: FileContent[]) => any;\n}\n\nexport interface MessageInputMethods {\n  reply: (message: { payload: Payload; author: string; id: string }) => any;\n}\n\nconst determineFileType = (type: string): \"VIDEO\" | \"IMAGE\" | \"OTHER\" => {\n  // too lazy to do all\n  // url: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n\n  switch (type) {\n    case \"video/mpeg\":\n    case \"video/mp4\":\n      return \"VIDEO\";\n    case \"image/png\":\n    case \"image/jpeg\":\n      return \"IMAGE\";\n    default:\n      return \"OTHER\";\n  }\n};\n\nconst MessageInput: ForwardRefRenderFunction<MessageInputMethods, Props> = (\n  { onChange, onSend, onFileSelect },\n  ref\n) => {\n  const [message, setMessage] = useState(\"\");\n  const handleOnChange = (e: CustomEvent) => setMessage(e.detail.value!);\n  const intl = useIntl();\n  const [isReply, setIsReply] = useState<ReplyParams | undefined>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [onComposition, setOnComposition] = useState<boolean>(false);\n  const file = useRef<HTMLInputElement>(null);\n  const [files, setFiles] = useState<FileContent[]>([]);\n  const [selectedGif, setSelectedGif] = useState(\"\");\n  const handleOnFileClick = () => file?.current?.click();\n\n  const [showGifs, setShowGifs] = useState<boolean>(false);\n\n  const onFileSelectCallback = useCallback(() => {\n    if (onFileSelect) onFileSelect(files);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n\n  useImperativeHandle(ref, () => ({\n    reply: (message: any) => {\n      setIsReply(message);\n    },\n  }));\n\n  const onChangeCallback = useCallback(() => {\n    if (onChange) onChange(message);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [message]);\n\n  const onGifSelectCallback = useCallback(() => {\n    if (onSend && selectedGif !== \"\") {\n      onSend({\n        message: selectedGif,\n        // reply: isReply?.id,\n        setIsLoading: setLoading,\n      });\n      setShowGifs(!showGifs);\n      reset();\n    }\n  }, [selectedGif]);\n\n  const reset = () => {\n    setIsReply(undefined);\n    setMessage(\"\");\n    setFiles([]);\n    if (file.current) file.current!.value = \"\";\n  };\n\n  const handleOnGifClick = () => {\n    setShowGifs(!showGifs);\n  };\n\n  const handleOnGifSelect = (url: string) => {\n    setSelectedGif(url);\n    // if (onSend && message.trim().length !== 0) {\n    //   onSend({\n    //     message: url,\n    //     // reply: isReply?.id,\n    //     setIsLoading: setLoading,\n    //   });\n    //   reset();\n    // }\n  };\n\n  const handleComposition = (event: CompositionEvent) => {\n    if (event.type === \"compositionstart\") {\n      setOnComposition(true);\n    }\n    if (event.type === \"compositionend\") {\n      setOnComposition(false);\n    }\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (onSend && event.key === \"Enter\" && !event.shiftKey && !onComposition) {\n      if (message.trim().length !== 0 || files.length > 0) {\n        onSend({\n          files,\n          message,\n          reply: isReply?.id,\n          setIsLoading: setLoading,\n        });\n        reset();\n      }\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"keydown\", onKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onSend, reset]);\n  useEffect(() => onFileSelectCallback(), [files, onFileSelectCallback]);\n  useEffect(() => onChangeCallback(), [message, onChangeCallback]);\n  useEffect(() => onGifSelectCallback(), [selectedGif, onGifSelectCallback]);\n  const { showToast } = useToast();\n\n  const handleOnFileChange = () => {\n    Array.from(file.current ? file.current.files! : new FileList()).forEach(\n      (file) => {\n        file.arrayBuffer().then((arrBuffer) => {\n          const fileSize = file.size;\n          const fileName = file.name;\n          // 15mb = 15728640b, file.size is of type bytes\n          if (fileSize < 15728640) {\n            const fileBytes = new Uint8Array(arrBuffer);\n            const type = determineFileType(file.type);\n            if (type === \"IMAGE\") {\n              const encoder = new TextEncoder();\n              const reader = new FileReader();\n\n              reader.readAsDataURL(file);\n              reader.onload = (readerEvent) => {\n                const encoded = encoder.encode(\n                  readerEvent.target?.result as string\n                );\n\n                const final = {\n                  metadata: { fileName, fileType: type, fileSize },\n                  fileType: { type, payload: { thumbnail: encoded } },\n                  fileBytes,\n                };\n\n                setFiles((currFiles) => {\n                  currFiles.push(final);\n                  return [...currFiles];\n                });\n              };\n            } else if (type === \"VIDEO\") {\n              const video = document.createElement(\"video\");\n              // const canvas = document.createElement(\"canvas\");\n              const url = URL.createObjectURL(\n                new Blob([fileBytes], { type: \"video/mp4\" })\n              );\n              const BASE_64 = \";base64,\";\n\n              const timeUpdate = function () {\n                if (snapImage()) {\n                  video.removeEventListener(\"timeupdate\", timeUpdate);\n                  video.pause();\n                }\n              };\n\n              const snapImage = (): boolean => {\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                canvas\n                  .getContext(\"2d\")\n                  ?.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n                const image = canvas.toDataURL(\"image/jpeg\");\n\n                const success = image.length > 10;\n                if (success) {\n                  const img = document.createElement(\"img\");\n\n                  document.getElementsByTagName(\"div\")[0].appendChild(img);\n                  URL.revokeObjectURL(url);\n\n                  const base64 = image.split(BASE_64)[1]?.trim();\n                  if (base64) {\n                    const byteCharacters = window.atob(\n                      image.split(BASE_64)[1]?.trim()\n                    );\n\n                    const byteNumbers = new Array(byteCharacters.length);\n                    for (let i = 0; i < byteCharacters.length; i++)\n                      byteNumbers[i] = byteCharacters.charCodeAt(i);\n\n                    const uArr = new Uint8Array(byteNumbers);\n\n                    // });\n                    const final = {\n                      metadata: { fileName, fileType: type, fileSize },\n                      fileType: {\n                        type,\n                        payload: { thumbnail: uArr },\n                      },\n                      fileBytes,\n                    };\n\n                    setFiles((currFiles) => {\n                      currFiles.push(final);\n                      return [...currFiles];\n                    });\n                  }\n                }\n\n                return success;\n              };\n\n              video.src = url;\n              video.addEventListener(\"timeupdate\", timeUpdate);\n              video.preload = \"metadata\";\n              video.muted = true;\n              video.play();\n            } else {\n              const final = {\n                metadata: { fileName, fileType: type, fileSize },\n                fileType: { type },\n                fileBytes,\n              };\n              setFiles((currFiles) => {\n                currFiles.push(final);\n                return [...currFiles];\n              });\n            }\n          } else\n            showToast({\n              message: intl.formatMessage(\n                {\n                  id: \"components.message-input.over-size-limit\",\n                },\n                { fileName }\n              ),\n              color: \"danger\",\n              duration: 2500,\n            });\n        });\n      }\n    );\n  };\n\n  const renderFileView = useMemo(\n    () =>\n      files.length > 0 ? (\n        <FileView file={file.current} files={files} setFiles={setFiles} />\n      ) : null,\n    [files]\n  );\n\n  return (\n    <>\n      <IonFooter>\n        {showGifs ? <GifKeyboard onSelect={handleOnGifSelect} /> : null}\n        {isReply ? <ReplyView messageState={[isReply, setIsReply]} /> : null}\n        {renderFileView}\n        <IonToolbar className={styles.toolbar}>\n          <IonButtons slot=\"start\">\n            {files.length > 0 ? null : (\n              <IonButton onClick={handleOnFileClick}>\n                <IonIcon color=\"medium\" icon={attachOutline} />\n              </IonButton>\n            )}\n            <IonButton onClick={handleOnGifClick}>\n              <IonIcon color=\"medium\" icon=\"assets/icon/gif.svg\" />\n            </IonButton>\n          </IonButtons>\n          <IonTextarea\n            value={message}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\" && !event.shiftKey) {\n                // prevent default behavior\n                event.preventDefault();\n                //alert(\"ok\");\n                return false;\n              }\n            }}\n            className={styles[\"textarea\"]}\n            onIonChange={handleOnChange}\n            autoGrow={true}\n            placeholder={intl.formatMessage({\n              id: \"app.new-conversation.message-placeholder\",\n            })}\n            ref={(el) => {\n              if (el) {\n                el.addEventListener(\"compositionstart\", handleComposition);\n                el.addEventListener(\"compositionend\", handleComposition);\n              }\n            }}\n          />\n          <EndButtons\n            files={files}\n            onSend={() => {\n              if (onSend) {\n                onSend({\n                  files,\n                  message,\n                  reply: isReply?.id,\n                  setIsLoading: setLoading,\n                });\n              }\n              reset();\n            }}\n            message={message}\n            loading={loading}\n          />\n        </IonToolbar>\n      </IonFooter>\n      <input ref={file} type=\"file\" hidden onChange={handleOnFileChange} />\n    </>\n  );\n};\n\nexport default forwardRef(MessageInput);\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { Profile } from \"../../profile/types\";\nimport { ThunkAction } from \"../../types\";\nimport { SET_CONTACTS } from \"../types\";\n\nconst addContact =\n  (profile: Profile): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    const contacts = getState().contacts.contacts;\n\n    try {\n      await callZome({\n        zomeName: ZOMES.CONTACTS,\n        fnName: FUNCTIONS[ZOMES.CONTACTS].ADD_CONTACTS,\n        payload: [deserializeHash(profile.id)],\n      });\n\n      contacts[profile.id] = profile;\n      dispatch({ type: SET_CONTACTS, contacts });\n      return true;\n    } catch (e) {\n      if ((e as any).message.includes(\"agent already added\"))\n        dispatch(\n          pushError(\n            \"TOAST\",\n            {},\n            {\n              id: \"redux.err.contacts.add-contact.1\",\n              value: { username: profile.username },\n            }\n          )\n        );\n      else if ((e as any).message.includes(\"agent is blocked\"))\n        dispatch(\n          pushError(\n            \"TOAST\",\n            {},\n            {\n              id: \"redux.err.contacts.add-contact.2\",\n              value: { username: profile.username },\n            }\n          )\n        );\n    }\n    return false;\n  };\n\nexport default addContact;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { Profile } from \"../../profile/types\";\nimport { ThunkAction } from \"../../types\";\nimport { SET_BLOCKED, SET_CONTACTS } from \"../types\";\n\nconst blockContact =\n  (profile: Profile): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    const { contacts, blocked } = getState().contacts;\n\n    try {\n      blocked[profile.id] = profile;\n      await callZome({\n        zomeName: ZOMES.CONTACTS,\n        fnName: FUNCTIONS[ZOMES.CONTACTS].BLOCK_CONTACTS,\n        payload: [deserializeHash(profile.id)],\n      });\n      delete contacts[profile.id];\n      dispatch({ type: SET_BLOCKED, blocked });\n      dispatch({ type: SET_CONTACTS, contacts });\n\n      return true;\n    } catch (e) {\n      if ((e as any).message.includes(\"this agent is already blocked\")) {\n        dispatch(\n          pushError(\n            \"TOAST\",\n            {},\n            {\n              id: \"redux.err.contacts.block-contact.1\",\n              value: { username: profile.username },\n            }\n          )\n        );\n      }\n    }\n    return false;\n  };\n\nexport default blockContact;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { binaryToUrl } from \"../../../utils/helpers\";\nimport { pushError } from \"../../error/actions\";\nimport { AgentProfile, Profile } from \"../../profile/types\";\nimport { ThunkAction } from \"../../types\";\nimport { SET_CONTACTS } from \"../types\";\n\nconst fetchMyContacts =\n  (): ThunkAction =>\n  async (dispatch, _getState, { callZome }) => {\n    try {\n      const ids: Uint8Array[] = await callZome({\n        zomeName: ZOMES.CONTACTS,\n        fnName: FUNCTIONS[ZOMES.CONTACTS].LIST_ADDED,\n      });\n      const idsB64 = ids.map((id) => serializeHash(id));\n\n      let contacts: { [key: string]: Profile } = {};\n      try {\n        const profilesOutput = await callZome({\n          zomeName: ZOMES.PROFILES,\n          fnName: FUNCTIONS[ZOMES.PROFILES].GET_AGENTS_PROFILES,\n          payload: idsB64,\n        });\n        profilesOutput.forEach((agentProfile: AgentProfile) => {\n          const id = agentProfile.agent_pub_key;\n          contacts[id] = {\n            id,\n            username: agentProfile.profile.nickname,\n            fields: agentProfile.profile.fields.avatar\n              ? {\n                  avatar: agentProfile.profile.fields.avatar,\n                }\n              : {},\n          };\n        });\n        dispatch({\n          type: SET_CONTACTS,\n          contacts,\n        });\n        return contacts;\n      } catch (e) {\n        dispatch(\n          pushError(\n            \"TOAST\",\n            {},\n            { id: \"redux.err.contacts.fetch-my-contacts.1\" }\n          )\n        );\n      }\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n    return null;\n  };\n\nexport default fetchMyContacts;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { Profile } from \"../../profile/types\";\nimport { ThunkAction } from \"../../types\";\nimport { SET_CONTACTS } from \"../types\";\n\nconst removeContact =\n  (profile: Profile): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    const contacts = getState().contacts.contacts;\n\n    try {\n      await callZome({\n        zomeName: ZOMES.CONTACTS,\n        fnName: FUNCTIONS[ZOMES.CONTACTS].REMOVE_CONTACTS,\n        payload: [deserializeHash(profile.id)],\n      });\n\n      delete contacts[profile.id];\n      dispatch({ type: SET_CONTACTS, contacts });\n      return true;\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n    return false;\n  };\n\nexport default removeContact;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { Profile } from \"../../profile/types\";\nimport { ThunkAction } from \"../../types\";\nimport { SET_BLOCKED } from \"../types\";\n\nconst unblockContact =\n  (profile: Profile): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    const blocked = getState().contacts.blocked;\n    try {\n      await callZome({\n        zomeName: ZOMES.CONTACTS,\n        fnName: FUNCTIONS[ZOMES.CONTACTS].UNBLOCK_CONTACTS,\n        payload: [deserializeHash(profile.id)],\n      });\n\n      delete blocked[profile.id];\n      dispatch({ type: SET_BLOCKED, blocked });\n      return true;\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n    return false;\n  };\n\nexport default unblockContact;\n","import { ThunkAction } from \"../../types\";\nimport { P2PMessage, SetErrMessageAction, SET_ERR_MESSAGE } from \"../types\";\n\n// TODO: cache error messages\nconst removeErrMessage =\n  (message: P2PMessage): ThunkAction =>\n  async (dispatch, getState) => {\n    if (message.err) {\n      const { errMsgs } = getState().p2pmessages;\n      let errMessages = errMsgs[message.receiver.id]\n        ? errMsgs[message.receiver.id]\n        : [];\n\n      const stringified = errMessages.map((errMsg) => JSON.stringify(errMsg));\n      const i = stringified.indexOf(JSON.stringify(message));\n      if (i > -1) errMessages.splice(i, 1);\n      dispatch<SetErrMessageAction>({\n        type: SET_ERR_MESSAGE,\n        state: {\n          errMsgs: { ...errMsgs, [message.receiver.id]: errMessages },\n        },\n      });\n    }\n  };\n\nexport default removeErrMessage;\n","import { FileContent } from \"../../../components/MessageInput\";\nimport { Payload } from \"../../commons/types\";\nimport { ThunkAction } from \"../../types\";\nimport { P2PMessage, SetErrMessageAction, SET_ERR_MESSAGE } from \"../types\";\n\nexport const setErrorMessage =\n  (\n    receiver: string,\n    text: string,\n    type: string,\n    replyTo?: string,\n    file?: FileContent\n  ): ThunkAction =>\n  (dispatch, getState) => {\n    const { id, username, fields } = getState().profile;\n    const contacts = getState().contacts.contacts;\n    const { messages } = getState().p2pmessages;\n\n    let payload: Payload;\n    if (type === \"TEXT\") {\n      payload = {\n        type: \"TEXT\",\n        payload: { payload: text.trim() },\n      };\n    } else {\n      payload = {\n        type: \"FILE\",\n        fileName: file!.metadata.fileName,\n        fileSize: file!.metadata.fileSize,\n        fileType: file!.fileType.type,\n        fileBytes: file!.fileBytes,\n        thumbnail: file!.fileType.payload?.thumbnail,\n      };\n    }\n    let message: P2PMessage = {\n      p2pMessageEntryHash: \"error message\", // TODO: use a unique ID\n      author: { id: id!, username: username!, fields },\n      receiver: {\n        id: receiver,\n        username: contacts[receiver].username!,\n        fields: contacts[receiver].fields,\n      },\n      payload: payload,\n      timestamp: new Date(),\n      replyTo:\n        replyTo && messages[replyTo]\n          ? {\n              p2pMessageEntryHash: messages[replyTo].p2pMessageEntryHash,\n              author: messages[replyTo].author,\n              receiver: messages[replyTo].receiver,\n              payload: messages[replyTo].payload,\n              timestamp: messages[replyTo].timestamp,\n              replyTo: undefined,\n              receipts: [],\n            }\n          : undefined,\n      receipts: [],\n      replyToId: replyTo,\n      err: true,\n    };\n\n    let allErrMsgs = getState().p2pmessages.errMsgs;\n    let thisErrMsgs = getState().p2pmessages.errMsgs[receiver]\n      ? getState().p2pmessages.errMsgs[receiver]\n      : [];\n    allErrMsgs = {\n      ...allErrMsgs,\n      [receiver]: [message, ...thisErrMsgs],\n    };\n\n    dispatch<SetErrMessageAction>({\n      type: SET_ERR_MESSAGE,\n      state: {\n        errMsgs: allErrMsgs,\n      },\n    });\n    return true;\n  };\n","import {\n  IonAvatar,\n  IonButton,\n  IonButtons,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonTitle,\n  IonToolbar,\n  useIonPopover,\n} from \"@ionic/react\";\nimport {\n  arrowBackSharp,\n  ellipsisVerticalOutline,\n  informationCircleOutline,\n  pin,\n  search,\n} from \"ionicons/icons\";\nimport React from \"react\";\nimport { IntlShape, useIntl } from \"react-intl\";\nimport { useHistory } from \"react-router\";\nimport AgentIdentifier from \"../../components/AgentIdentifier\";\nimport Identicon from \"../../components/Identicon\";\nimport { Profile } from \"../../redux/profile/types\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  id: string;\n  username: string;\n  pathname: string;\n  conversant: Profile;\n}\n\ninterface ChatMenuItemsProps {\n  history: any;\n  conversant: Profile;\n  pathname: string;\n  onHide(): any;\n  intl: IntlShape;\n}\n\nconst ChatMenuItems: React.FC<ChatMenuItemsProps> = ({\n  history,\n  conversant,\n  onHide,\n  pathname,\n  intl,\n}) => {\n  return (\n    <IonList>\n      <IonItem\n        button\n        onClick={() => {\n          onHide();\n          history.push({\n            pathname: `${pathname}/details`,\n            state: { conversant },\n          });\n        }}\n      >\n        <IonIcon slot=\"start\" icon={informationCircleOutline} />\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.chat.header-details\" })}\n        </IonLabel>\n      </IonItem>\n      <IonItem\n        button\n        onClick={() => {\n          history.push({ pathname: `/u/${conversant.id}/search` });\n          onHide();\n        }}\n      >\n        <IonIcon slot=\"start\" icon={search} />\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.chat.header-search\" })}\n        </IonLabel>\n      </IonItem>\n      <IonItem\n        button\n        onClick={() => {\n          history.push({ pathname: `/u/${conversant.id}/pinned` });\n          onHide();\n        }}\n      >\n        <IonIcon slot=\"start\" icon={pin} />\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.chat.header-pinned-messages\" })}\n        </IonLabel>\n      </IonItem>\n    </IonList>\n  );\n};\n// {\n//   <IonButton onClick={() => history.push(`/u/${conversant.id}/search`)}>\n//             <IonIcon slot=\"icon-only\" icon={search} />\n//           </IonButton>\n//           <IonButton onClick={handleOnClick}>\n//             <IonIcon slot=\"icon-only\" icon={informationCircleOutline} />\n//           </IonButton>\n// }\n\nconst ChatHeader: React.FC<Props> = ({\n  id,\n  username,\n  pathname,\n  conversant,\n}) => {\n  const history = useHistory();\n  const intl = useIntl();\n  const [present, dismiss] = useIonPopover(ChatMenuItems, {\n    onHide: () => dismiss(),\n    history,\n    conversant,\n    pathname,\n    intl,\n  });\n  const handleOnBack = () =>\n    history.push({\n      pathname: \"/home/messaging\",\n    });\n\n  const handleOnProfileClick = () =>\n    history.push({\n      pathname: `/p/${conversant.id}`,\n      //   state: { profile: { username: state?.username, id } },\n      state: {\n        profile: {\n          username: conversant.username,\n          id: conversant.id,\n          fields: conversant.fields,\n        },\n        prev: `/u/${conversant.id}`,\n      },\n    });\n\n  // const handleOnClick = () => {\n  //   history.push({\n  //     pathname: `${pathname}/details`,\n  //     state: { conversant },\n  //   });\n  // };\n\n  return (\n    <IonHeader>\n      <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonButton onClick={handleOnBack} className=\"ion-no-padding\">\n            <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n          </IonButton>\n        </IonButtons>\n        <div className={styles[\"title-container\"]}>\n          <IonAvatar className={`${styles[\"avatar\"]} ion-padding`}>\n            <Identicon hash={id} avatar={conversant.fields.avatar} size={50} />\n          </IonAvatar>\n          <IonTitle className={styles[\"title\"]} onClick={handleOnProfileClick}>\n            <AgentIdentifier nickname={username} id={id} />\n          </IonTitle>\n        </div>\n        <IonButtons slot=\"end\">\n          <IonButton onClick={(e) => present({ event: e.nativeEvent })}>\n            <IonIcon icon={ellipsisVerticalOutline}></IonIcon>\n          </IonButton>\n        </IonButtons>\n      </IonToolbar>\n    </IonHeader>\n  );\n};\n\nexport default ChatHeader;\n","import { IonContent, IonPage } from \"@ionic/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation, useParams } from \"react-router\";\nimport { ChatList, Me, Others } from \"../../components/Chat\";\nimport { ChatListMethods } from \"../../components/Chat/types\";\nimport Typing from \"../../components/Chat/Typing\";\nimport MessageInput, {\n  FileContent,\n  MessageInputMethods,\n  MessageInputOnSendParams,\n} from \"../../components/MessageInput\";\nimport { FilePayload } from \"../../redux/commons/types\";\nimport { fetchMyContacts } from \"../../redux/contacts/actions\";\nimport { getFileBytes } from \"../../redux/p2pmessages/actions/getFileBytes\";\nimport { getPreviousMessages } from \"../../redux/p2pmessages/actions/getPreviousMessages\";\nimport { getPinnedMessages } from \"../../redux/p2pmessages/actions/getPinnedMessages\";\nimport { getP2PState } from \"../../redux/p2pmessages/actions/helpers/getP2PState\";\nimport { isTyping } from \"../../redux/p2pmessages/actions/isTyping\";\n// type imports\nimport { pinMessage } from \"../../redux/p2pmessages/actions/pinMessage\";\nimport { readMessage } from \"../../redux/p2pmessages/actions/readMessage\";\nimport removeErrMessage from \"../../redux/p2pmessages/actions/removeErrMessage\";\nimport { sendMessage } from \"../../redux/p2pmessages/actions/sendMessage\";\nimport { setErrorMessage } from \"../../redux/p2pmessages/actions/setErrMessage\";\nimport {\n  P2PHashMap,\n  P2PMessage,\n  P2PMessageReceipt,\n} from \"../../redux/p2pmessages/types\";\nimport { Profile } from \"../../redux/profile/types\";\nimport { RootState } from \"../../redux/types\";\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport ChatHeader from \"./ChatHeader\";\nimport recommitMessage from \"../../redux/p2pmessages/actions/signals/recommitMessage\";\n\nconst Chat: React.FC = () => {\n  const dispatch = useAppDispatch();\n  /* STATES */\n  const { id } = useParams<{ id: string }>();\n  const [message, setMessage] = useState<string>(\"\");\n  const [files, setFiles] = useState<FileContent[]>([]);\n  const [replyTo, setReplyTo] = useState<string>(\"\");\n  const [messagesWithConversant, setMessagesWithConversant] = useState<\n    {\n      message: P2PMessage;\n      receipt?: P2PMessageReceipt | undefined;\n    }[]\n  >([]);\n  const [messageReceipts, setMessageReceipts] = useState<P2PMessage[]>([]);\n  const [disableGetPrevious, setDisableGetPrevious] = useState<boolean>(false);\n  const {\n    conversations,\n    messages,\n    receipts,\n    errMsgs,\n    files: fetchedFiles,\n    pinned,\n  } = useSelector((state: RootState) => state.p2pmessages);\n\n  const typing = useSelector((state: RootState) => {\n    const allTypingProfiles = state.p2pmessages.typing;\n    const typingProfile = Object.values(allTypingProfiles).filter(\n      (profile) => profile.id === id\n    );\n    return typingProfile;\n  });\n  const conversant = useSelector((state: RootState) => {\n    const contacts = state.contacts.contacts;\n    const conversant = Object.values(contacts).filter(\n      (contact) => contact.id === id\n    );\n    return conversant[0];\n  });\n  const { readReceipt, typingIndicator } = useSelector(\n    (state: RootState) => state.preference\n  );\n\n  const { pathname, state }: { pathname: string; state: { username: string } } =\n    useLocation();\n\n  const username = useSelector((rootState: RootState) => {\n    if (state?.username) return state?.username;\n    if (rootState.contacts?.contacts[id]?.username)\n      return rootState.contacts?.contacts[id]?.username;\n\n    fetchMyContacts();\n    return \"\";\n  });\n  /* REFS */\n  const scrollerRef = useRef<ChatListMethods>(null);\n  const didMountRef = useRef(false);\n  const receiptsTimeout = useRef<NodeJS.Timeout>();\n  // const didMountRef2 = useRef(false);\n  const inputTimeout = useRef<NodeJS.Timeout>();\n  const messageInputRef = useRef<MessageInputMethods | null>(null);\n\n  /* USE EFFECTS */\n  /* \n      scrolls the conversation to the bottom \n      when opening a chat box\n    */\n  useEffect(() => {\n    scrollerRef.current!.scrollToBottom();\n  }, []);\n\n  useEffect(() => {\n    scrollerRef.current!.scrollToBottom();\n  }, [conversant]);\n\n  /* \n    filters messages with conversant and\n    filters latest receipt/status\n    when redux state of p2pmessages changes\n  */\n  useEffect(() => {\n    if (conversant !== undefined) {\n      dispatch(getP2PState(conversant)).then((res: any) =>\n        setMessagesWithConversant(res)\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversations, messages, receipts, conversant, errMsgs]);\n\n  useEffect(() => {\n    dispatch(getPinnedMessages(id));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // debounce to dispatch readMessage\n  useEffect(() => {\n    if (messageReceipts.length > 0) {\n      if (receiptsTimeout.current) clearTimeout(receiptsTimeout.current);\n      receiptsTimeout.current = setTimeout(() => {\n        dispatch(readMessage(messageReceipts));\n        setMessageReceipts([]);\n      }, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messageReceipts]);\n\n  /* HANDLERS */\n  /*\n    dispatches a typing indicator when the user types.\n    call typing indicator with false parameter with debounce of 500ms as well.\n  */\n  const handleOnChange = (message: string, conversant: Profile) => {\n    if (didMountRef.current === true) {\n      if (typingIndicator) {\n        dispatch(\n          isTyping(\n            conversant.id,\n            message && message.length !== 0 ? true : false\n          )\n        );\n\n        if (inputTimeout.current) clearTimeout(inputTimeout.current);\n\n        inputTimeout.current = setTimeout(\n          () => dispatch(isTyping(conversant.id, false)),\n          500\n        );\n      }\n      setMessage(message);\n    } else {\n      didMountRef.current = true;\n    }\n  };\n\n  /* \n      dispatches an action to hc to send a message\n      together with any file attached\n      when clicking the send button  \n    */\n  const handleOnSubmit = (opt?: MessageInputOnSendParams) => {\n    let { message: message2, setIsLoading } = { ...opt };\n    setIsLoading!(true);\n    if (message2 && message2 !== \"\") {\n      dispatch(\n        sendMessage(\n          conversant.id,\n          message2,\n          \"TEXT\",\n          replyTo !== \"\" ? replyTo : undefined\n        )\n      ).then((res: any) => {\n        if (!res) {\n          dispatch(\n            setErrorMessage(\n              conversant.id,\n              message,\n              \"TEXT\",\n              replyTo !== \"\" ? replyTo : undefined\n            )\n          );\n        }\n        return files.length\n          ? files.forEach((file) =>\n              dispatch(\n                sendMessage(\n                  conversant.id,\n                  message,\n                  \"FILE\",\n                  replyTo !== \"\" ? replyTo : undefined,\n                  file\n                )\n              ).then((res: any) => {\n                if (!res) {\n                  dispatch(\n                    setErrorMessage(\n                      conversant.id,\n                      message,\n                      \"FILE\",\n                      replyTo !== \"\" ? replyTo : undefined,\n                      file\n                    )\n                  );\n                }\n                setIsLoading!(false);\n              })\n            )\n          : setIsLoading!(false);\n      });\n    }\n\n    if (message2 === \"\" && files.length) {\n      files.forEach((file) =>\n        dispatch(\n          sendMessage(\n            conversant.id,\n            message,\n            \"FILE\",\n            replyTo !== \"\" ? replyTo : undefined,\n            file\n          )\n        ).then((res: any) => {\n          if (!res) {\n            dispatch(\n              setErrorMessage(\n                conversant.id,\n                message,\n                \"FILE\",\n                replyTo !== \"\" ? replyTo : undefined,\n                file\n              )\n            );\n          }\n          setIsLoading!(false);\n        })\n      );\n    }\n    scrollerRef.current!.scrollToBottom();\n    setReplyTo(\"\");\n  };\n\n  /* \n      disptaches an action to hc to get the next batch of older messages\n      when reaching the beginning/top of the chat box\n    */\n  const handleOnScrollTop = (complete: any) => {\n    if (disableGetPrevious === false) {\n      const lastMessage = messagesWithConversant[0]\n        ? messagesWithConversant[0].message\n        : null;\n      if (lastMessage && !lastMessage.err) {\n        dispatch(\n          getPreviousMessages(\n            conversant.id,\n            5,\n            \"All\",\n            lastMessage.timestamp,\n            lastMessage.p2pMessageEntryHash\n          )\n        ).then((res: P2PHashMap) => {\n          // disable getPrevious if return value is empty\n          if (res && Object.values(res)[0][conversant.id].length <= 0) {\n            setDisableGetPrevious(true);\n          }\n          return complete();\n        });\n      }\n    }\n    return complete();\n  };\n\n  /* \n      dispatches an action to hc to mark a message as read \n      which emits a signal to the sender\n      when the chat bubble comes into view\n    */\n\n  const onSeenHandler = (messageBundle: {\n    message: P2PMessage;\n    receipt?: P2PMessageReceipt;\n  }) => {\n    if (messageBundle.receipt!.status !== \"read\" && readReceipt) {\n      // dispatch(readMessage([messageBundle.message]));\n      setMessageReceipts((currMessageReceipts) => [\n        ...currMessageReceipts,\n        messageBundle.message,\n      ]);\n    }\n  };\n\n  /* \n    downloads a file when already in redux state\n    if not, dispatches an action to get the file from hc\n    when clicking the file download button\n  */\n  const onDownloadHandler = (file: FilePayload) => {\n    fetchedFiles[file.fileHash!] !== undefined\n      ? downloadFile(fetchedFiles[file.fileHash!], file.fileName)\n      : dispatch(getFileBytes([file.fileHash!])).then(\n          (res: { [key: string]: Uint8Array }) => {\n            if (res && Object.keys(res).length > 0) {\n              downloadFile(res[file.fileHash!], file.fileName);\n            }\n          }\n        );\n  };\n  const downloadFile = (fileBytes: Uint8Array, fileName: string) => {\n    const blob = new Blob([fileBytes]); // change resultByte to bytes\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = fileName;\n    link.click();\n  };\n\n  /* \n    handles retry of sending error message\n  */\n  const onRetryHandler = (setLoading: any, message: P2PMessage) => {\n    setLoading(true);\n\n    if (message.p2pMessageEntryHash === \"error message\") {\n      if (message.payload.type === \"TEXT\") {\n        dispatch(\n          sendMessage(\n            conversant.id,\n            message.payload.payload.payload,\n            \"TEXT\",\n            message.replyToId\n          )\n        ).then((res: any) => {\n          setLoading(false);\n          if (!res) return null;\n          dispatch(removeErrMessage(message));\n        });\n      } else {\n        const file: FileContent = {\n          metadata: {\n            fileName: message.payload.fileName,\n            fileType: message.payload.fileType,\n            fileSize: message.payload.fileSize,\n          },\n          fileType: {\n            type: message.payload.fileType,\n            payload:\n              message.payload.fileType === \"OTHER\"\n                ? undefined\n                : { thumbnail: message.payload.thumbnail! },\n          },\n          fileBytes: message.payload.fileBytes!,\n        };\n        dispatch(\n          sendMessage(\n            conversant.id,\n            \"\",\n            \"FILE\",\n            replyTo !== \"\" ? replyTo : undefined,\n            file\n          )\n        ).then((res: any) => {\n          setLoading(false);\n          if (!res) return null;\n          dispatch(removeErrMessage(message));\n        });\n      }\n    } else {\n      dispatch(recommitMessage(message)).then((res: any) => setLoading(false));\n    }\n  };\n  /* \n    renders the appropriate chat bubble\n  */\n  const displayMessage = (messageBundle: {\n    message: P2PMessage;\n    receipt?: P2PMessageReceipt;\n  }) => {\n    // assume that this will be called with messages in sorted order\n    const key = messageBundle.message.p2pMessageEntryHash;\n    const author = messageBundle.message.author;\n    const payload = messageBundle.message.payload;\n    const replyToData = messageBundle.message.replyTo\n      ? {\n          payload: messageBundle.message.replyTo.payload,\n          author: messageBundle.message.replyTo.author,\n          id: messageBundle.message.replyTo.p2pMessageEntryHash,\n        }\n      : null;\n\n    const timestamp =\n      messageBundle.message.err === undefined && messageBundle.receipt\n        ? messageBundle.receipt!.timestamp\n        : messageBundle.message.timestamp;\n\n    const readlist = messageBundle.message.err\n      ? undefined\n      : messageBundle.receipt && messageBundle.receipt!.status === \"read\"\n      ? { key: timestamp }\n      : undefined;\n\n    if (\n      payload.type === \"FILE\" &&\n      (payload as FilePayload).fileType === \"VIDEO\" &&\n      fetchedFiles[payload.fileHash!] === undefined &&\n      messageBundle.message.err === undefined\n    ) {\n      dispatch(getFileBytes([payload.fileHash!]));\n    }\n\n    return conversant.id !== author.id ? (\n      <Me\n        id={messageBundle.message.p2pMessageEntryHash}\n        profile={messageBundle.message.author}\n        key={key}\n        type=\"p2p\"\n        timestamp={timestamp}\n        onRetry={(setLoading) =>\n          onRetryHandler(setLoading, messageBundle.message)\n        }\n        onDelete={() => dispatch(removeErrMessage(messageBundle.message))}\n        payload={payload}\n        readList={readlist ? readlist : {}}\n        showProfilePicture={true}\n        showName={true}\n        onDownload={(file) => onDownloadHandler(file)}\n        replyTo={replyToData ? replyToData : undefined}\n        onReply={(message) => {\n          if (messageInputRef.current) messageInputRef?.current?.reply(message);\n          setReplyTo(message.id);\n        }}\n        onPinMessage={() => {\n          dispatch(pinMessage([messageBundle.message]));\n        }}\n        isPinned={\n          pinned[messageBundle.message.p2pMessageEntryHash] ? true : false\n        }\n        err={messageBundle.message.err}\n      />\n    ) : (\n      <Others\n        id={messageBundle.message.p2pMessageEntryHash}\n        profile={messageBundle.message.author}\n        key={key}\n        type=\"p2p\"\n        timestamp={timestamp}\n        payload={payload}\n        readList={readlist ? readlist : {}}\n        showProfilePicture={true}\n        onPinMessage={() => dispatch(pinMessage([messageBundle.message]))}\n        showName={true}\n        // TODO: enable once conductor can handle many call_remotes\n        // or once we have a better implementation.\n        onSeen={(complete) => onSeenHandler(messageBundle)}\n        // onSeen={(complete) => {}}\n        onDownload={(file) => onDownloadHandler(file)}\n        replyTo={replyToData ? replyToData : undefined}\n        onReply={(message) => {\n          if (messageInputRef.current) messageInputRef?.current?.reply(message);\n          setReplyTo(message.id);\n        }}\n        isPinned={\n          pinned[messageBundle.message.p2pMessageEntryHash] ? true : false\n        }\n      />\n    );\n  };\n\n  /* RENDER */\n  return (\n    <IonPage>\n      <ChatHeader\n        id={id}\n        pathname={pathname}\n        conversant={conversant}\n        username={username}\n      />\n      <IonContent>\n        <ChatList\n          type=\"p2p\"\n          onScrollTop={(complete) => handleOnScrollTop(complete)}\n          // onScrollBottom={(complete) => {\n          //   setTimeout(() => {\n          //     complete();\n          //   }, 2000);\n          // }}\n          ref={scrollerRef}\n          disabled={disableGetPrevious}\n        >\n          {messagesWithConversant.map((messageBundle) =>\n            displayMessage(messageBundle)\n          )}\n        </ChatList>\n      </IonContent>\n\n      <Typing profiles={Object.values(typing)}></Typing>\n\n      <MessageInput\n        ref={messageInputRef}\n        onSend={handleOnSubmit}\n        onChange={(message: string) => handleOnChange(message, conversant)}\n        onFileSelect={(files) => setFiles(files)}\n      />\n    </IonPage>\n  );\n};\n\nexport default Chat;\n","import { Profile } from \"../../../profile/types\";\nimport { ThunkAction } from \"../../../types\";\nimport { P2PMessage, P2PMessageReceipt } from \"../../types\";\n\nexport const getP2PState =\n  (conversant: Profile): ThunkAction =>\n  async (dispatch, getState) => {\n    let state = { ...getState().p2pmessages };\n\n    let messagesWithConversant = state.conversations[conversant.id];\n    let errMsgs: P2PMessage[] = state.errMsgs[conversant.id]\n      ? state.errMsgs[conversant.id]\n      : [];\n\n    let filteredMessages: {\n      message: P2PMessage;\n      receipt?: P2PMessageReceipt;\n    }[] = messagesWithConversant\n      ? messagesWithConversant.messages.map((messageID) => {\n          let message = state.messages[messageID];\n          if (message.receipts.length > 0) {\n            let receiptIDs = message.receipts;\n            let filteredReceipts = receiptIDs.map((id) => {\n              let receipt = state.receipts[id];\n              return receipt;\n            });\n            filteredReceipts.sort((a: any, b: any) => {\n              let receiptTimestampA = a.timestamp.getTime();\n              let receiptTimestampB = b.timestamp.getTime();\n              if (receiptTimestampA > receiptTimestampB) return -1;\n              if (receiptTimestampA < receiptTimestampB) return 1;\n              return 0;\n            });\n            message.err = false;\n            let latestReceipt = filteredReceipts[0];\n            return { message: message, receipt: latestReceipt };\n          } else {\n            message.err = true;\n            return { message: message, receipt: undefined };\n          }\n        })\n      : [];\n    errMsgs.forEach((errMsg: P2PMessage) => {\n      const filteredMessage: {\n        message: P2PMessage;\n        receipt?: P2PMessageReceipt;\n      } = {\n        message: errMsg,\n      };\n      filteredMessages.push(filteredMessage);\n    });\n    filteredMessages.sort((x, y) => {\n      return x.message.timestamp.getTime() - y.message.timestamp.getTime();\n    });\n\n    return filteredMessages;\n  };\n","import { IonButton, IonButtons, IonIcon, IonToolbar } from \"@ionic/react\";\nimport { arrowBackSharp } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport AgentIdentifier from \"../../../../components/AgentIdentifier\";\nimport { Profile } from \"../../../../redux/profile/types\";\nimport styles from \"../style.module.css\";\n\ninterface Props {\n  profile: Profile;\n}\n\n/*\n\tdisplays the header and name of conversant in ChatDetails\n*/\nconst ContactHeader: React.FC<Props> = ({ profile }) => {\n  const history = useHistory();\n  return (\n    <div>\n      <IonToolbar className={styles.controls}>\n        <span>\n          <IonButtons slot=\"start\">\n            <IonButton\n              onClick={() => history.push({ pathname: `/u/${profile.id}` })}\n              className=\"ion-no-padding\"\n            >\n              <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n            </IonButton>\n          </IonButtons>\n        </span>\n      </IonToolbar>\n\n      <div className={styles.titlebar}>\n        <p className={styles.title}>\n          <AgentIdentifier\n            displayId={false}\n            nickname={profile.username}\n            id={profile.id}\n          />\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactHeader;\n","import {\n\tIonLabel,\n\tIonToolbar,\n\tIonSegment,\n\tIonSegmentButton,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\n\ninterface Props {\n\tonSegmentChange(index: any): any\n\tvalue: string\n}\n\n/*\n\tdisplays the tab segments in ChatDetails\n\twhich controls the displayed slides\n*/\nconst SegmentTabs: React.FC<Props> = ({ onSegmentChange, value }) => {\n\tlet intl = useIntl();\n\n\treturn (\t\t\t\t\n\t\t<IonToolbar>\n\t\t\t<IonSegment value={value} onIonChange={(e) => onSegmentChange(e.detail.value)}>\n\t\t\t\t<IonSegmentButton value=\"Info\">\n\t\t\t\t\t<IonLabel>{intl.formatMessage({id: \"app.chat.chat-details.info\"})}</IonLabel>\n\t\t\t\t</IonSegmentButton>\n\t\t\t\t\n\t\t\t\t<IonSegmentButton value=\"Media\">\n\t\t\t\t\t<IonLabel>{intl.formatMessage({id: \"app.chat.chat-details.media\"})}</IonLabel>\n\t\t\t\t</IonSegmentButton>\n\t\t\t\t\n\t\t\t\t<IonSegmentButton value=\"Files\">\n\t\t\t\t\t<IonLabel>{intl.formatMessage({id: \"app.chat.chat-details.files\"})}</IonLabel>\n\t\t\t\t</IonSegmentButton>\n\t\t\t</IonSegment>\n\t\t</IonToolbar>\n\t);\n}; \n\nexport default SegmentTabs;","import {\n  IonCard,\n  IonCol,\n  IonGrid,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonRow,\n  IonSlide,\n} from \"@ionic/react\";\nimport React, { useRef } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport ImageView from \"../../../components/Chat/File/ImageView/index\";\nimport { FilePayload, isP2PMessage } from \"../../../redux/commons/types\";\nimport { fetchFilesBytes } from \"../../../redux/group/actions\";\nimport { GroupMessage } from \"../../../redux/group/types\";\nimport { getFileBytes } from \"../../../redux/p2pmessages/actions/getFileBytes\";\nimport { P2PMessage } from \"../../../redux/p2pmessages/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { monthToString, useAppDispatch } from \"../../../utils/helpers\";\nimport VideoPlayer from \"../../VideoPlayer\";\nimport styles from \"../style.module.css\";\n\ninterface Props {\n  orderedMediaMessages: P2PMessage[] | GroupMessage[];\n  onDownload(file: FilePayload): any;\n  onScrollBottom(\n    complete: () => Promise<void>,\n    earliestMedia: P2PMessage | GroupMessage\n  ): any;\n}\n\n/*\n\tdisplays the grid of files\n\tor the conversant's details (TODO)\n*/\nconst FileBox: React.FC<Props> = ({\n  orderedMediaMessages,\n  onDownload,\n  onScrollBottom,\n}) => {\n  const dispatch = useAppDispatch();\n  /* Selectors */\n  /* \n    We are retrieving the store that contains \n    the file bytes of all files both for p2p and group\n  */\n  const filesBytes = useSelector((state: RootState) => {\n    let fileSet = Object.assign(\n      {},\n      state.groups.groupFiles,\n      state.p2pmessages.files\n    );\n    return fileSet;\n    // return state.groups.groupFiles[`u${file.fileHash}`];\n  });\n\n  /* i18n */\n  const intl = useIntl();\n\n  /* REFS */\n  const infiniteFileScroll = useRef<HTMLIonInfiniteScrollElement>(null);\n  const complete: () => any = () => infiniteFileScroll.current?.complete();\n\n  // helper code for displaying date\n  const decoder = new TextDecoder();\n  let currentMonth = -1;\n\n  /* RENDERER */\n  const renderMonth = (month: number) =>\n    month !== currentMonth\n      ? ((currentMonth = month),\n        (\n          <IonCol size=\"12\">\n            <h2 className={styles.month}>{monthToString(month, intl)}</h2>\n          </IonCol>\n        ))\n      : null;\n\n  const renderPayload = (message: P2PMessage | GroupMessage) =>\n    (message.payload as FilePayload).fileType === \"VIDEO\" ? (\n      <div className={styles.mediadiv}>\n        <VideoPlayer\n          download={() => onDownload(message.payload as FilePayload)}\n          src={URL.createObjectURL(\n            new Blob([filesBytes[(message.payload as FilePayload).fileHash!]], {\n              type: \"video/mp4\",\n            })\n          )}\n          className={styles.video}\n          thumbnail={URL.createObjectURL(\n            new Blob(\n              [(message.payload as FilePayload).thumbnail as Uint8Array],\n              { type: \"image/jpeg\" }\n            )\n          )}\n          /* TODO: We should expose onPlayPauseErrorHandler as prop instead of directly handling it here. */\n          onPlayPauseErrorHandler={(setErrorState: any) => {\n            if (isP2PMessage(message)) {\n              dispatch(\n                getFileBytes([(message.payload as FilePayload).fileHash!])\n              ).then((res: any) => {\n                if (res) {\n                  setErrorState(false);\n                }\n              });\n            } else {\n              dispatch(\n                fetchFilesBytes([(message.payload as FilePayload).fileHash!])\n              ).then((res: any) => {\n                if (res) {\n                  setErrorState(false);\n                }\n              });\n            }\n          }}\n        />\n      </div>\n    ) : (\n      <div className={styles.mediadiv}>\n        <ImageView\n          file={message.payload as FilePayload}\n          src={decoder.decode((message.payload as FilePayload).thumbnail!)}\n          onDownload={onDownload}\n        />\n      </div>\n    );\n\n  const renderMediaMessages = () =>\n    /* \n\t\t\tthe orderedFileMessages is declared as any[] here as a union of array is uncallable.\n\t\t\tsee https://github.com/microsoft/TypeScript/issues/36390 for more info\n    */\n    (orderedMediaMessages as any[]).map(\n      (message: P2PMessage | GroupMessage, i) => {\n        let month = message.timestamp.getMonth();\n        // let year = file.timestamp.getFullYear();\n        return (\n          <React.Fragment key={i}>\n            {renderMonth(month)}\n            <IonCol size=\"3\">\n              <IonCard className={styles.mediacard}>\n                {renderPayload(message)}\n              </IonCard>\n            </IonCol>\n          </React.Fragment>\n        );\n      }\n    );\n\n  /* RENDER */\n  return (\n    <IonSlide>\n      <IonGrid>\n        <IonRow className={styles.mediarow}>{renderMediaMessages()}</IonRow>\n\n        <IonRow>\n          <IonInfiniteScroll\n            ref={infiniteFileScroll}\n            position=\"bottom\"\n            onIonInfinite={\n              (e) =>\n                onScrollBottom(\n                  complete,\n                  orderedMediaMessages[orderedMediaMessages.length - 1]\n                ) // maybe return just the earliest\n            }\n          >\n            <IonInfiniteScrollContent></IonInfiniteScrollContent>\n          </IonInfiniteScroll>\n        </IonRow>\n      </IonGrid>\n    </IonSlide>\n  );\n};\n\nexport default FileBox;\n","import {\n  IonCard,\n  IonCol,\n  IonGrid,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonRow,\n  IonSlide,\n} from \"@ionic/react\";\nimport React, { useRef } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { FilePayload } from \"../../../redux/commons/types\";\nimport { GroupMessage } from \"../../../redux/group/types\";\nimport { P2PMessage } from \"../../../redux/p2pmessages/types\";\nimport { monthToString } from \"../../../utils/helpers\";\nimport FileView from \"../../Chat/File/FileView\";\nimport styles from \"../style.module.css\";\n\ninterface Props {\n  orderedFileMessages: P2PMessage[] | GroupMessage[];\n  onDownload(file: FilePayload): any;\n  onScrollBottom(\n    complete: () => Promise<void>,\n    earliestFile: P2PMessage | GroupMessage\n  ): any;\n}\n\n/* displays the grid of files */\nconst FileBox: React.FC<Props> = ({\n  orderedFileMessages,\n  onDownload,\n  onScrollBottom,\n}) => {\n  /* i18n */\n  const intl = useIntl();\n\n  /* REFS */\n  const infiniteFileScroll = useRef<HTMLIonInfiniteScrollElement>(null);\n  const complete: () => any = () => infiniteFileScroll.current?.complete();\n\n  // determines the size of the grid columns\n  // whole page width for others (looks like list)\n\n  // helper code for displaying date\n  let currentMonth = -1;\n\n  /* RENDERER */\n  const renderMonth = (month: number) =>\n    month !== currentMonth\n      ? ((currentMonth = month),\n        (\n          <IonCol size=\"12\">\n            <h2 className={styles.month}>{monthToString(month, intl)}</h2>\n          </IonCol>\n        ))\n      : null;\n\n  const renderFileMessages = () => {\n    /* \n\t\t\tthe orderedFileMessages is declared as any[] here as a union of array is uncallable.\n\t\t\tsee https://github.com/microsoft/TypeScript/issues/36390 for more info\n\t\t*/\n    return (orderedFileMessages as any[]).map(\n      (message: P2PMessage | GroupMessage) => {\n        let month = message.timestamp.getMonth();\n        // let year = file.timestamp.getFullYear();\n        return (\n          <React.Fragment>\n            {renderMonth(month)}\n            <IonCol size=\"12\">\n              <IonCard className={styles.mediacard}>\n                <FileView\n                  file={message.payload as FilePayload}\n                  onDownload={onDownload}\n                  darken={true}\n                />\n              </IonCard>\n            </IonCol>\n          </React.Fragment>\n        );\n      }\n    );\n  };\n\n  /* RENDER */\n  return (\n    <IonSlide>\n      <IonGrid>\n        <IonRow className={styles.mediarow}>{renderFileMessages()}</IonRow>\n\n        <IonRow>\n          <IonInfiniteScroll\n            ref={infiniteFileScroll}\n            position=\"bottom\"\n            onIonInfinite={(e) =>\n              onScrollBottom(\n                complete,\n                orderedFileMessages[orderedFileMessages.length - 1]\n              )\n            }\n          >\n            <IonInfiniteScrollContent></IonInfiniteScrollContent>\n          </IonInfiniteScroll>\n        </IonRow>\n      </IonGrid>\n    </IonSlide>\n  );\n};\n\nexport default FileBox;\n","import { IonItem, IonItemGroup, IonText } from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport Identicon from \"../Identicon\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  nickname: string;\n  id: string;\n}\n\nconst ProfileInfo: React.FC<Props> = ({ nickname, id }) => {\n  const intl = useIntl();\n  const trimmedId = id.slice(5);\n\n  return (\n    <>\n      <IonItemGroup className={styles[\"container\"]}>\n        <IonItem lines=\"none\">\n          <h3>\n            {intl.formatMessage({ id: \"components.profile-info.nickname\" })}\n          </h3>\n        </IonItem>\n\n        <IonItem lines=\"none\">\n          <IonText>{nickname}</IonText>\n        </IonItem>\n\n        <IonItem lines=\"none\">\n          <h3>{intl.formatMessage({ id: \"components.profile-info.id\" })}</h3>\n        </IonItem>\n\n        <IonItem lines=\"none\">\n          <IonText>{trimmedId}</IonText>\n        </IonItem>\n\n        <IonItem lines=\"none\">\n          <h3>\n            {intl.formatMessage({ id: \"components.profile-info.identicon\" })}\n          </h3>\n        </IonItem>\n        <IonItem className={styles[\"avatar\"]} lines=\"none\">\n          <Identicon hash={id} size={40} />\n        </IonItem>\n      </IonItemGroup>\n    </>\n  );\n};\n\nexport default ProfileInfo;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  IonPage,\n  IonHeader,\n  IonSlide,\n  IonSlides,\n  IonContent,\n} from \"@ionic/react\";\nimport { useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { RootState } from \"../../../redux/types\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { FilePayload } from \"../../../redux/commons/types\";\nimport { P2PHashMap, P2PMessage } from \"../../../redux/p2pmessages/types\";\nimport { getPreviousMessages } from \"../../../redux/p2pmessages/actions/getPreviousMessages\";\nimport { getFileBytes } from \"../../../redux/p2pmessages/actions/getFileBytes\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n// import { useIntl } from \"react-intl\";\n\nimport ContactHeader from \"./ContactHeader\";\nimport SegmentTabs from \"./SegmentTabs\";\n\nimport MediaBox from \"../../../components/Slides/MediaBox\";\nimport FileBox from \"../../../components/Slides/FileBox\";\nimport ProfileInfo from \"../../../components/ProfileInfo\";\n\ninterface Props {\n  location: RouteComponentProps<{}, {}, { conversant: Profile }>;\n}\n\nconst ChatDetails: React.FC<Props> = ({ location }) => {\n  /* STATES */\n  const { state }: any = { ...location };\n  // const intl = useIntl();\n  const { conversations, messages } = useSelector(\n    (state: RootState) => state.p2pmessages\n  );\n  const fetchedFiles = useSelector(\n    (state: RootState) => state.p2pmessages.files\n  );\n\n  const [disableGetPrevious, setDisableGetPrevious] = useState<boolean>(false);\n  const [orderedMedia] = useState<P2PMessage[]>([]);\n  const [orderedFiles] = useState<P2PMessage[]>([]);\n  const [fileMessageHashes] = useState<{ [key: string]: boolean }>({});\n  const [currentSegment, setCurrentSegment] = useState<string>(\"Info\");\n  const dispatch = useAppDispatch();\n\n  /* REFS */\n  const slideRef = useRef<HTMLIonSlidesElement>(null);\n\n  /* USE EFFECTS */\n  /*\n    fetches files from hc\n    when the page is initially opened\n  */\n  useEffect(() => {\n    dispatch(\n      getPreviousMessages(\n        state.conversant.id,\n        40,\n        \"Other\",\n        undefined,\n        undefined\n      )\n    );\n    dispatch(\n      getPreviousMessages(\n        state.conversant.id,\n        40,\n        \"Media\",\n        undefined,\n        undefined\n      )\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /* \n    sorts files according to type\n    when the redux state for files changes\n  */\n  useEffect(() => {\n    if (\n      state.conversant !== undefined &&\n      conversations[state.conversant.id] !== undefined\n    ) {\n      conversations[state.conversant.id].messages.forEach((messageID) => {\n        let message = messages[messageID];\n        if (message.payload.type === \"FILE\") {\n          let type = message.payload.fileType;\n\n          if (!fileMessageHashes[messageID]) {\n            switch (type) {\n              case \"IMAGE\":\n                orderedMedia.push(message);\n                fileMessageHashes[messageID] = true;\n                break;\n              case \"VIDEO\":\n                orderedMedia.push(message);\n                fileMessageHashes[messageID] = true;\n                break;\n              case \"OTHER\":\n                orderedFiles.push(message);\n                fileMessageHashes[messageID] = true;\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversations, messages]);\n\n  /* HANDLERS */\n  /*\n    changes which slide is displayed\n    when clicking on a segment\n  */\n  const handleSegmentChange = (value: any) => {\n    let array = [\"Info\", \"Media\", \"Files\"];\n    slideRef.current?.slideTo(array.indexOf(value));\n  };\n\n  /*\n    changes which segment is highlighted\n    when the slide is changed\n  */\n  const handleSlideChange = () => {\n    const segmentValues = [\"Info\", \"Media\", \"Files\"];\n    slideRef.current\n      ?.getActiveIndex()\n      .then((currentIndex) => setCurrentSegment(segmentValues[currentIndex]));\n  };\n\n  /* \n    downloads a file when already in redux state\n    if not, dispatches an action to get the file from hc\n    when clicking the file download button\n  */\n  const handleDownload = (file: FilePayload) => {\n    fetchedFiles[file.fileHash!] !== undefined\n      ? downloadFile(fetchedFiles[file.fileHash!], file.fileName)\n      : dispatch(getFileBytes([file.fileHash!])).then(\n          (res: { [key: string]: Uint8Array }) => {\n            if (res && Object.keys(res).length > 0) {\n              downloadFile(res[file.fileHash!], file.fileName);\n            }\n          }\n        );\n  };\n  const downloadFile = (fileBytes: Uint8Array, fileName: string) => {\n    const blob = new Blob([fileBytes]); // change resultByte to bytes\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = fileName;\n    link.click();\n  };\n\n  const handleScrollToBottom = (\n    complete: () => Promise<void>,\n    earliestMediaOrFile: any\n  ) => {\n    if (!disableGetPrevious) {\n      let earliest: P2PMessage = earliestMediaOrFile;\n\n      if (earliest !== undefined) {\n        dispatch(\n          getPreviousMessages(\n            state.conversant.id,\n            10,\n            (earliest.payload as FilePayload).fileType === \"IMAGE\" ||\n              (earliest.payload as FilePayload).fileType === \"VIDEO\"\n              ? \"Media\"\n              : \"Other\",\n            earliest !== undefined ? earliest.timestamp : undefined,\n            earliest !== undefined ? earliest.p2pMessageEntryHash : undefined\n          )\n        ).then((res: P2PHashMap) => {\n          if (Object.values(res)[0][state.conversant.id].length <= 0) {\n            setDisableGetPrevious(true);\n          }\n          complete();\n        });\n      }\n    }\n    complete();\n    return;\n  };\n\n  // slider options\n  const slideOpts = {\n    initialSlide: 0,\n    speed: 400,\n  };\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <ContactHeader profile={state.conversant} />\n        <SegmentTabs\n          value={currentSegment}\n          onSegmentChange={handleSegmentChange}\n        />\n      </IonHeader>\n\n      <IonContent>\n        <IonSlides\n          ref={slideRef}\n          className=\"slides\"\n          pager={false}\n          options={slideOpts}\n          onIonSlideDidChange={handleSlideChange}\n        >\n          {/* Contact Info */}\n          {/* TODO: change to empty component for now */}\n          <IonSlide>\n            <ProfileInfo\n              nickname={state.conversant.username}\n              id={state.conversant.id}\n            />\n          </IonSlide>\n\n          {/* Media */}\n          <MediaBox\n            orderedMediaMessages={orderedMedia}\n            onDownload={(file: FilePayload) => handleDownload(file)}\n            onScrollBottom={(complete, earliestMedia) =>\n              handleScrollToBottom(complete, earliestMedia)\n            }\n          />\n\n          {/* Files */}\n          <FileBox\n            orderedFileMessages={orderedFiles}\n            onDownload={(file) => handleDownload(file)}\n            onScrollBottom={(complete, earliestFile) =>\n              handleScrollToBottom(complete, earliestFile)\n            }\n          />\n        </IonSlides>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ChatDetails;\n","import { IonDatetime } from \"@ionic/react\";\nimport React, {\n  forwardRef,\n  ForwardRefRenderFunction,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { dateToString, stringToDate } from \"../../utils/helpers\";\n\ninterface Props {\n  // shows/hides date time item\n  isVisible?: boolean;\n  // callback handler when selecting a date\n  onChange?(date: Date): any;\n}\n\nexport interface DatePickerMethods {\n  // opens the date time selector modal\n  open(): any;\n}\n\nconst DatePicker: ForwardRefRenderFunction<DatePickerMethods, Props> = (\n  { isVisible = true, onChange },\n  ref\n) => {\n  const [date, setDate] = useState<Date>(\n    new Date(new Date().setDate(new Date().getDate() + 1))\n  );\n\n  const dateRef = useRef<HTMLIonDatetimeElement>(null);\n\n  useImperativeHandle(ref, () => ({\n    open: () => {\n      dateRef?.current?.open();\n    },\n  }));\n\n  return (\n    <IonDatetime\n      ref={dateRef}\n      value={dateToString(date)}\n      style={{ display: isVisible ? \"block\" : \"none\" }}\n      max={dateToString(new Date(new Date().setDate(new Date().getDate())))}\n      onIonChange={(event) => {\n        if (event.detail.value) {\n          const newDate = stringToDate(event.detail.value);\n\n          setDate(newDate);\n          if (onChange) onChange(newDate);\n        }\n      }}\n    />\n  );\n};\n\nexport default forwardRef(DatePicker);\n","import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonPage,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBackOutline, arrowBackSharp, calendar } from \"ionicons/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { Payload, ReplyTo } from \"../../redux/commons/types\";\nimport { Profile } from \"../../redux/profile/types\";\nimport { RootState } from \"../../redux/types\";\nimport { ChatList, Me, Others } from \"../Chat\";\nimport DatePicker, { DatePickerMethods } from \"../DatePicker\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  prevHref: string;\n  onDateSelect?(date: Date): any;\n  type: \"group\" | \"p2p\";\n  messages?: any[];\n}\n\nconst Search: React.FC<Props> = ({\n  type,\n  prevHref,\n  onDateSelect,\n  messages,\n}) => {\n  const datePicker = useRef<DatePickerMethods>(null);\n  const [msgs, setMsgs] = useState<\n    | {\n        id: string;\n        author: Profile;\n        payload: Payload;\n        timestamp: Date;\n        readList: any;\n        replyTo?: ReplyTo;\n      }[]\n    | null\n  >(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (messages) {\n      setMsgs(messages);\n    }\n  }, [messages]);\n\n  const profile = useSelector((state: RootState) => state.profile);\n\n  const handleSearchByDate = () => {\n    datePicker.current?.open();\n  };\n\n  const handleOnDownload = () => {};\n\n  return (\n    <IonPage>\n      {!msgs ? (\n        <>\n          <IonHeader>\n            <IonToolbar>\n              <IonButtons>\n                <IonButton\n                  onClick={() => history.push({ pathname: prevHref })}\n                  className=\"ion-no-padding\"\n                >\n                  <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n                </IonButton>\n              </IonButtons>\n            </IonToolbar>\n          </IonHeader>\n          <IonContent>\n            <IonList className={styles.search}>\n              <IonItem lines=\"full\" button onClick={handleSearchByDate}>\n                <IonIcon slot=\"start\" icon={calendar}></IonIcon>\n                <IonLabel>Search by date</IonLabel>\n              </IonItem>\n\n              <DatePicker\n                ref={datePicker}\n                isVisible={false}\n                onChange={(date) => {\n                  if (onDateSelect) onDateSelect(date);\n                }}\n              />\n            </IonList>\n          </IonContent>\n        </>\n      ) : (\n        <>\n          <IonHeader>\n            <IonToolbar>\n              <IonButtons>\n                <IonButton onClick={() => setMsgs(null)}>\n                  <IonIcon icon={arrowBackOutline}></IonIcon>\n                </IonButton>\n              </IonButtons>\n            </IonToolbar>\n          </IonHeader>\n          <IonContent>\n            {msgs ? (\n              <ChatList type={type}>\n                {msgs!.map((msg, i) => {\n                  if (msg.author.id === profile.id)\n                    return (\n                      <Me\n                        id={msg.id}\n                        onDownload={handleOnDownload}\n                        key={i}\n                        profile={msg.author}\n                        timestamp={msg.timestamp}\n                        payload={msg.payload}\n                        readList={msg.readList}\n                        replyTo={msg.replyTo}\n                        type=\"group\"\n                        isPinned={false}\n                        showName={true}\n                        showProfilePicture={true}\n                      />\n                    );\n                  return (\n                    <Others\n                      id={msg.id}\n                      onDownload={handleOnDownload}\n                      key={i}\n                      profile={msg.author}\n                      timestamp={msg.timestamp}\n                      isPinned={false}\n                      payload={msg.payload}\n                      readList={msg.readList}\n                      replyTo={msg.replyTo}\n                      type=\"group\"\n                      showName={true}\n                      showProfilePicture={true}\n                    />\n                  );\n                })}\n              </ChatList>\n            ) : (\n              <IonList className={styles.search}>\n                <IonItem lines=\"full\" button onClick={handleSearchByDate}>\n                  <IonIcon slot=\"start\" icon={calendar}></IonIcon>\n                  <IonLabel>Search by date</IonLabel>\n                </IonItem>\n\n                <DatePicker\n                  ref={datePicker}\n                  isVisible={false}\n                  onChange={onDateSelect}\n                />\n              </IonList>\n            )}\n          </IonContent>\n        </>\n      )}\n    </IonPage>\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Search from \"../../../components/Search\";\nimport { Payload } from \"../../../redux/commons/types\";\n\nimport { getMessagesByAgentByTimestamp } from \"../../../redux/p2pmessages/actions/getMessagesByAgentByTimestamp\";\nimport {\n  P2PMessage,\n  P2PMessageConversationState,\n} from \"../../../redux/p2pmessages/types\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\nconst ChatSearch: React.FC = () => {\n  const [messages, setMessages] = useState<\n    {\n      id: string;\n      author: Profile;\n      payload: Payload;\n      timestamp: Date;\n      readList: any;\n    }[]\n  >();\n\n  const { id } = useParams<{ id: string }>();\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Search\n      type=\"p2p\"\n      messages={messages}\n      onDateSelect={(date) => {\n        dispatch(getMessagesByAgentByTimestamp(id, date, \"All\")).then(\n          (searchResults: P2PMessageConversationState) => {\n            const msgs = Object.values(searchResults.messages).map(\n              (message: P2PMessage) => {\n                let receiptIDs = message.receipts;\n                let filteredReceipts = receiptIDs.map((id) => {\n                  let receipt = searchResults.receipts[id];\n                  return receipt;\n                });\n                filteredReceipts.sort((a: any, b: any) => {\n                  let receiptTimestampA = a.timestamp.getTime();\n                  let receiptTimestampB = b.timestamp.getTime();\n                  if (receiptTimestampA > receiptTimestampB) return -1;\n                  if (receiptTimestampA < receiptTimestampB) return 1;\n                  return 0;\n                });\n                let latestReceipt = filteredReceipts[0];\n\n                let readlist =\n                  latestReceipt.status === \"read\"\n                    ? { key: latestReceipt.timestamp }\n                    : {};\n\n                return {\n                  id: message.p2pMessageEntryHash,\n                  author: message.author,\n                  payload: message.payload,\n                  timestamp: message.timestamp,\n                  readList: readlist,\n                };\n              }\n            );\n            setMessages(msgs.reverse());\n          }\n        );\n      }}\n      prevHref={`/u/${id}`}\n    ></Search>\n  );\n};\n\nexport default ChatSearch;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { ThunkAction } from \"../../types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../../redux/error/actions\";\nimport { dateToTimestamp } from \"../../../utils/helpers\";\nimport { transformZomeDataToUIData } from \"./helpers/transformZomeDateToUIData\";\n\nexport const getMessagesByAgentByTimestamp =\n  (id: string, date: Date, payload_type: String): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    let zome_input = {\n      conversant: deserializeHash(id),\n      date: dateToTimestamp(date),\n      payload_type: payload_type,\n    };\n\n    try {\n      const messagesByDate = await callZome({\n        zomeName: ZOMES.P2PMESSAGE,\n        fnName: FUNCTIONS[ZOMES.P2PMESSAGE].GET_MESSAGES_BY_AGENT_BY_TIMESTAMP,\n        payload: zome_input,\n      });\n\n      if (messagesByDate?.type !== \"error\") {\n        const contactsState = { ...getState().contacts.contacts };\n        const profile = { ...getState().profile };\n        const profileList = {\n          ...contactsState,\n          [profile.id!]: {\n            id: profile.id!,\n            username: profile.username!,\n            fields: profile.fields,\n          },\n        };\n        let transformed = transformZomeDataToUIData(\n          messagesByDate,\n          profileList\n        );\n        return transformed;\n      }\n    } catch (e) {\n      dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n","import {\n  IonIcon,\n  IonImg,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonNote,\n  IonText,\n} from \"@ionic/react\";\nimport { documentOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FilePayload, Payload, TextPayload } from \"../../redux/commons/types\";\nimport { fetchFilesBytes } from \"../../redux/group/actions\";\nimport { getFileBytes } from \"../../redux/p2pmessages/actions/getFileBytes\";\nimport { RootState } from \"../../redux/types\";\nimport {\n  convertSizeToReadableSize,\n  isTextPayload,\n  useAppDispatch,\n} from \"../../utils/helpers\";\nimport VideoPlayer from \"../VideoPlayer\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  messages: { id: string; payload: Payload; author: string; date: Date }[];\n  onMessageClick?(message: {\n    id: string;\n    payload: Payload;\n    author: string;\n    date: Date;\n  }): any;\n  type?: \"p2p\" | \"group\";\n}\n\nconst PinnedMessages: React.FC<Props> = ({\n  messages,\n  onMessageClick,\n  type = \"group\",\n}) => {\n  const decoder = new TextDecoder();\n  const dispatch = useAppDispatch();\n  const fileBytes = useSelector((state: RootState) => {\n    return Object.assign({}, state.groups.groupFiles, state.p2pmessages.files);\n  });\n\n  const displayFile = (payload: FilePayload) => {\n    switch (payload.fileType) {\n      case \"OTHER\":\n        return (\n          <div className={`${styles[\"other\"]} ion-padding`}>\n            <IonIcon className=\"ion-margin-end\" icon={documentOutline} />\n            <div className={styles[\"file-details\"]}>\n              <IonText className={styles[\"file-name\"]}>\n                {payload.fileName}\n              </IonText>\n\n              <IonText className={styles[\"file-size\"]}>\n                {convertSizeToReadableSize(payload.fileSize)}\n              </IonText>\n            </div>\n          </div>\n        );\n      case \"IMAGE\":\n        return (\n          <IonImg\n            className={`${styles.thumbnail} ion-margin-end`}\n            src={decoder.decode(payload?.thumbnail)}\n          />\n        );\n\n      case \"VIDEO\": {\n        const blobFileBytes = fileBytes[payload.fileHash!];\n        return (\n          <VideoPlayer\n            className={styles.video}\n            thumbnail={URL.createObjectURL(\n              new Blob([payload.thumbnail as Uint8Array], {\n                type: \"image/jpeg\",\n              })\n            )}\n            onPlayPauseErrorHandler={(setErrorState: any) => {\n              if (type === \"p2p\")\n                dispatch(getFileBytes([payload.fileHash!])).then((res: any) => {\n                  if (res) {\n                    setErrorState(false);\n                  }\n                });\n              else\n                dispatch(fetchFilesBytes([payload.fileHash!])).then(\n                  (res: any) => {\n                    if (res) {\n                      setErrorState(false);\n                    }\n                  }\n                );\n            }}\n            src={URL.createObjectURL(\n              new Blob([blobFileBytes], {\n                type: \"video/mp4\",\n              })\n            )}\n            download={() => {\n              if (blobFileBytes) {\n                const blob = new Blob([blobFileBytes]); // change resultByte to bytes\n                const link = document.createElement(\"a\");\n                link.href = window.URL.createObjectURL(blob);\n                link.download = payload.fileName;\n                link.click();\n              }\n            }}\n          />\n        );\n      }\n    }\n  };\n\n  return (\n    <IonList>\n      {messages\n        .sort((a, b) => (a.date > b.date ? -1 : 1))\n        .map((message, i) => {\n          const isText = isTextPayload(message.payload);\n          return (\n            <IonItem\n              key={i}\n              button\n              onClick={() => {\n                if (onMessageClick) onMessageClick(message);\n              }}\n            >\n              <div className={styles[\"content-container\"]}>\n                <div className={styles.header}>\n                  <IonLabel className={styles.author}>\n                    {message.author}\n                  </IonLabel>\n                  <IonNote className={`${styles.date} ion-padding-start`}>\n                    {message.date.toDateString()}\n                  </IonNote>\n                </div>\n                {isText ? (\n                  <IonText>\n                    {(message.payload as TextPayload).payload.payload}\n                  </IonText>\n                ) : (\n                  displayFile(message.payload as FilePayload)\n                )}\n              </div>\n            </IonItem>\n          );\n        })}\n    </IonList>\n  );\n};\n\nexport default PinnedMessages;\n","import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBackSharp } from \"ionicons/icons\";\nimport React, { useEffect } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport PinnedMessages from \"../../../components/PinnedMessages\";\nimport { getPinnedMessages } from \"../../../redux/p2pmessages/actions/getPinnedMessages\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\nconst ChatPinnedMessage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const intl = useIntl();\n  const history = useHistory();\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getPinnedMessages(id));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const messages: any[] = useSelector((state: RootState) => {\n    const conversation = state.p2pmessages.conversations[id];\n    if (conversation) {\n      if (\n        conversation.pinned &&\n        !(\n          conversation.pinned.filter((id) => !state.p2pmessages.pinned).length >\n          0\n        )\n      ) {\n        return conversation.pinned.map((id) => {\n          const pinnedMessage = state.p2pmessages.pinned[id];\n\n          return {\n            id: pinnedMessage.p2pMessageEntryHash,\n            payload: pinnedMessage.payload,\n            author: pinnedMessage.author.username,\n            date: pinnedMessage.timestamp,\n          };\n        });\n      } else {\n        dispatch(getPinnedMessages(id));\n      }\n    }\n    return [];\n  });\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons>\n            <IonButton\n              onClick={() => history.push({ pathname: `/u/${id}` })}\n              className=\"ion-no-padding\"\n            >\n              <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n            </IonButton>\n            <IonTitle>\n              {intl.formatMessage({\n                id: \"app.chat.pinned-message-title\",\n              })}\n            </IonTitle>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <PinnedMessages\n          onMessageClick={(message) => {}}\n          messages={Object.values(messages)}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ChatPinnedMessage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport ChatContent from \"./ChatContent\";\nimport ChatDetails from \"./ChatDetails\";\nimport ChatSearch from \"./ChatSearch\";\nimport ChatPinnedMessages from \"./ChatPinnedMessages\";\n\nconst Chat: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/u/:id\" exact>\n        <ChatContent />\n      </Route>\n      <Route path=\"/u/:id/details\" exact component={ChatDetails} />\n      <Route path=\"/u/:id/search\" exact component={ChatSearch} />\n      <Route path=\"/u/:id/pinned\" exact component={ChatPinnedMessages} />\n    </Switch>\n  );\n};\n\nexport default Chat;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { timestampToDate } from \"../../../utils/helpers\";\nimport { Payload } from \"../../commons/types\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport { GroupMessage, SetPinnedMessages, SET_PINNED_MESSAGES } from \"../types\";\nimport getLatestGroupVersion from \"./getLatestGroupVersion\";\nimport { fetchUsernameOfMembers } from \"./helpers\";\n\nexport const fetchPinnedMessages =\n  (groupId: string): ThunkAction =>\n  async (dispatch, getState, { callZome, getAgentId }) => {\n    try {\n      const res: any = await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].FETCH_PINNED_MESSAGES,\n        payload: groupId,\n      });\n\n      const groupConversation = getState().groups.conversations[groupId];\n      if (!groupConversation) {\n        dispatch(getLatestGroupVersion(groupId));\n      } else {\n        const rawResultArr = Object.values(res as Object);\n        const pinnedMessages: { [key: string]: GroupMessage } = {};\n        const myAgentId = await getAgentId();\n        const pinnedMessageIds = rawResultArr.map(async (raw) => {\n          const rawResult = raw.entry;\n\n          const id = serializeHash(rawResult.messageId);\n          const author = Object.values(\n            await fetchUsernameOfMembers(\n              getState(),\n              [serializeHash(rawResult.sender)],\n              callZome,\n              serializeHash(myAgentId!)\n            )\n          )[0].username;\n\n          const payload: Payload =\n            rawResult.payload.type === \"TEXT\"\n              ? rawResult.payload\n              : {\n                  type: \"FILE\",\n                  fileType: rawResult.payload.payload.fileType.type,\n                  fileHash: serializeHash(\n                    rawResult.payload.payload.metadata.fileHash\n                  ),\n                  fileName: rawResult.payload.payload.metadata.fileName,\n                  fileSize: rawResult.payload.payload.metadata.fileSize,\n                  thumbnail:\n                    rawResult.payload.payload.fileType.payload?.thumbnail,\n                };\n\n          const groupMessage: GroupMessage = {\n            groupId,\n            groupMessageId: id,\n            author,\n            payload,\n            timestamp: timestampToDate(rawResult.created),\n            readList: {},\n          };\n\n          pinnedMessages[id] = groupMessage;\n\n          return id;\n        });\n\n        await Promise.all(pinnedMessageIds).then(\n          (res) => (groupConversation.pinnedMessages = res)\n        );\n\n        dispatch<SetPinnedMessages>({\n          type: SET_PINNED_MESSAGES,\n          pinnedMessages: {\n            ...getState().groups.pinnedMessages,\n            ...pinnedMessages,\n          },\n          conversations: {\n            ...getState().groups.conversations,\n            [groupId]: groupConversation,\n          },\n        });\n      }\n    } catch (e) {\n      return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n","import { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport { SetPinnedMessages, SET_PINNED_MESSAGES } from \"../types\";\n\nexport const pinMessage =\n  (groupId: string, groupMessageId: string): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    try {\n      await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].PIN_MESSAGE,\n        payload: {\n          groupHash: groupId,\n          groupMessageHash: groupMessageId,\n        },\n      });\n      const { conversations, pinnedMessages, message } = {\n        ...{\n          pinnedMessages: getState().groups.pinnedMessages,\n          message: getState().groups.messages[groupMessageId],\n          conversations: getState().groups.conversations,\n        },\n      };\n\n      const conversation = conversations[groupId];\n      pinnedMessages[groupMessageId] = message;\n      if (conversation.pinnedMessages)\n        conversation.pinnedMessages!.push(groupMessageId);\n      else conversation.pinnedMessages = [groupMessageId];\n\n      dispatch<SetPinnedMessages>({\n        type: SET_PINNED_MESSAGES,\n        conversations: {\n          ...conversations,\n          [groupId]: conversation,\n        },\n        pinnedMessages: {\n          ...getState().groups.pinnedMessages,\n          ...pinnedMessages,\n        },\n      });\n    } catch (e) {\n      if (\n        (e as any).message.includes(\"failed to get the message being pinned\")\n      ) {\n        dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.group.pin-message\" }));\n      } else {\n        return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n      }\n    }\n  };\n","import { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { pushError } from \"../../error/actions\";\nimport { ThunkAction } from \"../../types\";\nimport { SetPinnedMessages, SET_PINNED_MESSAGES } from \"../types\";\n\nexport const unpinMessage =\n  (groupId: string, groupMessageId: string): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    try {\n      await callZome({\n        zomeName: ZOMES.GROUP,\n        fnName: FUNCTIONS[ZOMES.GROUP].UNPIN_MESSAGE,\n        payload: {\n          groupHash: groupId,\n          groupMessageHash: groupMessageId,\n        },\n      });\n      const { conversations, pinnedMessages } = {\n        ...{\n          conversations: getState().groups.conversations,\n          pinnedMessages: getState().groups.pinnedMessages,\n        },\n      };\n      const conversation = conversations[groupId];\n\n      delete pinnedMessages[groupMessageId];\n\n      conversation.pinnedMessages = conversation.pinnedMessages\n        ? conversation.pinnedMessages!.filter(\n            (pinnedMessage) => pinnedMessage !== groupMessageId\n          )\n        : [];\n\n      dispatch<SetPinnedMessages>({\n        type: SET_PINNED_MESSAGES,\n        conversations: {\n          ...conversations,\n          [groupId]: conversation,\n        },\n        pinnedMessages,\n      });\n    } catch (e) {\n      return dispatch(pushError(\"TOAST\", {}, { id: \"redux.err.generic\" }));\n    }\n  };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n// Components\nimport Chat from \"../../../components/Chat\";\nimport { ChatListMethods } from \"../../../components/Chat/types\";\nimport {\n  FilePayload,\n  isTextPayload,\n  Payload,\n} from \"../../../redux/commons/types\";\nimport {\n  fetchFilesBytes,\n  getMessagesWithProfile,\n  getPreviousGroupMessages,\n  readGroupMessage,\n  sendGroupMessage,\n} from \"../../../redux/group/actions\";\nimport { pinMessage } from \"../../../redux/group/actions/pinMessage\";\nimport { unpinMessage } from \"../../../redux/group/actions/unpinMessage\";\nimport { removeErrGroupMessage } from \"../../../redux/group/actions\";\n// Redux\nimport {\n  GroupMessage,\n  GroupMessageBundle,\n  GroupMessageInput,\n  GroupMessageReadData,\n  GroupMessagesOutput,\n} from \"../../../redux/group/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\ninterface Props {\n  messageIds: string[];\n  members: string[];\n  groupId: string;\n  readReceipt: boolean;\n  // TODO: not really sure what type this is\n  onReply(message: { author: string; payload: Payload; id: string }): any;\n  chatList: React.RefObject<ChatListMethods>;\n}\nconst ChatBox: React.FC<Props> = ({\n  messageIds,\n  members,\n  onReply,\n  chatList,\n  groupId,\n  readReceipt,\n}) => {\n  const dispatch = useAppDispatch();\n\n  /* Selecotrs */\n  const filesBytes = useSelector((state: RootState) => state.groups.groupFiles);\n  const {\n    messages: stateMessages,\n    errMsgs: groupErrMessages,\n    pinnedMessages,\n  } = useSelector((state: RootState) => state.groups);\n  const membersProfile = useSelector(\n    (state: RootState) => state.groups.members\n  );\n  const profile = useSelector((state: RootState) => state.profile);\n\n  /* LOCAL STATE */\n  const [messages, setMessages] = useState<GroupMessageBundle[]>([]);\n  const [messagesReceipt, setMessagesReceipt] = useState<string[]>([]);\n  const [oldestFetched, setOldestFetched] = useState<boolean>(false);\n\n  /* REFs */\n  const receiptsTimeout = useRef<NodeJS.Timeout>();\n\n  /* Handlers */\n  const handleOnScrollTop = (complete: any) => {\n    const lastMessage = messages[0];\n\n    if (!oldestFetched && lastMessage && !lastMessage.err) {\n      dispatch(\n        getPreviousGroupMessages({\n          groupId: groupId,\n          // the entry hash of the last message in the last batch fetched\n          lastFetched: lastMessage.groupMessageId,\n          // 0 - seconds since epoch, 1 - nanoseconds. See Timestamp type in hdk doc for more info.\n          lastMessageTimestamp: lastMessage.timestamp,\n          batchSize: 10,\n          payloadType: { type: \"ALL\", payload: null },\n        })\n      ).then((res: GroupMessagesOutput) => {\n        if (res && Object.keys(res.groupMessagesContents).length <= 0) {\n          setOldestFetched(true);\n        }\n        complete();\n      });\n    }\n    complete();\n  };\n\n  const handleOnDownload = (file: FilePayload) => {\n    const fileBytes = filesBytes[file.fileHash!];\n\n    if (fileBytes) {\n      const blob = new Blob([fileBytes]); // change resultByte to bytes\n      const link = document.createElement(\"a\");\n      link.href = window.URL.createObjectURL(blob);\n      link.download = file.fileName;\n      link.click();\n    } else {\n      dispatch(fetchFilesBytes([file.fileHash!])).then(\n        (res: { [key: string]: Uint8Array }) => {\n          if (res && Object.keys(res).length > 0) {\n            const fetchedFileBytes = res[file.fileHash!];\n            const blob = new Blob([fetchedFileBytes]); // change resultByte to bytes\n            const link = document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob);\n            link.download = file.fileName;\n            link.click();\n          }\n        }\n      );\n    }\n  };\n\n  const [readData, setReadData] = useState<GroupMessageReadData[]>([]);\n\n  useEffect(() => {\n    if (readData.length > 0) {\n      if (receiptsTimeout.current) clearTimeout(receiptsTimeout.current);\n      receiptsTimeout.current = setTimeout(() => {\n        const first = readData[0];\n        const readListData: GroupMessageReadData = {\n          ...first,\n          messageIds: readData.map((item) => item.messageIds).flat(),\n        };\n        dispatch(readGroupMessage(readListData));\n        setReadData([]);\n      }, 1500);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [readData]);\n\n  const handleOnSeen = (complete: () => any, message: any) => {\n    if (readReceipt) {\n      const read: boolean = Object.keys(message.readList).includes(profile.id!);\n\n      if (!read) {\n        // setReadData((currReadData) => ({\n        //   ...currReadData!,\n        //   messageIds: [...currReadData!.messageIds, message.groupMessageId],\n        // }));\n\n        const groupMessageReadData: GroupMessageReadData = {\n          groupId: groupId,\n          messageIds: [message.groupMessageId],\n          reader: profile.id!,\n          timestamp: message.timestamp,\n          members,\n        };\n        setReadData((currReadData) => [...currReadData, groupMessageReadData]);\n        complete();\n      }\n    }\n  };\n\n  const handleOnRetry = (setLoading: any, message: GroupMessageBundle) => {\n    const errMsg: GroupMessageInput = {\n      groupId: message.groupId,\n      payloadInput: isTextPayload(message.payload)\n        ? {\n            type: \"TEXT\",\n            payload: {\n              payload: message.payload.payload.payload,\n            },\n          }\n        : {\n            type: \"FILE\",\n            payload: {\n              metadata: {\n                fileName: message.payload.fileName,\n                fileSize: message.payload.fileSize,\n                fileType: message.payload.fileType,\n              },\n              fileType:\n                message.payload.fileType === \"IMAGE\"\n                  ? {\n                      type: \"IMAGE\",\n                      payload: {\n                        thumbnail: message.payload.thumbnail!,\n                      },\n                    }\n                  : message.payload.fileType === \"VIDEO\"\n                  ? {\n                      type: \"VIDEO\",\n                      payload: {\n                        thumbnail: message.payload.thumbnail!,\n                      },\n                    }\n                  : { type: \"OTHER\" },\n              fileBytes: message.payload.fileBytes!,\n            },\n          },\n      sender: message.author.id,\n      replyTo: message.replyToId,\n    };\n    setLoading(true);\n    // display loading button\n    // retry sending the group message\n    dispatch(sendGroupMessage(errMsg)).then((res: GroupMessage | false) => {\n      setLoading(false);\n      if (!res) return null;\n      dispatch(removeErrGroupMessage(message));\n    });\n  };\n\n  /* Effects */\n\n  useEffect(() => {\n    const messages = dispatch(getMessagesWithProfile(messageIds, groupId));\n    messages.sort((x: any, y: any) => {\n      return x.timestamp.getTime() - y.timestamp.getTime();\n    });\n\n    setMessages(messages);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messageIds, stateMessages, groupErrMessages]);\n\n  // debounce and read messages\n  useEffect(() => {\n    if (messagesReceipt.length > 0) {\n      if (receiptsTimeout.current) clearTimeout(receiptsTimeout.current);\n      receiptsTimeout.current = setTimeout(() => {\n        const groupMessageReadData: GroupMessageReadData = {\n          groupId: groupId,\n          messageIds: messagesReceipt,\n          reader: profile.id!,\n          timestamp: new Date(),\n          members,\n        };\n        dispatch(readGroupMessage(groupMessageReadData)).then((res: any) => {\n          setMessagesReceipt([]);\n        });\n      }, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messagesReceipt]);\n\n  return (\n    <>\n      <Chat.ChatList\n        disabled={oldestFetched}\n        onScrollTop={(complete) => handleOnScrollTop(complete)}\n        ref={chatList}\n        type=\"group\"\n      >\n        {messages!.map((message, i) => {\n          if (message.author.id === profile.id)\n            return (\n              <Chat.Me\n                id={message.groupMessageId}\n                profile={message.author}\n                onDownload={handleOnDownload}\n                onDelete={() => dispatch(removeErrGroupMessage(message))}\n                onRetry={(setLoading: any) =>\n                  handleOnRetry(setLoading, message)\n                }\n                key={i}\n                isPinned={pinnedMessages[message.groupMessageId] ? true : false}\n                timestamp={message.timestamp}\n                payload={message.payload}\n                readList={message.readList}\n                onPinMessage={() => {\n                  if (pinnedMessages[message.groupMessageId])\n                    dispatch(unpinMessage(groupId, message.groupMessageId));\n                  else dispatch(pinMessage(groupId, message.groupMessageId));\n                }}\n                replyTo={\n                  message.replyTo\n                    ? {\n                        payload: message.replyTo!.payload,\n                        author: {\n                          id: membersProfile[message.replyTo!.author].id,\n                          username:\n                            membersProfile[message.replyTo!.author].username,\n                          fields:\n                            membersProfile[message.replyTo!.author].fields,\n                        },\n                        id: `${i}`,\n                      }\n                    : undefined\n                }\n                type=\"group\"\n                showName={true}\n                showProfilePicture={true}\n                onReply={(message) => onReply(message)}\n                err={message.err}\n              />\n            );\n          return (\n            <Chat.Others\n              id={message.groupMessageId}\n              profile={message.author}\n              onDownload={handleOnDownload}\n              key={i}\n              isPinned={pinnedMessages[message.groupMessageId] ? true : false}\n              onPinMessage={() => {\n                if (pinnedMessages[message.groupMessageId])\n                  dispatch(unpinMessage(groupId, message.groupMessageId));\n                else dispatch(pinMessage(groupId, message.groupMessageId));\n              }}\n              timestamp={message.timestamp}\n              payload={message.payload}\n              readList={message.readList}\n              type=\"group\"\n              replyTo={\n                message.replyTo\n                  ? {\n                      payload: message.replyTo!.payload,\n                      author: {\n                        id: membersProfile[message.replyTo!.author].id,\n                        username:\n                          membersProfile[message.replyTo!.author].username,\n                        fields: membersProfile[message.replyTo!.author].fields,\n                      },\n                      id: `${i}`,\n                    }\n                  : undefined\n              }\n              showName={true}\n              onSeen={(complete) => handleOnSeen(complete, message)}\n              onReply={(message) => onReply(message)}\n              showProfilePicture={true}\n            />\n          );\n        })}\n      </Chat.ChatList>\n    </>\n  );\n};\n\nexport default ChatBox;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport {\n  IonAvatar,\n  IonButton,\n  IonButtons,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonTitle,\n  IonToolbar,\n  useIonPopover,\n} from \"@ionic/react\";\nimport {\n  arrowBackSharp,\n  ellipsisVerticalOutline,\n  informationCircleOutline,\n  peopleCircleOutline,\n  pinOutline,\n  search,\n} from \"ionicons/icons\";\nimport React from \"react\";\nimport { IntlShape, useIntl } from \"react-intl\";\nimport { useHistory } from \"react-router\";\nimport { GroupConversation } from \"../../redux/group/types\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  groupData: GroupConversation;\n}\n\ninterface MenuListProps {\n  onHide(): void;\n  groupData: GroupConversation;\n  history: any;\n  intl: IntlShape;\n}\n\nconst GroupChatMenuList: React.FC<MenuListProps> = ({\n  groupData,\n  history,\n  onHide,\n  intl,\n}) => {\n  return (\n    <IonList>\n      <IonItem\n        button\n        onClick={() => {\n          onHide();\n          history.push(`/g/${groupData.originalGroupId}/details`);\n        }}\n      >\n        <IonIcon slot=\"start\" icon={informationCircleOutline}></IonIcon>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.group-chat.header-details\" })}\n        </IonLabel>\n      </IonItem>\n\n      <IonItem\n        onClick={() => {\n          history.push({ pathname: `/g/${groupData.originalGroupId}/search` });\n          onHide();\n        }}\n        button\n      >\n        <IonIcon slot=\"start\" icon={search}></IonIcon>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.group-chat.header-search\" })}\n        </IonLabel>\n      </IonItem>\n\n      <IonItem\n        onClick={() => {\n          history.push({ pathname: `/g/${groupData.originalGroupId}/pinned` });\n          onHide();\n        }}\n        button\n      >\n        <IonIcon slot=\"start\" icon={pinOutline}></IonIcon>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.group-chat.header-pinned-message\" })}\n        </IonLabel>\n      </IonItem>\n    </IonList>\n  );\n};\n\nconst GroupChatHeader: React.FC<Props> = ({ groupData }) => {\n  const history = useHistory();\n  const intl = useIntl();\n\n  const [present, dismiss] = useIonPopover(GroupChatMenuList, {\n    onHide: () => dismiss(),\n    groupData,\n    history,\n    intl,\n  });\n\n  return (\n    <IonHeader>\n      <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonButton\n            onClick={() => history.push({ pathname: `/home` })}\n            className=\"ion-no-padding\"\n          >\n            <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n          </IonButton>\n        </IonButtons>\n        <div className={styles[\"title-container\"]}>\n          <IonAvatar className=\"ion-padding\">\n            {/* TODO: proper picture for default avatar if none is set */}\n            {/* TODO: Display an actual avatar set by the group creator */}\n            {groupData.avatar ? (\n              <img\n                src={URL.createObjectURL(\n                  new Blob([deserializeHash(groupData.avatar)], {\n                    type: \"image/jpeg\",\n                  })\n                )}\n                alt={groupData!.name}\n              ></img>\n            ) : (\n              <img\n                className={styles[\"avatar\"]}\n                src={peopleCircleOutline}\n                alt={groupData!.name}\n              />\n            )}\n          </IonAvatar>\n\n          <IonTitle className={styles[\"title\"]}>{groupData!.name}</IonTitle>\n        </div>\n\n        <IonButtons slot=\"end\">\n          <IonButton onClick={(e) => present({ event: e.nativeEvent })}>\n            <IonIcon icon={ellipsisVerticalOutline}></IonIcon>\n          </IonButton>\n        </IonButtons>\n      </IonToolbar>\n    </IonHeader>\n  );\n};\n\nexport default GroupChatHeader;\n","import { IonContent, IonPage } from \"@ionic/react\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\n// Components\nimport { ChatListMethods } from \"../../components/Chat/types\";\nimport Typing from \"../../components/Chat/Typing\";\nimport MessageInput, {\n  FileContent,\n  MessageInputMethods,\n  MessageInputOnSendParams,\n} from \"../../components/MessageInput\";\n// Redux\nimport { FilePayloadInput } from \"../../redux/commons/types\";\nimport {\n  indicateGroupTyping,\n  sendGroupMessage,\n  setErrGroupMessage,\n} from \"../../redux/group/actions\";\nimport { fetchPinnedMessages } from \"../../redux/group/actions/fetchPinnedMessages\";\nimport { GroupConversation, GroupMessageInput } from \"../../redux/group/types\";\nimport { RootState } from \"../../redux/types\";\n// Utils\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport ChatBox from \"./ChatBox\";\nimport GroupChatHeader from \"./GroupChatHeader\";\n\ninterface GroupChatParams {\n  group: string;\n}\n\nconst GroupChat: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { group } = useParams<GroupChatParams>();\n  const [isTyping, setIsTyping] = useState(false);\n\n  /* local states */\n  const [files, setFiles] = useState<FileContent[]>([]);\n  const [message, setMessage] = useState(\"\");\n\n  /* Refs */\n  const chatList = useRef<ChatListMethods>(null);\n  const inputTimeout = useRef<NodeJS.Timeout>();\n  const messageInput = useRef<MessageInputMethods | null>(null);\n\n  /* Selectors */\n  const groupData = useSelector(\n    (state: RootState) => state.groups.conversations[group]\n  );\n\n  const myProfile = useSelector((state: RootState) => state.profile);\n  const typing = useSelector((state: RootState) => state.groups.typing);\n  const { readReceipt, typingIndicator } = useSelector(\n    (state: RootState) => state.preference\n  );\n\n  /* Hooks */\n\n  useEffect(() => {\n    if (groupData) dispatch(fetchPinnedMessages(groupData?.originalGroupId));\n  }, [groupData, dispatch]);\n\n  /* Handlers */\n\n  /* handles sending of messages. */\n  const handleOnSend = (opt?: MessageInputOnSendParams) => {\n    const { message: message2, reply, setIsLoading } = { ...opt };\n    let text: GroupMessageInput | null = null;\n    let file: GroupMessageInput | null = null;\n    setIsLoading!(true);\n    /*\n      append text payload at index 0 and send it first\n      for performance purposes\n    */\n    if (message2!.length) {\n      text = {\n        groupId: groupData!.originalGroupId,\n        payloadInput: {\n          type: \"TEXT\",\n          payload: { payload: message2! },\n        },\n        sender: myProfile.id!,\n        // TODO: handle replying to message here as well\n        replyTo: reply,\n      };\n    }\n\n    if (files.length) {\n      // TODO: change when uploading of multiple files is allowed\n      const filePayload: any = files[0];\n      const filePayloadInput: FilePayloadInput = {\n        type: \"FILE\",\n        payload: {\n          metadata: {\n            fileName: filePayload.metadata.fileName,\n            fileSize: filePayload.metadata.fileSize,\n            fileType: filePayload.metadata.fileType,\n          },\n          fileType: filePayload.fileType,\n          fileBytes: filePayload.fileBytes,\n        },\n      };\n      file = {\n        /* groupData is non-nullable once the page renders */\n        groupId: groupData!.originalGroupId,\n        payloadInput: filePayloadInput,\n        sender: myProfile.id!,\n        // TODO: handle replying to message here as well\n        replyTo: reply,\n      };\n    }\n\n    if (text) {\n      dispatch(sendGroupMessage(text)).then((res: any) => {\n        if (res === false) dispatch(setErrGroupMessage(text!));\n        if (file) {\n          dispatch(sendGroupMessage(file)).then((res: any) => {\n            if (!res) dispatch(setErrGroupMessage(file!));\n            setIsLoading!(false);\n            chatList.current!.scrollToBottom();\n          });\n        }\n        setIsLoading!(false);\n        chatList.current!.scrollToBottom();\n      });\n    } else if (file) {\n      dispatch(sendGroupMessage(file)).then((res: any) => {\n        if (!res) dispatch(setErrGroupMessage(file!));\n        setIsLoading!(false);\n        chatList.current!.scrollToBottom();\n      });\n    }\n  };\n\n  /* \n      handle change in message input. indicate typing as the user types \n      but debounce with 500ms to indicate false in\n    */\n\n  useEffect(() => {\n    const members = [...groupData.members, groupData.creator].filter(\n      (member) => member !== myProfile.id\n    );\n\n    dispatch(\n      indicateGroupTyping({\n        groupId: groupData.originalGroupId,\n        indicatedBy: myProfile.id!,\n        members,\n        isTyping,\n      })\n    );\n  }, [isTyping]);\n\n  useEffect(() => {\n    // setInterval(() => {\n    //   const members = [...groupData.members, groupData.creator].filter(\n    //     (member) => member !== myProfile.id\n    //   );\n    //   dispatch(\n    //     indicateGroupTyping({\n    //       groupId: groupData.originalGroupId,\n    //       indicatedBy: myProfile.id!,\n    //       members,\n    //       isTyping: true,\n    //     })\n    //   );\n    // }, 10);\n  }, []);\n\n  useEffect(() => {\n    if (typingIndicator) {\n      // Remove self from the recipient of typing signal\n\n      if (isTyping !== (message.length !== 0))\n        setIsTyping(message.length !== 0);\n\n      if (inputTimeout.current) clearTimeout(inputTimeout.current);\n\n      inputTimeout.current = setTimeout(() => setIsTyping(false), 500);\n    }\n  }, [message]);\n\n  return groupData ? (\n    <IonPage>\n      <GroupChatHeader groupData={groupData} />\n      <IonContent>\n        {/* <PinnedMessage></PinnedMessage> */}\n        <ChatBox\n          onReply={(message) => {\n            if (messageInput.current) messageInput?.current?.reply(message);\n          }}\n          groupId={groupData.originalGroupId}\n          members={[...groupData.members, groupData.creator]}\n          messageIds={groupData.messages}\n          chatList={chatList}\n          readReceipt={readReceipt}\n        />\n      </IonContent>\n\n      <Typing\n        profiles={\n          typing[groupData.originalGroupId]\n            ? typing[groupData.originalGroupId]\n            : []\n        }\n      />\n      <MessageInput\n        ref={messageInput}\n        onSend={handleOnSend}\n        onChange={(message: string) => setMessage(message)}\n        onFileSelect={(files) => setFiles(files)}\n      />\n    </IonPage>\n  ) : null;\n};\n\nexport default GroupChat;\n","import { IonItem, IonLabel, IonList } from \"@ionic/react\";\nimport React from \"react\";\n\nconst values = [\n  {\n    label: \"Original\",\n    value: 0,\n  },\n  {\n    label: \"Square\",\n    value: 1,\n  },\n  {\n    label: \"16 / 9\",\n    value: 16 / 9,\n  },\n];\n\ninterface Props {\n  onChange(): any;\n  dismiss(): any;\n}\n\ninterface ItemInterface {\n  label: string;\n  value: number;\n  onChange(value: number): any;\n  dismiss(): any;\n}\n\nconst Item: React.FC<ItemInterface> = ({ label, value, onChange, dismiss }) => (\n  <IonItem\n    onClick={() => {\n      onChange(value);\n      dismiss();\n    }}\n  >\n    <IonLabel>{label}</IonLabel>\n  </IonItem>\n);\n\nconst CropPopover: React.FC<Props> = ({ onChange, dismiss }) => (\n  <IonList>\n    {values.map((value) => (\n      <Item\n        key={value.label}\n        onChange={onChange}\n        label={value.label}\n        value={value.value}\n        dismiss={dismiss}\n      />\n    ))}\n  </IonList>\n);\n\nexport default CropPopover;\n","import {\n  IonButton,\n  IonButtons,\n  IonLabel,\n  IonPage,\n  IonSpinner,\n  IonTitle,\n  useIonPopover,\n} from \"@ionic/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactCrop, { Crop } from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport CropPopover from \"./CropPopover\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  src: string;\n  prevPath: string;\n  dismiss(): any;\n  onComplete(binary: Uint8Array | null): any;\n}\n\nconst ImageCropper: React.FC<Props> = ({\n  src,\n  prevPath,\n  dismiss,\n  onComplete,\n}) => {\n  const [crop, setCrop] = useState<Partial<Crop>>({\n    x: 0,\n    y: 0,\n    aspect: 1,\n  });\n  const [binary, setBinary] = useState<Uint8Array | null>(null);\n  const imageContainer = useRef<HTMLDivElement | null>(null);\n  const [style, setStyle] = useState({});\n\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      setTimeout(() => {\n        // mobile if innerHeight is greater than innerWidth\n\n        if (window.innerHeight >= window.innerWidth) {\n          const percentage =\n            imageContainer.current!.getBoundingClientRect().width /\n            img.naturalWidth;\n\n          if (img.naturalWidth * percentage >= img.naturalHeight * percentage)\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalHeight,\n              height: percentage * img.naturalHeight,\n            }));\n          else\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalWidth,\n              height: percentage * img.naturalWidth,\n            }));\n\n          if (\n            img.naturalHeight * percentage <=\n            imageContainer.current!.getBoundingClientRect().height\n          )\n            // Set to 100vw because height can never be greater than container height\n            setStyle({ width: \"100vw\" });\n          else\n            setStyle({\n              height: `calc(100vh - ${\n                header.current?.getBoundingClientRect().height\n              }px - ${footer.current?.getBoundingClientRect().height}px)`,\n              width:\n                (imageContainer.current!.getBoundingClientRect().height /\n                  img.naturalHeight) *\n                img.naturalWidth,\n            });\n        } else {\n          const percentage =\n            imageContainer.current!.getBoundingClientRect().height /\n            img.naturalHeight;\n\n          if (img.naturalWidth * percentage >= img.naturalHeight * percentage)\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalHeight,\n              height: percentage * img.naturalHeight,\n            }));\n          else\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalWidth,\n              height: percentage * img.naturalWidth,\n            }));\n          if (\n            img.naturalWidth * percentage <=\n            imageContainer.current!.getBoundingClientRect().width\n          )\n            setStyle({\n              height: `calc(100vh - ${\n                header.current?.getBoundingClientRect().height\n              }px - ${footer.current?.getBoundingClientRect().height}px)`,\n            });\n          else\n            setStyle({\n              width: \"100vw\",\n              height:\n                (imageContainer.current!.getBoundingClientRect().width /\n                  img.naturalWidth) *\n                img.naturalHeight,\n            });\n        }\n      }, 500);\n    };\n    img.src = src;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const header = useRef<HTMLDivElement>(null);\n  const footer = useRef<HTMLDivElement>(null);\n\n  const onChange = (crop: number) => {\n    setCrop((currCrop) => {\n      const newCrop: Partial<Crop> = { ...currCrop };\n\n      if (crop === 0) delete newCrop[\"aspect\"];\n      else newCrop.aspect = crop;\n\n      return newCrop;\n    });\n  };\n\n  const dismissPopover = () => dismissP();\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [show, dismissP] = useIonPopover(CropPopover, {\n    onChange,\n    dismiss: dismissPopover,\n  });\n\n  function getCroppedImg() {\n    const canvas = document.createElement(\"canvas\");\n    const img = cropRef?.current?.imageRef?.current;\n\n    const scaleX = img ? img.naturalWidth / img.width : 0;\n    const scaleY = img ? img.naturalHeight / img.height : 0;\n    canvas.width = crop.width!;\n    canvas.height = crop.height!;\n    const ctx = canvas.getContext(\"2d\")!;\n\n    // New lines to be added\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width! * pixelRatio;\n    canvas.height = crop.height! * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n\n    if (img)\n      ctx.drawImage(\n        img,\n        crop.x! * scaleX,\n        crop.y! * scaleY,\n        crop.width! * scaleX,\n        crop.height! * scaleY,\n        0,\n        0,\n        crop.width!,\n        crop.height!\n      );\n    canvas.toBlob(\n      (blob) => {\n        blob?.arrayBuffer().then((v) => {\n          const binary = new Uint8Array(v);\n          setBinary(binary);\n        });\n      },\n      \"image/jpeg\",\n      1\n    );\n  }\n\n  useEffect(() => {\n    if (binary) {\n      onComplete(binary);\n      setBinary(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [binary]);\n\n  const onConfirm = () => {\n    getCroppedImg();\n    dismiss();\n  };\n\n  const cropRef = useRef<ReactCrop | null>(null);\n\n  const onChangeCrop = (crop: Crop) => setCrop(crop);\n\n  return (\n    <IonPage>\n      <div className={styles.content}>\n        <div className={styles.header} ref={header}>\n          <IonTitle>Crop Image</IonTitle>\n          {/* \n          <IonButton fill=\"clear\" href={prevPath}>\n            <IonIcon icon={arrowBack} />\n          </IonButton>\n\n          <IonButton fill=\"clear\" onClick={onConfirm}>\n            <IonIcon icon={checkmarkOutline} />\n          </IonButton> */}\n        </div>\n        <div className={styles[\"image-cropper\"]} ref={imageContainer}>\n          {Object.keys(style).length > 0 ? (\n            <ReactCrop\n              circularCrop\n              ref={cropRef}\n              imageStyle={{\n                // ...(Object.keys(style).length === 0 ? {} : style),\n                ...style,\n                objectFit: \"contain\",\n              }}\n              src={src}\n              onChange={onChangeCrop}\n              keepSelection={true}\n              crop={crop}\n            />\n          ) : (\n            <IonSpinner></IonSpinner>\n          )}\n        </div>\n      </div>\n      <div className={styles.footer} ref={footer}>\n        <IonButtons>\n          <IonButton href={prevPath} fill=\"outline\" color=\"danger\">\n            <IonLabel>Cancel</IonLabel>\n          </IonButton>\n          <IonButton onClick={onConfirm} fill=\"solid\" color=\"success\">\n            <IonLabel>Confirm</IonLabel>\n          </IonButton>\n        </IonButtons>\n      </div>\n      {/* <IonFooter ref={footer}>\n        <IonToolbar>\n          <IonButtons>\n            <IonButton onClick={onCrop}>\n              <IonIcon icon={scanOutline}></IonIcon>\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonFooter> */}\n    </IonPage>\n  );\n};\n\nexport default ImageCropper;\n","import React from \"react\";\nimport { IonButton, IonButtons, IonIcon } from \"@ionic/react\";\nimport { pencil } from \"ionicons/icons\";\n\ninterface Props {\n  onClickEdit: () => void;\n  onClickNotif: () => void;\n  disabled: boolean;\n}\n\nconst EndButtons: React.FC<Props> = ({onClickEdit, onClickNotif, disabled}) => (\n  <IonButtons slot=\"end\">\n    <>\n      <IonButton onClick={onClickEdit} disabled={disabled ? true : false}>\n        <IonIcon color=\"medium\" icon={pencil} />\n      </IonButton>\n    </>\n  </IonButtons>\n);\n\nexport default EndButtons;\n","import { IonButton, IonButtons, IonHeader, IonLabel, IonSearchbar, IonTitle, IonToolbar } from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  onChange(e: CustomEvent): any;\n  onCancel(): any;\n}\n\nconst AddMemberHeader: React.FC<Props> = ({ onChange, onCancel }) => {\n  const intl = useIntl();\n\n  return (\n    <IonHeader>\n      <IonToolbar>\n        <IonButtons>\n          <IonTitle className={styles[\"contacts\"]}>\n            {intl.formatMessage({id: \"app.group-chat.add-member-contacts\"})}\n          </IonTitle>\n          <IonButton className={styles[\"close-button\"]} onClick={onCancel} slot=\"end\">\n            <IonLabel className={styles[\"close-label\"]}>{intl.formatMessage({id: \"app.group-chat.add-member-close\"})}</IonLabel>\n          </IonButton>\n        </IonButtons>\n      </IonToolbar>\n      <IonToolbar>\n        <IonSearchbar onIonChange={onChange}/>\n      </IonToolbar>\n    </IonHeader>\n  );\n}\n\nexport default AddMemberHeader;\n","import { IonItem } from \"@ionic/react\";\nimport React from \"react\";\nimport AgentIdentifier from \"../../../../../../components/AgentIdentifier\";\nimport { Profile } from \"../../../../../../redux/profile/types\";\n\ninterface Props {\n  contact: Profile;\n  selected: boolean;\n  onSelected(contact: Profile): void;\n}\n\nconst AddMemberItem: React.FC<Props> = ({ contact, selected, onSelected }) => {\n  const handleOnClick = () => onSelected(contact);\n\n  return (\n    <IonItem\n      button\n      onClick={handleOnClick}\n      lines=\"none\"\n      color={selected ? \"primary\" : \"\"}\n      key={JSON.stringify(contact.id)}\n    >\n      <AgentIdentifier nickname={contact.username} id={contact.id} />\n    </IonItem>\n  );\n};\n\nexport default AddMemberItem;\n","import { IonItemDivider, IonLabel } from \"@ionic/react\";\nimport React from \"react\";\nimport { Profile } from \"../../../../../../redux/profile/types\";\nimport AddContactItem from \"../AddMemberItem\";\n\ninterface Props {\n  index: string;\n  contacts: Profile[];\n  selected: Profile[];\n  onSelected(contact: Profile): void;\n}\n\nconst AddMemberIndex: React.FC<Props> = ({\n  index,\n  contacts,\n  onSelected,\n  selected,\n}) => {\n  return (\n    <React.Fragment key={index}>\n      <IonItemDivider>\n        <IonLabel>{index}</IonLabel>\n      </IonItemDivider>\n      {contacts.map((contact) => {\n        return (\n          <AddContactItem\n            key={JSON.stringify(contact.id)}\n            onSelected={onSelected}\n            selected={selected.includes(contact) ? true : false}\n            contact={contact}\n          />\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default AddMemberIndex;\n","import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonLabel,\n  IonList,\n  IonModal,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { addMembers } from \"../../../../../redux/group/actions\";\nimport { UpdateGroupMembersData } from \"../../../../../redux/group/types\";\n// redux\nimport { Profile, ProfileListType } from \"../../../../../redux/profile/types\";\nimport { indexContacts, useAppDispatch } from \"../../../../../utils/helpers\";\nimport AddMemberHeader from \"./AddMemberHeader\";\nimport AddMemberIndex from \"./AddMemberIndex\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  isOpen: boolean;\n  setLoading: (bool: any) => void;\n  onCancel: () => void;\n  contacts: ProfileListType;\n  groupId: string;\n  groupRevisionId: string;\n  members: Profile[];\n  setMembers: (profiles: Profile[]) => void;\n}\n\nconst AddMemberModal: React.FC<Props> = ({\n  isOpen,\n  onCancel,\n  contacts,\n  groupId,\n  groupRevisionId,\n  setLoading,\n  members,\n  setMembers,\n}) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n\n  const [filter, setFilter] = useState<string>(\"\");\n  const [selected, setSelected] = useState<Profile[]>([]);\n\n  /* Helpers */\n  const filterAddedMember = (contacts: ProfileListType) =>\n    Object.keys(contacts).filter(\n      (key: string) =>\n        members.map((member: Profile) => member.id).indexOf(key) === -1\n    );\n\n  const indexedContacts = indexContacts(\n    filterAddedMember(contacts)\n      .map((key: string) => contacts[key])\n      .filter((contact) =>\n        contact.username.toLowerCase().includes(filter.toLowerCase())\n      )\n  );\n\n  /* Handlers */\n  const handleOnSelected = (contact: Profile) =>\n    setSelected([...selected, contact]);\n\n  const handleOnAdd = () => {\n    setLoading(true);\n    let payload = {\n      members: selected.map((profile: any) => profile.id), // base64 string\n      groupId,\n      groupRevisionId,\n    };\n    dispatch(addMembers(payload)).then(\n      (res: UpdateGroupMembersData | boolean) => {\n        if (res !== false) {\n          let newMembers: Profile[] = members.concat(selected);\n          setMembers(newMembers);\n          setSelected([]);\n          setLoading(false);\n        } else {\n          setSelected([]);\n          setLoading(false);\n        }\n      }\n    );\n  };\n\n  /* Renders */\n  const renderContacts = () =>\n    Object.keys(indexedContacts).map((char) => {\n      const searchedContacts = indexedContacts[char];\n      return (\n        <AddMemberIndex\n          onSelected={handleOnSelected}\n          key={char}\n          index={char}\n          contacts={searchedContacts}\n          selected={selected}\n        />\n      );\n    });\n\n  return (\n    <IonModal isOpen={isOpen}>\n      <AddMemberHeader\n        onChange={(e) => setFilter(e.detail.value!)}\n        onCancel={onCancel}\n      />\n      <IonContent>\n        <IonList className={styles[\"contacts-list\"]}>\n          {renderContacts()}\n        </IonList>\n        <IonToolbar>\n          <IonButtons slot=\"end\">\n            <IonButton disabled={selected.length === 0} onClick={handleOnAdd}>\n              <IonLabel className={styles[\"add-label\"]}>\n                {intl.formatMessage({ id: \"app.group-chat.add-member\" })}\n              </IonLabel>\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonContent>\n    </IonModal>\n  );\n};\n\nexport default AddMemberModal;\n","import {\n  IonIcon,\n  IonItem,\n  IonItemGroup,\n  IonLabel,\n  IonLoading,\n} from \"@ionic/react\";\nimport {\n  peopleOutline,\n  personAddOutline,\n  removeCircleOutline,\n} from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useToast } from \"../../../../containers/ToastContainer/context\";\n\nimport { removeMembers } from \"../../../../redux/group/actions\";\nimport { GroupConversation } from \"../../../../redux/group/types\";\n// Redux\nimport { Profile } from \"../../../../redux/profile/types\";\nimport { RootState } from \"../../../../redux/types\";\nimport { useAppDispatch } from \"../../../../utils/helpers\";\nimport AddMemberModal from \"./AddMemberModal\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  groupId: string;\n  groupRevisionId: string;\n}\n\nconst Members: React.FC<Props> = ({ groupId, groupRevisionId }) => {\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n\n  const { showErrorToast } = useToast();\n\n  /* Local state */\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [members, setMembers] = useState<Profile[]>([]);\n\n  /* Selectors */\n  const contacts = useSelector((state: RootState) => state.contacts.contacts);\n  const profile = useSelector((state: RootState) => state.profile);\n  const groupMembers = useSelector((state: RootState) => state.groups.members);\n  const groupData = useSelector(\n    (state: RootState) => state.groups.conversations[groupId]\n  );\n\n  /* Handlers */\n  const handleRemoveMembers = (memberProfile: Profile) => {\n    setLoading(true);\n    /* err if member is being removed when total member <= 2 */\n    if (groupData.members.length <= 2) {\n      setLoading(false);\n      showErrorToast({\n        message: intl.formatMessage({\n          id: \"app.group-chat.minimum-member-required-reached\",\n        }),\n      });\n      return null;\n    }\n\n    let input = {\n      members: [memberProfile.id],\n      groupId: groupData.originalGroupId,\n      groupRevisionId: groupData.originalGroupRevisionId,\n    };\n    dispatch(removeMembers(input)).then((res: any) => {\n      if (res !== false) {\n        let newMembers = members.filter((x) => !res.members.includes(x.id));\n        setMembers(newMembers);\n      }\n      setLoading(false);\n    });\n  };\n\n  /* Use Effects */\n  useEffect(() => {\n    let membersProfile: Profile[] = [];\n    let members = [...groupData.members, groupData.creator];\n\n    // We include the creator in the membersProfile here\n    members.forEach((member: string) => {\n      if (groupMembers[member]) membersProfile.push(groupMembers[member]);\n    });\n\n    setMembers(membersProfile);\n    setLoading(false);\n  }, [groupData, groupMembers]);\n\n  /* Renderer */\n  const renderNoOfMembers = () => (\n    <IonItem lines=\"none\">\n      <IonIcon className={styles.icon} icon={peopleOutline}></IonIcon>\n      <IonLabel>\n        {intl.formatMessage(\n          { id: \"app.group-chat.members\" },\n          { length: members.length }\n        )}\n      </IonLabel>\n    </IonItem>\n  );\n\n  const renderAddMemberButton = (groupData: GroupConversation) => {\n    return profile.id === groupData.creator ? (\n      <IonItem lines=\"none\" button onClick={() => setIsOpen(true)}>\n        <IonIcon className={styles.icon} icon={personAddOutline}></IonIcon>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.group-chat.add-members\" })}\n        </IonLabel>\n      </IonItem>\n    ) : null;\n  };\n\n  /* This is a version of remove member that is a button */\n  const renderRemoveMemberButton = (member: Profile) => {\n    /*\n      - check that the agent is a creator \n      - check also that the remove button will not appear to self\n    */\n    return profile.id === groupData.creator &&\n      member.id !== groupData.creator ? (\n      <IonItem\n        lines=\"none\"\n        slot=\"end\"\n        button\n        onClick={() => handleRemoveMembers(member)}\n      >\n        <IonIcon color=\"danger\" icon={removeCircleOutline} />\n      </IonItem>\n    ) : null;\n  };\n\n  /* This is a version of remove member that is a slide (currently unused) */\n  // const renderRemoveMemberSlide = (member: Profile) => {\n  //   return (myAgentId === groupData.creator && member.id !== groupData.creator) ? (\n  //     <IonItemOptions side={\"end\"}>\n  //       <IonItemOption onClick={() => handleRemoveMembers(member)} color=\"danger\">\n  //         {intl.formatMessage({id: \"app.group-chat.remove-member\"})}\n  //       </IonItemOption>\n  //     </IonItemOptions>\n  //   ) : null\n  // }\n\n  /*\n    Currently, we are rending a button for remove member feature\n    TODO: Discuss and decide whether we will use button or slide for remove member\n    What would be nice is for us to use button for browser and slide for mobile app maybe.\n  */\n  const renderGroupMembers = (members: Profile[]) =>\n    members.map((member: Profile) => {\n      let isCreator = member.id === groupData.creator;\n      /* \n      Uncomment IonItemSliding and renderRemoveMemberSlide(member) and comment out \n      renderRemoveMemberButton(member) to change to slide\n    */\n      return (\n        // <IonItemSliding>\n        <IonItem lines=\"none\" key={member.id}>\n          <IonLabel className={styles[\"member-name\"]}>\n            {member.username}\n            <br />\n            {isCreator\n              ? intl.formatMessage({ id: \"app.group-chat.admin-role\" })\n              : intl.formatMessage({ id: \"app.group-chat.member-role\" })}\n          </IonLabel>\n          {renderRemoveMemberButton(member)}\n          {/* {renderRemoveMemberSlide(member)} */}\n        </IonItem>\n        // </IonItemSliding>\n      );\n    });\n\n  return (\n    <>\n      {!loading ? (\n        <>\n          <IonItemGroup className={styles[\"member-page\"]}>\n            {renderNoOfMembers()}\n            {renderAddMemberButton(groupData)}\n\n            <IonItem lines=\"none\" className={styles[\"member-title\"]}>\n              <h3>\n                {intl.formatMessage({ id: \"app.group-chat.members-label\" })}\n              </h3>\n            </IonItem>\n\n            {renderGroupMembers(members)}\n          </IonItemGroup>\n        </>\n      ) : (\n        <IonLoading isOpen={loading} />\n      )}\n\n      <AddMemberModal\n        contacts={contacts}\n        members={members}\n        setMembers={setMembers}\n        isOpen={isOpen}\n        onCancel={() => setIsOpen(false)}\n        groupId={groupId}\n        groupRevisionId={groupRevisionId}\n        setLoading={setLoading}\n      />\n    </>\n  );\n};\n\nexport default Members;\n","import React from \"react\";\nimport { IonLabel, IonToolbar, IonSegment, IonSegmentButton } from \"@ionic/react\";\nimport { useIntl } from \"react-intl\";\n\ninterface Props {\n\tonSegmentChange(index: any): any\n  value: string\n}\n\n/*\n\tdisplays the tab segments in GroupChat detail page\n\twhich controls the displayed slides\n*/\nconst SegmentTabs: React.FC<Props> = ({ onSegmentChange, value }) => {\n\tlet intl = useIntl();\n\n\treturn (\t\t\t\t\n    <IonToolbar>\n      <IonSegment value={value} onIonChange={(e) => onSegmentChange(e.detail.value)}>\n        <IonSegmentButton value=\"Info\">\n          <IonLabel>{intl.formatMessage({ id: \"app.group-chat.label-info\" })}</IonLabel>\n        </IonSegmentButton>\n      \n        <IonSegmentButton value=\"Media\">\n          <IonLabel>{intl.formatMessage({ id: \"app.group-chat.label-media\" })}</IonLabel>\n        </IonSegmentButton>\n      \n        <IonSegmentButton value=\"Files\">\n          <IonLabel>{intl.formatMessage({ id: \"app.group-chat.label-files\" })}</IonLabel>\n        </IonSegmentButton>\n      </IonSegment>\n    </IonToolbar>\n\t);\n}; \n\nexport default SegmentTabs;","import {\n  IonButton,\n  IonButtons,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"../style.module.css\";\n\ninterface Props {\n  onCancel: () => void;\n  onSave: (newGroupName: string) => void;\n  setName: React.Dispatch<React.SetStateAction<string>>;\n  name: string;\n}\n\nconst UpdateGroupName: React.FC<Props> = ({\n  onCancel,\n  onSave,\n  setName,\n  name,\n}) => {\n  const intl = useIntl();\n  const handleOnChange = (e: CustomEvent) => setName(e.detail.value!);\n  return (\n    <div className={styles.modal}>\n      <IonToolbar>\n        <IonTitle>\n          {intl.formatMessage({ id: \"app.group-chat.update-group-name-title\" })}\n        </IonTitle>\n      </IonToolbar>\n\n      <IonItem className=\"input\">\n        <IonLabel color=\"medium\" position=\"floating\">\n          {intl.formatMessage({\n            id: \"app.group-chat.update-group-name-placeholder\",\n          })}\n        </IonLabel>\n        <IonInput\n          clearInput\n          className={styles[\"ion-input\"]}\n          value={name}\n          onIonChange={handleOnChange}\n        ></IonInput>\n      </IonItem>\n\n      <IonButtons slot=\"end\" className=\"input\">\n        <IonButton slot=\"end\" onClick={onCancel}>\n          <IonLabel>\n            {intl.formatMessage({\n              id: \"app.group-chat.update-group-name-cancel\",\n            })}\n          </IonLabel>\n        </IonButton>\n        <IonButton\n          disabled={!name.length ? true : false}\n          slot=\"end\"\n          onClick={() => {\n            onSave(name);\n          }}\n        >\n          <IonLabel>\n            {intl.formatMessage({\n              id: \"app.group-chat.update-group-name-save\",\n            })}\n          </IonLabel>\n        </IonButton>\n      </IonButtons>\n    </div>\n  );\n};\n\nexport default UpdateGroupName;\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonLoading,\n  IonModal,\n  IonPage,\n  IonSlide,\n  IonSlides,\n  IonText,\n  IonTitle,\n  IonToolbar,\n  useIonModal,\n} from \"@ionic/react\";\nimport {\n  arrowBackSharp,\n  imageOutline,\n  peopleCircleOutline,\n} from \"ionicons/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport ImageCropper from \"../../../components/ImageCropper\";\nimport FileBox from \"../../../components/Slides/FileBox\";\nimport MediaBox from \"../../../components/Slides/MediaBox\";\nimport { FetchPayloadType, FilePayload } from \"../../../redux/commons/types\";\nimport {\n  fetchFilesBytes,\n  getPreviousGroupMessages,\n  updateGroupAvatar,\n  updateGroupName,\n} from \"../../../redux/group/actions\";\nimport { GroupMessage } from \"../../../redux/group/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\nimport EndButtons from \"./EndButtons\";\nimport Members from \"./Members\";\n// Components\nimport SegmentTabs from \"./SegmentTabs\";\nimport styles from \"./style.module.css\";\nimport UpdateGroupName from \"./UpdateGroupName\";\n\ninterface GroupChatParams {\n  group: string;\n}\n\nconst GroupChatDetails: React.FC = () => {\n  const history = useHistory();\n  const { group } = useParams<GroupChatParams>();\n  const dispatch = useAppDispatch();\n\n  const slideOpts = {\n    initialSlide: 0,\n    speed: 400,\n  };\n\n  const groupData = useSelector(\n    (state: RootState) => state.groups.conversations[group]\n  );\n\n  const myProfile = useSelector((state: RootState) => state.profile);\n  const { conversations, messages } = useSelector(\n    (state: RootState) => state.groups\n  );\n  const others = useSelector((state: RootState) => state.groups.groupFiles);\n\n  /* Local state */\n  const [editGroupName, setEditGroupName] = useState<boolean>(false);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [media] = useState<{ [key: string]: boolean }>({});\n  const [files] = useState<{ [key: string]: boolean }>({});\n  const [orderedMedia] = useState<GroupMessage[]>([]);\n  const [orderedFiles] = useState<GroupMessage[]>([]);\n  const [currentSegment, setCurrentSegment] = useState<string>(\"Info\");\n  const [name, setName] = useState<string>(\"\");\n\n  /* Refs */\n  const slideRef = useRef<HTMLIonSlidesElement>(null);\n\n  /* Handlers */\n  const handleOnBack = () => {\n    history.goBack();\n  };\n\n  const handleOnClickEdit = () => {\n    setEditGroupName(editGroupName ? false : true);\n    setShowModal(showModal ? false : true);\n  };\n\n  /*\n    changes which slide is displayed\n    when clicking on a segment\n  */\n  const handleOnSegmentChange = (value: string) => {\n    var index;\n    switch (value) {\n      case \"Info\":\n        index = 0;\n        break;\n      case \"Media\":\n        index = 1;\n        break;\n      case \"Files\":\n        index = 2;\n        break;\n      default:\n        index = 0;\n    }\n    slideRef.current?.slideTo(index);\n  };\n\n  /*\n    changes which segment is highlighted\n    when the slide is changed\n  */\n  const handleSlideChange = () => {\n    const segmentValues = [\"Info\", \"Media\", \"Files\"];\n    slideRef.current\n      ?.getActiveIndex()\n      .then((currentIndex) => setCurrentSegment(segmentValues[currentIndex]));\n  };\n\n  /*\n    Handler for update of GroupName\n  */\n  const handleOnSave = (newGroupName: string) => {\n    dispatch(\n      updateGroupName({\n        name: newGroupName,\n        groupId: groupData!.originalGroupId,\n        groupRevisionId: groupData!.originalGroupRevisionId,\n      })\n    ).then((res: any) => {\n      if (res) {\n        setName(\"\");\n        setShowModal(false);\n      }\n    });\n  };\n\n  const handleOnDownload = (file: FilePayload) => {\n    others[file.fileHash!] !== undefined\n      ? downloadFile(others[file.fileHash!], file.fileName)\n      : dispatch(fetchFilesBytes([file.fileHash!])).then(\n          (res: { [key: string]: Uint8Array }) => {\n            if (res && Object.keys(res).length > 0) {\n              downloadFile(res[file.fileHash!], file.fileName);\n            }\n          }\n        );\n  };\n  const downloadFile = (fileBytes: Uint8Array, fileName: string) => {\n    const blob = new Blob([fileBytes]); // change resultByte to bytes\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = fileName;\n    link.click();\n  };\n\n  const handleOnScrollBottom = (\n    complete: () => Promise<void>,\n    earliestMediaOrFile: any,\n    type: FetchPayloadType\n  ) => {\n    let earliest: GroupMessage = earliestMediaOrFile;\n\n    if (earliest !== undefined) {\n      dispatch(\n        getPreviousGroupMessages({\n          groupId: group,\n          lastFetched: earliest.groupMessageId,\n          lastMessageTimestamp: earliest.timestamp,\n          batchSize: 5,\n          payloadType: type,\n        })\n      ).then((res: any) => {\n        complete();\n      });\n    }\n    return;\n  };\n\n  /* UseEffects */\n  // sort others\n  useEffect(() => {\n    if (conversations[group] !== undefined) {\n      conversations[group].messages.forEach((messageID: string) => {\n        let message = messages[messageID];\n        if (message && message.payload.type === \"FILE\") {\n          let type = message.payload.fileType;\n\n          // checks for and does not allow duplicates\n          // not clear when this happens\n          switch (type) {\n            case \"IMAGE\":\n              if (!media[message.groupMessageId]) {\n                media[message.groupMessageId] = true;\n                orderedMedia.push(message);\n              }\n              break;\n            case \"VIDEO\":\n              if (!media[message.groupMessageId]) {\n                media[message.groupMessageId] = true;\n                orderedMedia.push(message);\n              }\n              break;\n            case \"OTHER\":\n              if (!files[message.groupMessageId]) {\n                files[message.groupMessageId] = true;\n                orderedFiles.push(message);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversations, messages]);\n\n  /* fetch 40 media */\n  useEffect(() => {\n    dispatch(\n      getPreviousGroupMessages({\n        groupId: group,\n        batchSize: 40,\n        payloadType: {\n          type: \"MEDIA\",\n          payload: null,\n        },\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /* fetch 40 Files */\n  useEffect(() => {\n    dispatch(\n      getPreviousGroupMessages({\n        groupId: group,\n        batchSize: 40,\n        payloadType: {\n          type: \"FILE\",\n          payload: null,\n        },\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const file = useRef<HTMLInputElement>(null);\n  const [binary, setBinary] = useState<null | Uint8Array>(null);\n  const groupPicture = useRef<HTMLImageElement>(null);\n\n  const decodeSrc = () => {\n    const decoder = new TextDecoder();\n\n    return binary ? decoder.decode(binary) : \"\";\n  };\n\n  const onDismiss = () => {\n    setBinary(null);\n    dismiss();\n  };\n\n  const [present, dismiss] = useIonModal(ImageCropper, {\n    src: decodeSrc(),\n    prevPath: \"/register\",\n    dismiss: onDismiss,\n    onComplete: (binary: Uint8Array) => {\n      if (binary) {\n        const blob = new Blob([binary], { type: \"image/jpeg\" });\n        dispatch(\n          updateGroupAvatar({\n            avatar: serializeHash(binary),\n            groupId: groupData!.originalGroupId,\n            groupRevisionId: groupData!.originalGroupRevisionId,\n          })\n        );\n        groupPicture.current!.src = URL.createObjectURL(blob);\n        // setBinary(binary);\n      }\n    },\n  });\n\n  const handleOnFileChange = () => {\n    Array.from(file.current ? file.current.files! : new FileList()).forEach(\n      (file) => {\n        file.arrayBuffer().then((arrBuffer) => {\n          const fileSize = file.size;\n          const fileName = file.name;\n          // 15mb = 15728640b, file.size is of type bytes\n          if (fileSize < 15728640) {\n            const encoder = new TextEncoder();\n            const reader = new FileReader();\n\n            reader.readAsDataURL(file);\n            reader.onload = (readerEvent) => {\n              const encoded = encoder.encode(\n                readerEvent.target?.result as string\n              );\n\n              setBinary(encoded);\n            };\n          }\n        });\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (binary) present({ cssClass: `cropper ${styles.modal}` });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [binary]);\n\n  const intl = useIntl();\n\n  const renderGroupAvatar = () => {\n    if (groupData.creator === myProfile.id) {\n      return (\n        <div className={styles[\"avatar-container\"]}>\n          {/* <UpdateAvatar\n                imageRef={groupPicture}\n                onChange={() => {}}\n              ></UpdateAvatar> */}\n          <div className={styles[\"avatar-content\"]}>\n            <div className={styles[\"avatar\"]}>\n              <div className={styles[\"image-container\"]}>\n                {groupData.avatar ? (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={URL.createObjectURL(\n                      new Blob([deserializeHash(groupData.avatar)], {\n                        type: \"image/jpeg\",\n                      })\n                    )}\n                  />\n                ) : (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={peopleCircleOutline}\n                    className={styles.img}\n                  ></img>\n                )}\n              </div>\n              <div\n                onClick={() => file.current?.click()}\n                className={styles.overlay}\n              >\n                <IonText className=\"ion-text-center\">\n                  {intl.formatMessage({\n                    id: \"app.group-chat.change-avatar\",\n                  })}\n                </IonText>\n              </div>\n            </div>\n            <div className={styles[\"icon-overlay\"]}>\n              <IonIcon size=\"large\" icon={imageOutline}></IonIcon>\n            </div>\n          </div>\n          <input\n            ref={file}\n            type=\"file\"\n            hidden\n            accept=\"image/png, image/jpeg\"\n            onChange={handleOnFileChange}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className={styles[\"avatar-container\"]}>\n          {/* <UpdateAvatar\n                imageRef={groupPicture}\n                onChange={() => {}}\n              ></UpdateAvatar> */}\n          <div className={styles[\"avatar-content\"]}>\n            <div className={styles[\"avatar\"]}>\n              <div className={styles[\"image-container\"]}>\n                {groupData.avatar ? (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={URL.createObjectURL(\n                      new Blob([deserializeHash(groupData.avatar)], {\n                        type: \"image/jpeg\",\n                      })\n                    )}\n                  />\n                ) : (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={peopleCircleOutline}\n                    className={styles.img}\n                  ></img>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <>\n      {groupData ? (\n        <IonPage>\n          <IonHeader className={styles.header}>\n            <IonToolbar>\n              <IonButtons>\n                <IonButton\n                  onClick={() => handleOnBack()}\n                  className=\"ion-no-padding\"\n                >\n                  <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n                </IonButton>\n              </IonButtons>\n              <EndButtons\n                onClickEdit={() => handleOnClickEdit()}\n                onClickNotif={() => {}}\n                disabled={groupData.creator !== myProfile.id ? true : false}\n              />\n            </IonToolbar>\n            {renderGroupAvatar()}\n            <IonTitle className={styles.groupname}>{groupData!.name}</IonTitle>\n\n            <SegmentTabs\n              value={currentSegment}\n              onSegmentChange={handleOnSegmentChange}\n            />\n          </IonHeader>\n\n          <IonContent>\n            <IonSlides\n              ref={slideRef}\n              className=\"slides\"\n              pager={false}\n              options={slideOpts}\n              onIonSlideDidChange={handleSlideChange}\n            >\n              <IonSlide>\n                <Members\n                  groupId={group}\n                  groupRevisionId={groupData!.originalGroupRevisionId}\n                />\n              </IonSlide>\n\n              <IonSlide>\n                {/* <Media groupId={group} /> */}\n                <MediaBox\n                  orderedMediaMessages={orderedMedia}\n                  onDownload={(file: FilePayload) => handleOnDownload(file)}\n                  onScrollBottom={(complete, earliestMedia) =>\n                    handleOnScrollBottom(complete, earliestMedia, {\n                      type: \"MEDIA\",\n                      payload: null,\n                    })\n                  }\n                />\n              </IonSlide>\n\n              <IonSlide>\n                {/* <File groupId={group} /> */}\n                <FileBox\n                  orderedFileMessages={orderedFiles}\n                  onDownload={(file: FilePayload) => handleOnDownload(file)}\n                  onScrollBottom={(complete, earliestFile) =>\n                    handleOnScrollBottom(complete, earliestFile, {\n                      type: \"FILE\",\n                      payload: null,\n                    })\n                  }\n                />\n              </IonSlide>\n            </IonSlides>\n          </IonContent>\n\n          <IonModal isOpen={showModal} cssClass=\"my-custom-modal-css\">\n            <UpdateGroupName\n              setName={setName}\n              name={name}\n              onCancel={() => setShowModal(false)}\n              onSave={(newGroupName) => handleOnSave(newGroupName)}\n            />\n          </IonModal>\n        </IonPage>\n      ) : (\n        <IonLoading isOpen={true} />\n      )}\n    </>\n  );\n};\n\nexport default GroupChatDetails;\n","import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBackSharp } from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport PinnedMessages from \"../../../components/PinnedMessages\";\nimport { Payload } from \"../../../redux/commons/types\";\nimport { getPinnedMessages } from \"../../../redux/group/actions/getPinnedMessages\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\nconst GroupPinnedMessages: React.FC = () => {\n  const { group } = useParams<{ group: string }>();\n  const intl = useIntl();\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n\n  const [data, setData] = useState<\n    { id: string; author: string; payload: Payload; date: Date }[] | null\n  >(null);\n\n  const { conversation, pinnedMesssages } = useSelector((state: RootState) => ({\n    conversation: state.groups.conversations[group],\n    pinnedMesssages: state.groups.conversations[group]?.pinnedMessages,\n  }));\n\n  useEffect(() => {\n    dispatch(getPinnedMessages(group)).then((res: any) => setData(res));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversation, pinnedMesssages]);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons>\n            <IonButton\n              onClick={() => history.push({ pathname: `/g/${group}` })}\n              className=\"ion-no-padding\"\n            >\n              <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n            </IonButton>\n            <IonTitle>\n              {intl.formatMessage({\n                id: \"app.group-chat.pinned-message-title\",\n              })}\n            </IonTitle>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        {data ? (\n          <PinnedMessages\n            type=\"group\"\n            onMessageClick={(message) => {}}\n            messages={data}\n          />\n        ) : null}\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default GroupPinnedMessages;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { ThunkAction } from \"../../types\";\nimport { fetchPinnedMessages } from \"./fetchPinnedMessages\";\nimport getLatestGroupVersion from \"./getLatestGroupVersion\";\nimport { fetchUsernameOfMembers } from \"./helpers\";\n\nexport const getPinnedMessages =\n  (groupId: string): ThunkAction =>\n  async (dispatch, getState, { callZome, getAgentId }) => {\n    const conversation = getState().groups.conversations[groupId];\n    if (conversation) {\n      const pinnedMessages = conversation.pinnedMessages;\n      if (\n        pinnedMessages &&\n        pinnedMessages.filter(\n          (pinnedMessage) =>\n            getState().groups.pinnedMessages[pinnedMessage] === undefined\n        ).length === 0\n      ) {\n        const authors = pinnedMessages.map((pinnedMessage) => {\n          const message = getState().groups.messages[pinnedMessage];\n          return message.author;\n        });\n        const id = await getAgentId();\n\n        if (id) {\n          const authorProfiles = await fetchUsernameOfMembers(\n            getState(),\n            authors,\n            callZome,\n            serializeHash(id)\n          );\n\n          return pinnedMessages.map((messageId) => {\n            const message = getState().groups.pinnedMessages[messageId];\n            const author = authorProfiles[message.author];\n\n            return {\n              id: message.groupMessageId,\n              payload: message.payload,\n              author: author ? author.username : message.author,\n              date: message.timestamp,\n            };\n          });\n        }\n\n        // fetch messages here\n        // dispatch()\n      } else dispatch(fetchPinnedMessages(groupId));\n    } else dispatch(getLatestGroupVersion(groupId));\n\n    return null;\n  };\n","import { ThunkAction } from \"../../types\";\nimport { fetchUsernameOfMembers } from \"./helpers\";\n\nconst fetchMembers =\n  (ids: string[], id: string): ThunkAction =>\n  async (dispatch, getState, { callZome }) => {\n    return await fetchUsernameOfMembers(getState(), ids, callZome, id);\n  };\n\nexport default fetchMembers;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport Search from \"../../../components/Search\";\nimport { Payload } from \"../../../redux/commons/types\";\nimport { getMessagesByGroupByTimestamp } from \"../../../redux/group/actions\";\nimport fetchMembers from \"../../../redux/group/actions/fetchMembers\";\nimport { GroupMessagesOutput } from \"../../../redux/group/types\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\nconst GroupSearch: React.FC = () => {\n  const [messages, setMessages] = useState<\n    {\n      id: string;\n      author: Profile;\n      payload: Payload;\n      timestamp: Date;\n      readList: any;\n    }[]\n  >();\n\n  const { group } = useParams<{ group: string }>();\n  const { id } = useSelector((state: RootState) => state.profile);\n\n  const dispatch = useAppDispatch();\n\n  return (\n    <Search\n      messages={messages}\n      onDateSelect={(date) => {\n        dispatch(\n          getMessagesByGroupByTimestamp({\n            groupId: group,\n            date,\n            payloadType: { type: \"ALL\", payload: null },\n          })\n        ).then((messages: GroupMessagesOutput) => {\n          const msgs = messages.messagesByGroup[group].map((id: any) => {\n            const content = messages.groupMessagesContents[id];\n\n            return {\n              id: content.groupId,\n              author: {\n                id: content.author,\n              },\n              timestamp: content.timestamp,\n              payload: content.payload,\n              readList: content.readList,\n              replyTo: content.replyTo,\n            };\n          });\n          dispatch(\n            fetchMembers(\n              msgs.map((msg) => msg.author.id),\n              id!\n            )\n          ).then((profiles: { [key: string]: Profile }) => {\n            setMessages(\n              msgs.map((msg) => ({\n                ...msg,\n                author: { ...profiles[msg.author.id] },\n              }))\n            );\n          });\n        });\n      }}\n      prevHref={`/g/${group}`}\n      type=\"group\"\n    ></Search>\n  );\n};\n\nexport default GroupSearch;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport GroupChatContent from \"./GroupChatContent\";\nimport GroupChatDetails from \"./GroupChatDetails\";\nimport GroupPinnedMessages from \"./GroupPinnedMessages\";\nimport GroupSearch from \"./GroupSearch\";\n\nconst GroupChat: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/g/:group\" exact>\n        <GroupChatContent />\n      </Route>\n      <Route path=\"/g/:group/details\" exact>\n        <GroupChatDetails />\n      </Route>\n      <Route path=\"/g/:group/search\" exact>\n        <GroupSearch />\n      </Route>\n      <Route path=\"/g/:group/pinned\" exact>\n        <GroupPinnedMessages />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default GroupChat;\n","import {\n  IonButton,\n  IonButtons,\n  IonHeader,\n  IonIcon,\n  IonMenuButton,\n  IonSearchbar,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { search } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\n\ninterface Props {\n  onChange: (e: CustomEvent) => void;\n  noSearch?: boolean;\n}\n\nconst Toolbar: React.FC<Props> = ({ onChange, noSearch }) => {\n  const [isSearching, setIsSearching] = useState(false);\n  return (\n    <IonHeader>\n      <IonToolbar>\n        {isSearching ? (\n          <IonSearchbar\n            onIonChange={(e) => onChange(e)}\n            showCancelButton=\"always\"\n            debounce={500}\n            onIonCancel={() => setIsSearching(false)}\n          />\n        ) : (\n          <>\n            <IonButtons slot=\"start\">\n              <IonMenuButton />\n            </IonButtons>\n            {!noSearch ? (\n              <IonButtons slot=\"end\">\n                <IonButton onClick={() => setIsSearching(true)}>\n                  <IonIcon icon={search} slot=\"icon-only\" />\n                </IonButton>\n              </IonButtons>\n            ) : null}\n          </>\n        )}\n      </IonToolbar>\n    </IonHeader>\n  );\n};\n\nexport default Toolbar;\n","import { IonFab, IonFabButton, IonIcon } from \"@ionic/react\";\nimport { add } from \"ionicons/icons\";\nimport React from \"react\";\n\ninterface Props {\n  onClick: () => void;\n}\n\nconst AddContactFAB: React.FC<Props> = ({ onClick }) => (\n  <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <IonFabButton onClick={onClick}>\n      <IonIcon icon={add} />\n    </IonFabButton>\n  </IonFab>\n);\n\nexport default AddContactFAB;\n","import { IonHeader, IonSearchbar, IonToolbar } from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\n\ninterface Props {\n  onChange(e: CustomEvent): any;\n  onCancel(): any;\n}\n\nconst AddContactHeader: React.FC<Props> = ({ onChange, onCancel }) => {\n  const intl = useIntl();\n  return (\n    <IonHeader>\n      <IonToolbar>\n        <IonSearchbar\n          placeholder={intl.formatMessage({ id: \"app.contacts.search\" })}\n          showCancelButton=\"always\"\n          onIonChange={onChange}\n          onIonCancel={onCancel}\n          debounce={700}\n        />\n      </IonToolbar>\n    </IonHeader>\n  );\n};\n\nexport default AddContactHeader;\n","import {\n  IonButton,\n  IonButtons,\n  IonIcon,\n  IonItem,\n  IonSpinner,\n} from \"@ionic/react\";\nimport { add } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport AgentIdentifier from \"../../../components/AgentIdentifier\";\nimport { addContact } from \"../../../redux/contacts/actions\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\ninterface Props {\n  contact: Profile;\n  onCompletion(contact: Profile): void;\n}\n\nconst AddContactItem: React.FC<Props> = ({ contact, onCompletion }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const handleOnClick = () => {\n    setIsLoading(true);\n    dispatch(addContact(contact)).then((res: boolean) => {\n      if (res) onCompletion(contact);\n      else setIsLoading(false);\n    });\n  };\n\n  return (\n    <IonItem lines=\"none\">\n      <AgentIdentifier\n        displayAvatar={true}\n        avatar={contact.fields.avatar}\n        nickname={contact.username}\n        id={contact.id}\n      />\n      <IonButtons slot=\"end\">\n        {isLoading ? (\n          <IonSpinner />\n        ) : (\n          <IonButton onClick={handleOnClick}>\n            <IonIcon icon={add}></IonIcon>\n          </IonButton>\n        )}\n      </IonButtons>\n    </IonItem>\n  );\n};\n\nexport default AddContactItem;\n","import { IonItemDivider, IonLabel } from \"@ionic/react\";\nimport React from \"react\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport AddContactItem from \"./AddContactItem\";\n\ninterface Props {\n  index: string;\n  contacts: Profile[];\n  onCompletion(contact: Profile): void;\n}\n\nconst AddContactIndex: React.FC<Props> = ({\n  index,\n  contacts,\n  onCompletion,\n}) => {\n  return (\n    <React.Fragment>\n      <IonItemDivider>\n        <IonLabel>{index}</IonLabel>\n      </IonItemDivider>\n      {contacts.map((contact) => (\n        <AddContactItem\n          key={JSON.stringify(contact.id)}\n          contact={contact}\n          onCompletion={onCompletion}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default AddContactIndex;\n","import { IonContent, IonList, IonModal } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useToast } from \"../../../containers/ToastContainer/context\";\nimport { IndexedContacts, SET_CONTACTS } from \"../../../redux/contacts/types\";\nimport { searchProfiles } from \"../../../redux/profile/actions\";\nimport { Profile, ProfileListType } from \"../../../redux/profile/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { indexContacts, useAppDispatch } from \"../../../utils/helpers\";\nimport styles from \"../style.module.css\";\nimport AddContactHeader from \"./AddContactHeader\";\nimport AddContactIndex from \"./AddContactIndex\";\n\ninterface Props {\n  isOpen: boolean;\n  onCancel: () => void;\n  contacts: ProfileListType;\n}\n\nconst AddContactModal: React.FC<Props> = ({ isOpen, onCancel }) => {\n  const { showToast } = useToast();\n  const intl = useIntl();\n  const contacts = useSelector((state: RootState) => state.contacts.contacts);\n  const [profiles, setProfiles] = useState<Profile[]>([]);\n\n  const dispatch = useAppDispatch();\n\n  const handleOnChange = (searchKey: string) => {\n    if (searchKey.length >= 3) {\n      dispatch(searchProfiles(searchKey)).then((profiles: Profile[]) => {\n        if (profiles) {\n          const filteredProfiles = profiles.filter((profile: Profile) =>\n            profile.username.toLowerCase().includes(searchKey.toLowerCase())\n          );\n          setProfiles(filteredProfiles);\n        }\n      });\n    } else if (searchKey.length > 0 && searchKey.length < 3) {\n      /* add another 300ms to show warning toast */\n      setTimeout(\n        showToast({\n          color: \"warning\",\n          message: intl.formatMessage({\n            id: \"app.contacts.search-nickname-warning\",\n          }),\n        }),\n        300\n      );\n    } else {\n      /* clear search result when string is equal to 0 */\n      setProfiles([]);\n    }\n  };\n\n  let indexedContacts: IndexedContacts = indexContacts(profiles);\n\n  const onCompletion = (contact: Profile) => {\n    showToast({\n      message: intl.formatMessage(\n        { id: \"app.contacts.add-message\" },\n        { name: contact.username }\n      ),\n      color: \"light\",\n      duration: 1000,\n    });\n    dispatch({\n      type: SET_CONTACTS,\n      contacts: { ...contacts },\n    });\n    setProfiles((profiles) =>\n      profiles.filter((profile) => profile.id !== contact.id)\n    );\n  };\n\n  return (\n    <IonModal isOpen={isOpen} onDidDismiss={onCancel}>\n      <AddContactHeader\n        onChange={(e) => handleOnChange(e.detail.value)}\n        onCancel={onCancel}\n      />\n      <IonContent>\n        <IonList className={styles[\"contacts-list\"]}>\n          {Object.keys(indexedContacts).map((char) => {\n            const searchedContacts = indexedContacts[char];\n            return (\n              <AddContactIndex\n                onCompletion={onCompletion}\n                key={char}\n                index={char}\n                contacts={searchedContacts}\n              />\n            );\n          })}\n        </IonList>\n      </IonContent>\n    </IonModal>\n  );\n};\n\nexport default AddContactModal;\n","import { IonIcon, IonText } from \"@ionic/react\";\nimport { sadOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\nconst EmptyContacts: React.FC = () => {\n  const intl = useIntl();\n  return (\n    <div className={styles[\"empty-contacts\"]}>\n      <IonIcon icon={sadOutline} />\n      <IonText className=\"ion-padding ion-margin-bottom\">\n        {intl.formatMessage({ id: \"app.contacts.empty-contact-list\" })}\n      </IonText>\n    </div>\n  );\n};\n\nexport default EmptyContacts;\n","import { IonContent, IonPage } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ContactsList from \"../../components/ContactList\";\nimport Spinner from \"../../components/Spinner\";\nimport Toolbar from \"../../components/Toolbar\";\nimport { fetchMyContacts } from \"../../redux/contacts/actions\";\nimport { RootState } from \"../../redux/types\";\nimport { indexContacts, useAppDispatch } from \"../../utils/helpers\";\nimport AddContactFAB from \"./AddContact/AddContactFAB\";\nimport AddContactModal from \"./AddContact/AddContactModal\";\nimport EmptyContacts from \"./EmptyContacts\";\n\nconst Contacts: React.FC = () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>();\n  const dispatch = useAppDispatch();\n  const contacts = useSelector((state: RootState) => state.contacts.contacts);\n\n  useEffect(() => {\n    setLoading(true);\n    dispatch(fetchMyContacts()).then((res: any) => {\n      setLoading(false);\n    });\n  }, [dispatch]);\n\n  const indexedContacts = indexContacts(\n    Object.values(contacts).filter((contact) =>\n      contact.username.toLowerCase().includes(search.toLowerCase())\n    )\n  );\n\n  return (\n    <IonPage>\n      <Toolbar onChange={(e) => setSearch(e.detail.value!)} />\n      <IonContent>\n        {loading ? (\n          <Spinner name=\"crescent\" />\n        ) : Object.values(contacts).length !== 0 ? (\n          <ContactsList\n            displayMsgBtn={true}\n            contacts={indexedContacts ? indexedContacts : {}}\n          />\n        ) : (\n          <EmptyContacts />\n        )}\n\n        <AddContactModal\n          contacts={contacts}\n          isOpen={isOpen}\n          onCancel={() => setIsOpen(false)}\n        />\n        <AddContactFAB onClick={() => setIsOpen(true)} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Contacts;\n","import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { IonAvatar, IonBadge, IonItem, IonLabel } from \"@ionic/react\";\nimport { peopleCircleOutline, personCircleOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport {\n  Conversation as ConversationDetail,\n  Message,\n} from \"../../redux/commons/types\";\nimport { binaryToUrl } from \"../../utils/helpers\";\nimport AgentIdentifier from \"../AgentIdentifier\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  conversation: ConversationDetail;\n  /* name for p2p is the sender's username, and for group it is the name of the group */\n  myAgentId: string;\n  onClick: () => void; // This onClick is for history.push(`/g/${groupId}`) | history.push(`/u/${name}`);\n}\n\nconst Conversation: React.FC<Props> = ({\n  conversation,\n  myAgentId,\n  onClick,\n}) => {\n  const intl = useIntl();\n\n  const renderMyFileMessage = (latestMessageDetail: Message) =>\n    intl.formatMessage(\n      { id: \"components.conversation.me-file-string\" },\n      { fileName: latestMessageDetail.fileName! }\n    );\n\n  const renderOthersFileMessage = (latestMessageDetail: Message) =>\n    intl.formatMessage(\n      { id: \"components.conversation.other-file-string\" },\n      {\n        fileName: latestMessageDetail.fileName!,\n        /* this is non nullable since no file will be sent if there is no message sent */\n        name: latestMessageDetail.sender!.username,\n      }\n    );\n\n  const renderAvatar = () => {\n    if (conversation.avatar)\n      return <img src={binaryToUrl(conversation.avatar)} alt=\"avatar\" />;\n    else\n      return (\n        <img\n          className={styles.avatar}\n          src={\n            conversation.type === \"group\"\n              ? peopleCircleOutline\n              : personCircleOutline\n          }\n          alt=\"avatar\"\n        />\n      );\n  };\n  return (\n    <IonItem onClick={onClick}>\n      <IonAvatar slot=\"start\">{renderAvatar()}</IonAvatar>\n      <IonLabel>\n        {conversation.type === \"group\" ? (\n          <h2>{conversation.conversationName}</h2>\n        ) : (\n          <div className={styles[\"identifier\"]}>\n            <AgentIdentifier\n              noSpace={true}\n              nickname={conversation.conversationName}\n              id={conversation.id}\n              charToShow={10}\n            />\n          </div>\n        )}\n        {conversation.latestMessage.sender ? (\n          <h3>{conversation.latestMessage.sender.username}</h3>\n        ) : null}\n        <p>\n          {conversation.latestMessage.payloadType === \"TEXT\"\n            ? conversation.latestMessage.textPayload\n            : myAgentId === conversation.latestMessage.sender!.id\n            ? renderMyFileMessage(conversation.latestMessage)\n            : renderOthersFileMessage(conversation.latestMessage)}\n        </p>\n      </IonLabel>\n      {!conversation.badgeCount ? null : conversation.badgeCount > 20 ? (\n        <IonBadge slot=\"\">20+</IonBadge>\n      ) : conversation.badgeCount > 0 ? (\n        <IonBadge slot=\"\">{conversation.badgeCount}</IonBadge>\n      ) : null}\n    </IonItem>\n  );\n};\n\nexport default Conversation;\n","import { ThunkAction } from \"../../types\";\n\nexport const countUnread =\n  (conversant: string): ThunkAction =>\n  (dispatch, getState) => {\n    const { conversations, messages, receipts } = getState().p2pmessages;\n    const conversation = conversations[conversant].messages;\n    let unreadCounter = 0;\n    conversation.forEach((messageID) => {\n      let message = messages[messageID];\n      let receiptIDs = message.receipts;\n      let filteredReceipts = receiptIDs.map((receiptID) => {\n        let receipt = receipts[receiptID];\n        return receipt;\n      });\n      filteredReceipts.sort((a: any, b: any) => {\n        let receiptTimestampA = a.timestamp.getTime();\n        let receiptTimestampB = b.timestamp.getTime();\n        if (receiptTimestampA > receiptTimestampB) return -1;\n        if (receiptTimestampA < receiptTimestampB) return 1;\n        return 0;\n      });\n      let latestReceipt = filteredReceipts[0];\n      if (latestReceipt) {\n        if (latestReceipt.status !== \"read\" && message.author.id === conversant)\n          unreadCounter = unreadCounter + 1;\n      }\n    });\n\n    return unreadCounter;\n  };\n","import { IonIcon, IonText } from \"@ionic/react\";\nimport { sadOutline } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\nconst EmptyConversations = () => {\n  const intl = useIntl();\n  return (\n    <div className={styles[\"empty-conversations\"]}>\n      <IonIcon icon={sadOutline} />\n      <IonText className=\"ion-padding ion-margin-bottom\">\n        {intl.formatMessage({\n          id: \"app.conversations.empty-conversations\",\n        })}\n      </IonText>\n    </div>\n  );\n};\n\nexport default EmptyConversations;\n","import {\n  IonContent,\n  IonFab,\n  IonFabButton,\n  IonIcon,\n  IonList,\n  IonPage,\n} from \"@ionic/react\";\nimport { pencil } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Conversation from \"../../components/Conversation\";\nimport Toolbar from \"../../components/Toolbar\";\nimport {\n  Conversation as ConversationDetail,\n  isTextPayload,\n  Message,\n} from \"../../redux/commons/types\";\nimport { getBadgeCount } from \"../../redux/group/actions\";\nimport { GroupConversationsState } from \"../../redux/group/types\";\nimport { countUnread } from \"../../redux/p2pmessages/actions/countUnread\";\nimport { P2PMessageConversationState } from \"../../redux/p2pmessages/types\";\nimport { RootState } from \"../../redux/types\";\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport EmptyConversations from \"./EmptyConversations\";\nimport styles from \"./style.module.css\";\n\nconst Conversations: React.FC = () => {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n\n  const contacts = useSelector((state: RootState) => state.contacts.contacts);\n  const myProfile = useSelector((state: RootState) => state.profile);\n  const groupsState = useSelector((state: RootState) => state.groups);\n  const p2pState = useSelector((state: RootState) => state.p2pmessages);\n\n  /* Handlers */\n  const handleOnCompose = () => {\n    history.push({\n      pathname: `/compose`,\n      state: { contacts: { ...contacts } },\n    });\n  };\n\n  const handleOnClick = (conversation: ConversationDetail) =>\n    conversation.type === \"group\"\n      ? history.push(`/g/${conversation.id}`)\n      : history.push({\n          pathname: `/u/${conversation.id}`,\n          state: { username: conversation.conversationName },\n        });\n  /*\n    Handle the construction of array of\n    conversation detail merged from P2P and Group conversations\n  */\n  const constructConversations = (\n    groupsState: GroupConversationsState,\n    p2pState: P2PMessageConversationState\n  ) => {\n    let conversationsArray: ConversationDetail[] = [];\n\n    /* code block for p2p logic */\n    if (Object.keys(p2pState.conversations).length > 0) {\n      for (let key in p2pState.conversations) {\n        if (contacts[key] === undefined) continue;\n        /*\n          we are not displaying people who are not in contacts list right now; this will not be undefined atm\n          TODO: may change depending on design implementation for blocked contacts\n          */\n        const conversant = contacts[key];\n\n        // accessing the first index for the latest message\n        // TODO: make sure that this is the latest\n        const latestMessageId = p2pState.conversations[key].messages[0];\n        const latestMessage = p2pState.messages[latestMessageId];\n        let message: Message;\n        let conversation: ConversationDetail | null = null;\n        if (latestMessage) {\n          message = {\n            id: latestMessage.p2pMessageEntryHash,\n            sender: {\n              id: latestMessage.author.id,\n              username:\n                latestMessage.author.id === myProfile.id\n                  ? \"You\"\n                  : conversant.username,\n              fields:\n                latestMessage.author.id === myProfile.id\n                  ? myProfile.fields\n                  : conversant.fields,\n            },\n            payloadType: latestMessage.payload.type,\n            textPayload: isTextPayload(latestMessage.payload)\n              ? latestMessage.payload.payload.payload\n              : undefined,\n            fileName: !isTextPayload(latestMessage.payload)\n              ? latestMessage.payload.fileName\n              : undefined,\n            /* TODO: change to Date format */\n            timestamp: latestMessage.timestamp,\n          };\n          // create input to Conversation component\n          conversation = {\n            type: \"p2p\",\n            id: key,\n            avatar: conversant.fields.avatar\n              ? conversant.fields.avatar\n              : undefined,\n            conversationName: conversant.username,\n            latestMessage: message,\n            badgeCount: dispatch(countUnread(conversant.id)),\n          };\n        } else if (p2pState.errMsgs[key][0]) {\n          const latestErrMessage = p2pState.errMsgs[key][0];\n          message = {\n            id: latestErrMessage.p2pMessageEntryHash,\n            sender: {\n              id: latestErrMessage.author.id,\n              username:\n                latestErrMessage.author.id === myProfile.id\n                  ? \"You\"\n                  : conversant.username,\n              fields:\n                latestErrMessage.author.id === myProfile.id\n                  ? myProfile.fields\n                  : conversant.fields,\n            },\n            payloadType: latestErrMessage.payload.type,\n            textPayload: isTextPayload(latestErrMessage.payload)\n              ? latestErrMessage.payload.payload.payload\n              : undefined,\n            fileName: !isTextPayload(latestErrMessage.payload)\n              ? latestErrMessage.payload.fileName\n              : undefined,\n            /* TODO: change to Date format */\n            timestamp: latestErrMessage.timestamp,\n          };\n          // create input to Conversation component\n          conversation = {\n            type: \"p2p\",\n            id: key,\n            conversationName: conversant.username,\n            latestMessage: message,\n            badgeCount: dispatch(countUnread(conversant.id)),\n          };\n        }\n\n        if (conversation) conversationsArray.push(conversation);\n      }\n    }\n    /* end of code block for p2p logic */\n\n    /* code block for group logic */\n    if (Object.keys(groupsState.conversations).length > 0) {\n      const allGroupMessages = groupsState.messages;\n      const groupMembers = groupsState.members;\n\n      Object.keys(groupsState.conversations).forEach((groupId: string) => {\n        /* \n            TODO: Make sure that the index 0 is the latest message at all times\n            especially when messages are received via signal or fetched\n          */\n        const latestMessageId = groupsState.conversations[groupId].messages[0];\n        const latestMessage = allGroupMessages[latestMessageId];\n        let message: Message;\n        let conversation: ConversationDetail | null = null;\n        if (latestMessage) {\n          message = {\n            id: latestMessage.groupMessageId,\n            sender: groupMembers[latestMessage.author]\n              ? {\n                  id: groupMembers[latestMessage.author].id,\n                  username: groupMembers[latestMessage.author].username,\n                  fields: groupMembers[latestMessage.author].fields,\n                }\n              : {\n                  id: myProfile.id!,\n                  username: myProfile.username!,\n                  fields: myProfile.fields,\n                },\n            payloadType: latestMessage.payload.type,\n            timestamp: latestMessage.timestamp,\n            textPayload: isTextPayload(latestMessage.payload)\n              ? latestMessage.payload.payload.payload\n              : undefined,\n            fileName: !isTextPayload(latestMessage.payload)\n              ? latestMessage.payload.fileName\n              : undefined,\n          };\n          conversation = {\n            id: groupId,\n            type: \"group\",\n            conversationName: groupsState.conversations[groupId].name,\n            ...(groupsState.conversations[groupId].avatar\n              ? {\n                  avatar: groupsState.conversations[groupId].avatar!,\n                }\n              : {}),\n\n            latestMessage: message,\n            // enable this once we have a better implementation of read message\n            badgeCount: dispatch(getBadgeCount(groupId)),\n          };\n        } else if (groupsState.errMsgs[groupId]) {\n          const latestErrMessage = groupsState.errMsgs[groupId][0];\n          message = {\n            id: latestErrMessage.groupMessageId,\n            sender: latestErrMessage.author,\n            payloadType: latestErrMessage.payload.type,\n            timestamp: latestErrMessage.timestamp,\n            textPayload: isTextPayload(latestErrMessage.payload)\n              ? latestErrMessage.payload.payload.payload\n              : undefined,\n            fileName: !isTextPayload(latestErrMessage.payload)\n              ? latestErrMessage.payload.fileName\n              : undefined,\n          };\n          conversation = {\n            id: groupId,\n            type: \"group\",\n            conversationName: groupsState.conversations[groupId].name,\n            latestMessage: message,\n            badgeCount: dispatch(getBadgeCount(groupId)),\n          };\n        } else {\n          // edge case: group was created but no message was sent\n          // and the user refreshed the browser so errMessage disappears too\n          // TODO: remove this section once err messages are cached.\n          message = {\n            id: \"no message\",\n            sender: undefined,\n            payloadType: \"TEXT\",\n            timestamp: new Date(),\n            textPayload: intl.formatMessage({\n              id: \"app.conversations.no-group-messages\",\n            }),\n            fileName: undefined,\n          };\n          conversation = {\n            id: groupId,\n            type: \"group\",\n            conversationName: groupsState.conversations[groupId].name,\n            latestMessage: message,\n            badgeCount: dispatch(getBadgeCount(groupId)),\n          };\n        }\n\n        if (conversation) conversationsArray.push(conversation);\n      });\n    }\n    /* end of code block for group logic */\n\n    /* sort merged p2p and group conversations */\n    conversationsArray.sort((x: ConversationDetail, y: ConversationDetail) => {\n      let timestampX = x.latestMessage.timestamp.valueOf();\n      let timestampY = y.latestMessage.timestamp.valueOf();\n      return timestampX < timestampY ? 1 : -1;\n    });\n\n    return conversationsArray;\n  };\n\n  /* Rederer */\n\n  /* Handle the display of conversations */\n  const renderAllConversation = (conversationsArray: ConversationDetail[]) => {\n    return Object.keys(conversationsArray).length > 0 ? (\n      <IonList className={styles.conversation}>\n        {conversationsArray.map((conversation: ConversationDetail) => (\n          <Conversation\n            key={conversation.id}\n            conversation={conversation}\n            myAgentId={myProfile.id!}\n            onClick={() => handleOnClick(conversation)}\n          />\n        ))}\n      </IonList>\n    ) : (\n      <EmptyConversations />\n    );\n  };\n\n  return (\n    <IonPage>\n      <Toolbar noSearch onChange={() => {}} />\n      <IonContent>\n        {renderAllConversation(constructConversations(groupsState, p2pState))}\n\n        <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n          <IonFabButton onClick={handleOnCompose}>\n            <IonIcon icon={pencil} />\n          </IonFabButton>\n        </IonFab>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Conversations;\n","import {\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n} from \"@ionic/react\";\nimport { chatbox, person } from \"ionicons/icons\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Redirect, Route } from \"react-router\";\nimport Contacts from \"../Contacts\";\nimport Conversations from \"../Conversations\";\nimport styles from \"./style.module.css\";\n\nconst HomeTabBar: React.FC = () => (\n  <IonTabs>\n    <IonRouterOutlet id=\"home\">\n      <Redirect exact path=\"/home\" to=\"/home/messaging\"></Redirect>\n      <Route path=\"/home/messaging\" render={() => <Conversations />} exact />\n      <Route path=\"/home/contacts\" render={() => <Contacts />} exact />\n    </IonRouterOutlet>\n    <IonTabBar slot=\"bottom\" className={styles[\"home-tab-bar\"]}>\n      <IonTabButton tab=\"messaging\" href=\"/home/messaging\">\n        <IonIcon icon={chatbox} />\n        <IonLabel>\n          <FormattedMessage id=\"app.home.messaging-tab-bar\" />\n        </IonLabel>\n      </IonTabButton>\n      <IonTabButton tab=\"contacts\" href=\"/home/contacts\">\n        <IonIcon icon={person} />\n        <IonLabel>\n          <FormattedMessage id=\"app.home.contacts-tab-bar\" />\n        </IonLabel>\n      </IonTabButton>\n    </IonTabBar>\n  </IonTabs>\n);\n\nexport default HomeTabBar;\n","import { createContext, useContext } from \"react\";\nimport { ProfileListType } from \"../../redux/profile/types\";\n\nexport const ContactsContext = createContext<\n  [\n    ProfileListType,\n    React.Dispatch<React.SetStateAction<ProfileListType>>,\n    ProfileListType,\n    React.Dispatch<React.SetStateAction<ProfileListType>>\n  ]\n>([{}, () => {}, {}, () => {}]);\n\nexport const useContacts = () => {\n  const context = useContext(ContactsContext);\n  if (!context) throw Error(\"No context found\");\n  return context;\n};\n","import { IonItem } from \"@ionic/react\";\nimport React from \"react\";\nimport AgentIdentifier from \"../../../components/AgentIdentifier\";\nimport { Profile } from \"../../../redux/profile/types\";\n\ninterface Props {\n  contact: Profile;\n  onClick: (contact: Profile) => any;\n}\n\nconst ContactItem: React.FC<Props> = ({ contact, onClick }) => {\n  const handleOnClick = () => onClick(contact);\n\n  return (\n    <IonItem onClick={handleOnClick}>\n      <AgentIdentifier\n        displayAvatar={true}\n        avatar={contact.fields.avatar}\n        nickname={contact.username}\n        id={contact.id}\n      />\n    </IonItem>\n  );\n};\n\nexport default ContactItem;\n","import { IonItemDivider, IonLabel } from \"@ionic/react\";\nimport React from \"react\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { useContacts } from \"../context\";\nimport ContactItem from \"./ContactItem\";\n\ninterface Props {\n  char: string;\n  contacts: Profile[];\n}\n\nconst IndexSection: React.FC<Props> = ({ char, contacts }) => {\n  const setContacts = useContacts()[1];\n  const setSelectedContacts = useContacts()[3];\n\n  const handleOnClick = (contact: Profile) => {\n    setSelectedContacts((currContacts) => {\n      currContacts[contact.id] = contact;\n      return currContacts;\n    });\n    setContacts((currContacts) => {\n      const newContacts = {...currContacts}\n      delete newContacts[contact.id];\n      return newContacts;\n    });\n  };\n\n  return (\n    <React.Fragment key={char}>\n      <IonItemDivider>\n        <IonLabel>{char}</IonLabel>\n      </IonItemDivider>\n      {contacts.map((contact) => (\n        <ContactItem\n          key={JSON.stringify(contact)}\n          contact={contact}\n          onClick={handleOnClick}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default IndexSection;\n","import { IonList } from \"@ionic/react\";\nimport React from \"react\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { indexContacts } from \"../../../utils/helpers\";\nimport styles from \"../style.module.css\";\nimport IndexSection from \"./IndexSection\";\n\ninterface Props {\n  contacts: Profile[];\n}\n\nconst ContactList: React.FC<Props> = ({ contacts }) => {\n  const indexedContacts = indexContacts(Object.values(contacts));\n\n  return (\n    <IonList className={styles[\"contacts-list\"]}>\n      {Object.keys(indexedContacts).map((char) => {\n        const perCharContacts = indexedContacts[char];\n        return (\n          <IndexSection key={char} char={char} contacts={perCharContacts} />\n        );\n      })}\n    </IonList>\n  );\n};\n\nexport default ContactList;\n","import {\n  IonButton,\n  IonButtons,\n  IonHeader,\n  IonIcon,\n  IonTitle,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBackSharp } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useHistory } from \"react-router\";\nimport styles from \"./style.module.css\";\n\nconst NewConversationHeader = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  return (\n    <IonHeader className={styles.header}>\n      <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonButton\n            onClick={() => history.push({ pathname: `/home` })}\n            className=\"ion-no-padding\"\n          >\n            <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n          </IonButton>\n        </IonButtons>\n        <IonTitle>\n          {intl.formatMessage({ id: \"app.new-conversation.header-title\" })}\n        </IonTitle>\n      </IonToolbar>\n    </IonHeader>\n  );\n};\n\nexport default NewConversationHeader;\n","import { IonChip, IonIcon, IonInput, IonLabel } from \"@ionic/react\";\nimport { close } from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Profile, ProfileListType } from \"../../../redux/profile/types\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  contacts: ProfileListType;\n  onCloseButtonPress(contact: Profile): any;\n  onSearch(search: string): any;\n}\n\nconst SelectedContactsHeader: React.FC<Props> = ({\n  contacts,\n  onCloseButtonPress,\n  onSearch,\n}) => {\n  const [search, setSearch] = useState(\"\");\n  const intl = useIntl();\n\n  useEffect(() => {\n    onSearch(search);\n  }, [search, onSearch]);\n  return (\n    <div className={`${styles.recipients} ion-padding`}>\n      <IonLabel className={styles.to}>\n        {intl.formatMessage({ id: \"app.new-conversation.to\" })}:\n      </IonLabel>\n      {Object.values(contacts).map((contact) => (\n        <IonChip key={JSON.stringify(contact)}>\n          <IonLabel>{contact.username}</IonLabel>\n          <IonIcon icon={close} onClick={() => onCloseButtonPress(contact)} />\n        </IonChip>\n      ))}\n      <IonInput\n        type=\"text\"\n        placeholder={intl.formatMessage({\n          id: \"app.new-conversation.search-placeholder\",\n        })}\n        onIonChange={(e) => setSearch(e.detail.value!)}\n        value={search}\n        debounce={500}\n      ></IonInput>\n    </div>\n  );\n};\n\nexport default SelectedContactsHeader;\n","import {\n  IonContent,\n  IonIcon,\n  IonLoading,\n  IonPage,\n  IonText,\n} from \"@ionic/react\";\nimport { warningOutline } from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useHistory, useLocation } from \"react-router\";\nimport MessageInput, {\n  FileContent,\n  MessageInputOnSendParams,\n} from \"../../components/MessageInput\";\nimport { useToast } from \"../../containers/ToastContainer/context\";\nimport { FilePayloadInput } from \"../../redux/commons/types\";\nimport { sendInitialGroupMessage } from \"../../redux/group/actions\";\nimport { GroupConversation } from \"../../redux/group/types\";\nimport { sendMessage } from \"../../redux/p2pmessages/actions/sendMessage\";\nimport { setErrorMessage } from \"../../redux/p2pmessages/actions/setErrMessage\";\nimport { Profile, ProfileListType } from \"../../redux/profile/types\";\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport ContactList from \"./ContactList\";\nimport { ContactsContext } from \"./context\";\nimport NewConversationHeader from \"./NewConversationHeader\";\nimport SelectedContactsHeader from \"./SelectedContactsHeader\";\nimport styles from \"./style.module.css\";\n\ninterface StateProps {\n  contacts: ProfileListType;\n}\n\nconst NewConversation: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation<StateProps>();\n  const { showErrorToast } = useToast();\n\n  /* Local States */\n  const [contacts, setContacts] = useState<ProfileListType>({});\n  const [selectedContacts, setSelectedContacts] = useState<ProfileListType>({});\n  const [search, setSearch] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [files, setFiles] = useState<FileContent[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  /* Handlers */\n  const handleOnRemove = (contact: Profile) => {\n    setSelectedContacts((currContacts) => {\n      delete currContacts[contact.id];\n      return { ...currContacts };\n    });\n    setContacts((currContacts) => {\n      currContacts[contact.id] = contact;\n      return { ...currContacts };\n    });\n  };\n\n  const handleOnSend = (opt?: MessageInputOnSendParams) => {\n    const contacts = Object.values(selectedContacts);\n    let { message: message2 } = { ...opt };\n\n    if (contacts.length === 1) {\n      if (message2 && message2 !== \"\") {\n        setIsLoading(true);\n        dispatch(sendMessage(contacts[0].id, message2, \"TEXT\", undefined)).then(\n          (res: boolean) => {\n            if (!res && files.length <= 0) {\n              setIsLoading(false);\n              dispatch(\n                setErrorMessage(contacts[0].id, message, \"TEXT\", undefined)\n              );\n              history.push({\n                pathname: `/u/${contacts[0].id}`,\n                state: { username: contacts[0].username },\n              });\n            } else if (!res) {\n              dispatch(\n                setErrorMessage(contacts[0].id, message, \"TEXT\", undefined)\n              );\n            }\n            if (files.length <= 0 && res === true) {\n              setIsLoading(false);\n              history.push({\n                pathname: `/u/${contacts[0].id}`,\n                state: { username: contacts[0].username },\n              });\n            } else if (files.length) {\n              files.forEach((file) => {\n                dispatch(\n                  sendMessage(contacts[0].id, message, \"FILE\", undefined, file)\n                ).then((res: boolean) => {\n                  if (res === true) {\n                    setIsLoading(false);\n                    history.push({\n                      pathname: `/u/${contacts[0].id}`,\n                      state: { username: contacts[0].username },\n                    });\n                  } else {\n                    dispatch(\n                      setErrorMessage(\n                        contacts[0].id,\n                        message,\n                        \"FILE\",\n                        undefined,\n                        file\n                      )\n                    );\n                    setIsLoading(false);\n                    history.push({\n                      pathname: `/u/${contacts[0].id}`,\n                      state: { username: contacts[0].username },\n                    });\n                  }\n                });\n              });\n            }\n          }\n        );\n      }\n\n      if (message === \"\" && files.length) {\n        files.forEach((file) => {\n          setIsLoading(true);\n          dispatch(\n            sendMessage(contacts[0].id, message, \"FILE\", undefined, file)\n          ).then((res: boolean) => {\n            setIsLoading(false);\n            if (res === true) {\n              history.push({\n                pathname: `/u/${contacts[0].id}`,\n                state: { username: contacts[0].username },\n              });\n            } else {\n              dispatch(\n                setErrorMessage(\n                  contacts[0].id,\n                  message,\n                  \"FILE\",\n                  undefined,\n                  file\n                )\n              );\n              setIsLoading(false);\n              history.push({\n                pathname: `/u/${contacts[0].id}`,\n                state: { username: contacts[0].username },\n              });\n            }\n          });\n        });\n      }\n    } else if (contacts.length > 1) {\n      /* create a Group and send the initial message */\n      setIsLoading(true);\n      let fileInputs: FilePayloadInput[] = files.map((file: any) => {\n        let filePayloadInput: FilePayloadInput = {\n          type: \"FILE\",\n          payload: {\n            metadata: {\n              fileName: file.metadata.fileName,\n              fileSize: file.metadata.fileSize,\n              fileType: file.metadata.fileType,\n            },\n            fileType: file.fileType,\n            fileBytes: file.fileBytes,\n          },\n        };\n        return filePayloadInput;\n      });\n      dispatch(\n        sendInitialGroupMessage(\n          contacts,\n          message2 ? message2 : message,\n          fileInputs\n        )\n      ).then(\n        (\n          res: { groupResult: GroupConversation; messageResults: any[] } | false\n        ) => {\n          setIsLoading(false);\n          if (res !== false) {\n            history.push(`/g/${res.groupResult.originalGroupId}`);\n          }\n        }\n      );\n    } else {\n      showErrorToast({\n        message: intl.formatMessage({\n          id: \"app.new-conversation.no-contacts-toast\",\n        }),\n      });\n    }\n  };\n\n  /* Effects */\n  useEffect(() => {\n    setSearch(\"\");\n  }, [contacts, selectedContacts]);\n\n  useEffect(() => {\n    if (location.state !== undefined) setContacts(location.state.contacts);\n    return () => setContacts({});\n  }, [location.state]);\n\n  const renderP2PWarning = () => {\n    return (\n      <div className={styles[\"warning\"]}>\n        <IonIcon\n          icon={warningOutline}\n          color=\"warning\"\n          className={styles[\"warning-icon\"]}\n        />\n        <IonText color=\"warning\">\n          Currently, p2p message only gets sent when the receiver is online\n        </IonText>\n      </div>\n    );\n  };\n\n  return (\n    <ContactsContext.Provider\n      value={[contacts, setContacts, selectedContacts, setSelectedContacts]}\n    >\n      <IonPage>\n        <IonLoading isOpen={isLoading} />\n        <NewConversationHeader />\n\n        <IonContent className={styles[\"list\"]}>\n          <SelectedContactsHeader\n            contacts={selectedContacts}\n            onCloseButtonPress={handleOnRemove}\n            onSearch={setSearch}\n          />\n          <ContactList\n            contacts={Object.values(contacts).filter((a) =>\n              a.username.includes(search)\n            )}\n          />\n        </IonContent>\n        {Object.values(selectedContacts).length === 1\n          ? renderP2PWarning()\n          : null}\n        <MessageInput\n          onSend={handleOnSend}\n          onChange={(message) => setMessage(message)}\n          onFileSelect={(files) => setFiles(files)}\n        />\n      </IonPage>\n    </ContactsContext.Provider>\n  );\n};\n\nexport default NewConversation;\n","import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { binaryToUrl } from \"../../../utils/helpers\";\nimport { ThunkAction } from \"../../types\";\nimport { ProfileActionTypes, SET_PROFILE } from \"../types\";\n\nexport const updateAvatar =\n  (avatar: Uint8Array): ThunkAction =>\n  async (dispatch, getState, { getAgentId, callZome }) => {\n    const myAgentId = await getAgentId();\n    const { username, fields } = getState().profile;\n    /* assume that getAgentId() is non-nullable */\n    const myAgentIdB64 = serializeHash(myAgentId!);\n    const serializedAvatar = serializeHash(avatar);\n\n    const updatedFields = { ...fields, avatar: serializedAvatar };\n\n    await callZome({\n      zomeName: ZOMES.PROFILES,\n      fnName: FUNCTIONS[ZOMES.PROFILES].UPDATE_PROFILE,\n      payload: {\n        nickname: username,\n        fields: updatedFields,\n      },\n    });\n\n    dispatch<ProfileActionTypes>({\n      type: SET_PROFILE,\n      id: myAgentIdB64,\n      /* assert that nickname is non-nullable */\n      nickname: username!,\n      fields: { ...updatedFields, avatar: serializedAvatar },\n    });\n  };\n\nexport default updateAvatar;\n","import { IonIcon, IonItem, IonLabel, IonList, IonPopover } from \"@ionic/react\";\nimport {\n  banOutline,\n  personAddOutline,\n  personRemoveOutline,\n} from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport {\n  addContact,\n  blockContact,\n  removeContact,\n  unblockContact,\n} from \"../../../redux/contacts/actions\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  popover: {\n    isVisible: boolean;\n    event: Event | undefined;\n  };\n  dismiss: () => any;\n  profile: Profile;\n}\n\nconst ProfilePopover: React.FC<Props> = ({ popover, dismiss, profile }) => {\n  const [isContact, setIsContact] = useState(false);\n  const [isBlocked, setIsBlocked] = useState(false);\n  const stringifiedId = profile.id;\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n  const username = useSelector((state: RootState) => state.profile.username);\n\n  const { contacts, blocked } = useSelector(\n    (state: RootState) => state.contacts\n  );\n\n  useEffect(() => {\n    setIsContact(stringifiedId in contacts);\n    setIsBlocked(stringifiedId in blocked);\n  }, [contacts, blocked, stringifiedId]);\n\n  const add = () => {\n    dispatch(addContact(profile)).then((res: boolean) => {\n      setIsContact(res);\n    });\n  };\n\n  const remove = () => {\n    dispatch(removeContact(profile)).then((res: boolean) => {\n      setIsContact(!res);\n    });\n  };\n\n  const block = () => {\n    dispatch(blockContact(profile)).then((res: boolean) => {\n      setIsBlocked(res);\n    });\n  };\n\n  const unblock = () => {\n    dispatch(unblockContact(profile)).then((res: boolean) => {\n      setIsBlocked(!res);\n    });\n  };\n\n  return (\n    <IonPopover\n      {...(popover.event ? { event: popover.event as Event } : {})}\n      isOpen={popover.isVisible}\n      onDidDismiss={dismiss}\n    >\n      <IonList className={`${styles[\"popover-list\"]}`}>\n        {!isBlocked && isContact ? (\n          <IonItem onClick={remove}>\n            <IonIcon icon={personRemoveOutline} />\n            <IonLabel className=\"ion-padding-start\">\n              {intl.formatMessage({ id: \"app.contacts.remove\" })}\n            </IonLabel>\n          </IonItem>\n        ) : (\n          <IonItem disabled={isBlocked} onClick={add}>\n            <IonIcon icon={personAddOutline} />\n            <IonLabel className=\"ion-padding-start\">\n              {intl.formatMessage({ id: \"app.contacts.add\" })}\n            </IonLabel>\n          </IonItem>\n        )}\n        {username !== profile.username ? (\n          isBlocked ? (\n            <IonItem onClick={unblock}>\n              <IonIcon icon={banOutline}></IonIcon>\n              <IonLabel className=\"ion-padding-start\">\n                {intl.formatMessage({ id: \"app.contacts.unblock\" })}\n              </IonLabel>\n            </IonItem>\n          ) : (\n            <IonItem onClick={block}>\n              <IonIcon icon={banOutline}></IonIcon>\n              <IonLabel className=\"ion-padding-start\">\n                {intl.formatMessage({ id: \"app.contacts.block\" })}\n              </IonLabel>\n            </IonItem>\n          )\n        ) : null}\n      </IonList>\n    </IonPopover>\n  );\n};\n\nexport default ProfilePopover;\n","import { IonButton, IonButtons, IonIcon } from \"@ionic/react\";\nimport { ellipsisVertical } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport { Profile } from \"../../../redux/profile/types\";\nimport ProfilePopover from \"../ProfilePopover\";\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileMenuItems: React.FC<Props> = ({ profile }) => {\n  const [popover, setPopover] = useState<{\n    isVisible: boolean;\n    event: Event | undefined;\n  }>({ isVisible: false, event: undefined });\n  const handleOnClick = (event: any) => {\n    event.persist();\n    setPopover({ isVisible: true, event });\n  };\n\n  const dismiss = () => setPopover({ isVisible: false, event: undefined });\n  return (\n    <>\n      <IonButtons slot=\"end\">\n        {/* <IonButton>\n          <IonIcon icon={shieldHalf}></IonIcon>\n        </IonButton> */}\n        <IonButton onClick={handleOnClick}>\n          <IonIcon icon={ellipsisVertical}></IonIcon>\n        </IonButton>\n      </IonButtons>\n      <ProfilePopover\n        profile={profile}\n        popover={popover}\n        dismiss={dismiss}\n      ></ProfilePopover>\n    </>\n  );\n};\n\nexport default ProfileMenuItems;\n","import {\n  IonButton,\n  IonButtons,\n  IonHeader,\n  IonIcon,\n  IonPage,\n  IonText,\n  IonTitle,\n  IonToolbar,\n  useIonModal,\n} from \"@ionic/react\";\nimport {\n  arrowBackSharp,\n  imageOutline,\n  personCircleOutline,\n} from \"ionicons/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport Identicon from \"../../components/Identicon\";\nimport ImageCropper from \"../../components/ImageCropper\";\nimport ProfileInfo from \"../../components/ProfileInfo\";\nimport updateAvatar from \"../../redux/profile/actions/updateAvatar\";\nimport { Profile as ProfileType } from \"../../redux/profile/types\";\nimport { RootState } from \"../../redux/types\";\nimport { binaryToUrl, useAppDispatch } from \"../../utils/helpers\";\nimport ProfileMenuItems from \"./ProfileMenuItems\";\nimport styles from \"./style.module.css\";\n\ninterface LocationProps {\n  prev: string;\n  profile: ProfileType;\n}\n\nconst Profile: React.FC = () => {\n  const _isMounted = useRef(true);\n  const { state } = useLocation<LocationProps>();\n  const currProfile = useSelector((state: RootState) => state.profile);\n  const history = useHistory();\n  const [profile, setProfile] = useState<null | ProfileType>(null);\n  const [binary, setBinary] = useState<Uint8Array | null>(null);\n  const dispatch = useAppDispatch();\n\n  const onDismiss = () => {\n    setBinary(null);\n    dismiss();\n  };\n\n  const decodeSrc = () => {\n    const decoder = new TextDecoder();\n\n    return binary ? decoder.decode(binary) : \"\";\n  };\n  const [present, dismiss] = useIonModal(ImageCropper, {\n    src: decodeSrc(),\n    prevPath: \"/\",\n    dismiss: onDismiss,\n    onComplete: (binary: Uint8Array) => {\n      if (binary) {\n        const blob = new Blob([binary], { type: \"image/jpeg\" });\n        dispatch(updateAvatar(binary));\n        img.current!.src = URL.createObjectURL(blob);\n        // setBinary(binary);\n      }\n    },\n  });\n  useEffect(() => {\n    if (binary) present({ cssClass: `cropper ${styles.modal}` });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [binary]);\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    _isMounted.current = true;\n    return () => {\n      _isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (state?.profile) setProfile(state?.profile);\n  }, [state?.profile]);\n\n  useEffect(() => {\n    if (\n      currProfile.id &&\n      currProfile.username &&\n      currProfile.id === state.profile.id\n    )\n      setProfile({\n        id: currProfile.id!,\n        username: currProfile.username,\n        fields: currProfile.fields,\n      });\n  }, [currProfile, state.profile.id]);\n\n  const file = useRef<HTMLInputElement>(null);\n  const img = useRef<HTMLImageElement>(null);\n  const intl = useIntl();\n\n  const handleOnFileChange = () => {\n    Array.from(file.current ? file.current.files! : new FileList()).forEach(\n      (file) => {\n        file.arrayBuffer().then((arrBuffer) => {\n          const fileSize = file.size;\n          const fileName = file.name;\n          // 15mb = 15728640b, file.size is of type bytes\n          if (fileSize < 15728640) {\n            const encoder = new TextEncoder();\n            const reader = new FileReader();\n\n            reader.readAsDataURL(file);\n            reader.onload = (readerEvent) => {\n              const encoded = encoder.encode(\n                readerEvent.target?.result as string\n              );\n\n              setBinary(encoded);\n            };\n          }\n        });\n      }\n    );\n  };\n\n  const renderAvatar = () => {\n    if (profile) {\n      if (profile.id === currProfile.id) {\n        return (\n          <div className={styles[\"avatar-content\"]}>\n            <div className={styles[\"avatar\"]}>\n              <div className={styles[\"image-container\"]}>\n                <img\n                  ref={img}\n                  alt={profile.username}\n                  src={\n                    profile.fields.avatar\n                      ? binaryToUrl(profile.fields.avatar)\n                      : personCircleOutline\n                  }\n                  style={{\n                    display: profile.fields.avatar ? \"block\" : \"none\",\n                  }}\n                />\n\n                {profile.fields.avatar ? null : (\n                  <Identicon size={100} hash={profile.id}></Identicon>\n                )}\n              </div>\n              <div\n                onClick={() => file.current?.click()}\n                className={styles.overlay}\n              >\n                <IonText className=\"ion-text-center\">\n                  {intl.formatMessage({\n                    id: \"app.group-chat.change-avatar\",\n                  })}\n                </IonText>\n              </div>\n            </div>\n            <div className={styles[\"icon-overlay\"]}>\n              <IonIcon size=\"large\" icon={imageOutline}></IonIcon>\n            </div>\n            <input\n              ref={file}\n              type=\"file\"\n              hidden\n              accept=\"image/png, image/jpeg\"\n              onChange={handleOnFileChange}\n            />\n          </div>\n        );\n      } else {\n        return (\n          <div className={styles[\"avatar-content\"]}>\n            <div className={styles[\"image-container\"]}>\n              <img\n                ref={img}\n                alt={profile.username}\n                src={\n                  profile.fields.avatar\n                    ? binaryToUrl(profile.fields.avatar)\n                    : personCircleOutline\n                }\n                style={{\n                  display: profile.fields.avatar ? \"block\" : \"none\",\n                }}\n              />\n\n              {profile.fields.avatar ? null : (\n                <Identicon size={100} hash={profile.id}></Identicon>\n              )}\n            </div>\n          </div>\n        );\n      }\n    }\n    return null;\n  };\n\n  return (\n    <IonPage>\n      <IonHeader className={styles.header}>\n        <IonToolbar>\n          <IonButtons>\n            <IonButton\n              onClick={() =>\n                history.push({\n                  pathname: state?.prev ? state.prev : \"/home/contacts\",\n                })\n              }\n              className=\"ion-no-padding\"\n            >\n              <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n            </IonButton>\n          </IonButtons>\n          {profile ? <ProfileMenuItems profile={profile} /> : null}\n        </IonToolbar>\n\n        <div className={styles[\"profile-picture-toolbar\"]}>\n          <div className={styles[\"toolbar-container\"]}>{renderAvatar()}</div>\n        </div>\n        <IonToolbar className={styles[\"profile-toolbar\"]}>\n          <IonTitle className={styles[\"nickname\"]}>\n            {profile ? profile.username : \"\"}\n          </IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <ProfileInfo id={state.profile.id} nickname={state.profile.username} />\n    </IonPage>\n  );\n};\n\nexport default Profile;\n","import { AnyAction } from \"redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { RootState } from \"../../types\";\nimport { SET_LANGUAGE } from \"../types\";\n\nconst setLanguage = (language: string): any => {\n  return function (dispatch: ThunkDispatch<RootState, any, AnyAction>) {\n    dispatch({\n      type: SET_LANGUAGE,\n      language,\n    });\n  };\n};\n\nexport default setLanguage;\n","import {\n  IonItem,\n  IonList,\n  IonListHeader,\n  IonSelect,\n  IonSelectOption,\n} from \"@ionic/react\";\n\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { setLanguage } from \"../../../redux/language/actions\";\nimport { Languages } from \"../../../redux/language/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\nconst languages: Languages[] = [\n  { language: \"English\", code: \"en\" },\n  { language: \"日本語\", code: \"jp\" },\n];\n\nconst LanguageDropdown: React.FC = () => {\n  const intl = useIntl();\n  const selectedLanguage = useSelector(\n    (state: RootState) => state.language.language\n  );\n\n  const selected = languages.find(\n    (language) => language.code === selectedLanguage\n  );\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  return (\n    <IonList>\n      <IonListHeader>\n        {intl.formatMessage({ id: \"app.settings.language-label\" })}\n      </IonListHeader>\n      <IonItem>\n        <IonSelect\n          onIonChange={(value) => {\n            dispatch(setLanguage(value.detail.value));\n            history.push(\"/\");\n          }}\n          slot=\"end\"\n          value={selected!.code}\n        >\n          {languages.map((language) => (\n            <IonSelectOption key={language.code} value={language.code}>\n              {language.language}\n            </IonSelectOption>\n          ))}\n        </IonSelect>\n      </IonItem>\n    </IonList>\n  );\n};\n\nexport default LanguageDropdown;\n","import { FUNCTIONS, ZOMES } from \"../../../connection/types\";\nimport { ThunkAction } from \"../../types\";\nimport { PreferenceParameter, SET_PREFERENCE } from \"../types\";\n\nexport const setPreference =\n  (preference: PreferenceParameter): ThunkAction =>\n  async (dispatch, _getState, { callZome }) => {\n    const keys = Object.keys(preference).map<any>((key) => ({\n      [key]: preference[key],\n    }));\n\n    const res = await callZome({\n      zomeName: ZOMES.PREFERENCE,\n      fnName: FUNCTIONS[ZOMES.PREFERENCE].SET_PREFERENCE,\n      payload: Object.assign({}, ...keys),\n    });\n\n    dispatch({\n      type: SET_PREFERENCE,\n      preference: {\n        readReceipt: res.readReceipt,\n        typingIndicator: res.typingIndicator,\n      },\n    });\n  };\n","import {\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonToggle,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { setPreference } from \"../../../redux/preference/actions\";\nimport { RootState } from \"../../../redux/types\";\nimport { useAppDispatch } from \"../../../utils/helpers\";\n\nconst Preference: React.FC = () => {\n  const { typingIndicator, readReceipt } = useSelector(\n    (state: RootState) => state.preference\n  );\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n\n  const handleReadChange = () =>\n    dispatch(setPreference({ readReceipt: !readReceipt }));\n\n  const handleTypingChange = () =>\n    dispatch(setPreference({ typingIndicator: !typingIndicator }));\n\n  return (\n    <IonList>\n      <IonListHeader>\n        <IonLabel>\n          <h1>{intl.formatMessage({ id: \"app.settings.preference-label\" })}</h1>\n        </IonLabel>\n      </IonListHeader>\n      <IonItem>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.settings.typing-indicator-label\" })}\n        </IonLabel>\n        <IonToggle checked={typingIndicator} onIonChange={handleTypingChange} />\n      </IonItem>\n      <IonItem>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.settings.read-receipt-label\" })}\n        </IonLabel>\n        <IonToggle checked={readReceipt} onIonChange={handleReadChange} />\n      </IonItem>\n    </IonList>\n  );\n};\n\nexport default Preference;\n","import {\n  IonButton,\n  IonButtons,\n  IonHeader,\n  IonIcon,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBackSharp } from \"ionicons/icons\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst SettingsHeader: React.FC = () => {\n  const history = useHistory();\n  return (\n    <IonHeader>\n      <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonButton\n            onClick={() => history.push({ pathname: `/home` })}\n            className=\"ion-no-padding\"\n          >\n            <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n          </IonButton>\n        </IonButtons>\n      </IonToolbar>\n    </IonHeader>\n  );\n};\n\nexport default SettingsHeader;\n","import { IonContent, IonPage } from \"@ionic/react\";\nimport React from \"react\";\nimport LanguageDropdown from \"./LanguageDropdown\";\nimport Preference from \"./Preference\";\nimport SettingsHeader from \"./SettingsHeader\";\nimport styles from \"./style.module.css\";\n\nconst Settings: React.FC = () => {\n  return (\n    <IonPage>\n      <SettingsHeader />\n      <IonContent className={styles[\"settings-list\"]}>\n        <Preference />\n        <LanguageDropdown />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Settings;\n","import { IonRouterOutlet, IonSplitPane } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport Menu from \"../../components/Menu\";\nimport Spinner from \"../../components/Spinner\";\nimport { getLatestData } from \"../../redux/commons/actions\";\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport Blocked from \"../Blocked\";\nimport Chat from \"../Chat\";\nimport GroupChat from \"../GroupChat\";\nimport Home from \"../Home\";\nimport NewConversation from \"../NewConversation\";\nimport Profile from \"../Profile\";\nimport Settings from \"../Settings\";\n\nconst Authenticated: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(getLatestData()).then((res: any) => setLoading(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return !loading ? (\n    <IonSplitPane contentId=\"main\">\n      <Menu />\n      <IonRouterOutlet id=\"main\">\n        <Switch>\n          <Route path=\"/home\" render={() => <Home />} />\n          <Route path=\"/compose\" exact component={NewConversation} />\n          <Route path=\"/settings\" exact component={Settings} />\n          <Route path=\"/g/:group\" component={GroupChat} />\n          <Route path=\"/u/:id\" component={Chat} />\n\n          <Route path=\"/p/:id\" exact component={Profile} />\n          {/* <Route path=\"/test\" exact component={GroupChat} /> */}\n\n          <Route path=\"/blocked\" exact component={Blocked} />\n\n          <Redirect from=\"/\" to=\"/home\" />\n        </Switch>\n      </IonRouterOutlet>\n    </IonSplitPane>\n  ) : (\n    <Spinner />\n  );\n};\n\nexport default Authenticated;\n","import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport { FUNCTIONS, ZOMES } from \"../../connection/types\";\nimport { binaryToUrl, timestampToDate } from \"../../utils/helpers\";\nimport { SET_BLOCKED, SET_CONTACTS } from \"../contacts/types\";\nimport { pushError } from \"../error/actions\";\nimport { convertFetchedResToGroupMessagesOutput } from \"../group/actions/helpers\";\nimport {\n  GroupConversation,\n  GroupMessagesOutput,\n  SetLatestGroupState,\n  SET_LATEST_GROUP_STATE,\n} from \"../group/types\";\nimport { transformZomeDataToUIData } from \"../p2pmessages/actions/helpers/transformZomeDateToUIData\";\nimport { setMessages } from \"../p2pmessages/actions/setMessages\";\nimport { SET_PREFERENCE } from \"../preference/types\";\nimport { Profile, ProfileActionTypes, SET_PROFILE } from \"../profile/types\";\nimport { ThunkAction } from \"../types\";\n\nexport const getLatestData =\n  (): ThunkAction =>\n  async (dispatch, getState, { callZome, getAgentId }) => {\n    try {\n      // TODO: error handling\n      const latestData = await callZome({\n        zomeName: ZOMES.AGGREGATOR,\n        fnName: FUNCTIONS[ZOMES.AGGREGATOR].RETRIEVE_LATEST_DATA,\n      });\n\n      const myAgentId = await getAgentId();\n      /* assume that getAgentId() is non-nullable */\n      const myAgentIdB64 = serializeHash(myAgentId!);\n\n      dispatch<ProfileActionTypes>({\n        type: SET_PROFILE,\n        id: myAgentIdB64,\n        nickname: latestData.userInfo.profile.nickname,\n        fields: latestData.userInfo.profile.fields.avatar\n          ? { avatar: latestData.userInfo.profile.fields.avatar }\n          : {},\n      });\n\n      let contacts: { [key: string]: Profile } = {};\n      let blocked: { [key: string]: Profile } = {};\n      latestData.addedContacts.forEach((agentProfile: any) => {\n        const agentId = serializeHash(agentProfile.agentPubKey);\n        contacts[agentId] = {\n          id: agentId,\n          username: agentProfile.profile.nickname,\n          fields: agentProfile.profile.fields.avatar\n            ? {\n                avatar: agentProfile.profile.fields.avatar,\n              }\n            : {},\n        };\n      });\n      if (latestData.blockedContacts)\n        latestData.blockedContacts.forEach((agentProfile: any) => {\n          const agentId = serializeHash(agentProfile.agentPubKey);\n          blocked[agentId] = {\n            id: agentId,\n            username: agentProfile.profile.nickname,\n            fields: agentProfile.profile.fields.avatar\n              ? {\n                  avatar: agentProfile.profile.fields.avatar,\n                }\n              : {},\n          };\n        });\n\n      dispatch({\n        type: SET_CONTACTS,\n        contacts,\n      });\n\n      dispatch({\n        type: SET_BLOCKED,\n        blocked,\n      });\n\n      // TODO: store per agent and group prefenrece as well\n      dispatch({\n        type: SET_PREFERENCE,\n        preference: {\n          readReceipt: latestData.globalPreference.readReceipt,\n          typingIndicator: latestData.globalPreference.typingIndicator,\n        },\n      });\n      const groupMessagesOutput: GroupMessagesOutput =\n        convertFetchedResToGroupMessagesOutput(latestData.latestGroupMessages);\n\n      const groups: GroupConversation[] = latestData.groups.map(\n        (group: any): GroupConversation => ({\n          originalGroupId: serializeHash(group.groupId),\n          originalGroupRevisionId: serializeHash(group.groupRevisionId),\n          name: group.latestName,\n          members: group.members.map((id: Buffer) => serializeHash(id)),\n          createdAt: timestampToDate(group.created),\n          creator: serializeHash(group.creator),\n          messages:\n            groupMessagesOutput.messagesByGroup[serializeHash(group.groupId)],\n          pinnedMessages: [],\n          avatar: group.avatar,\n        })\n      );\n\n      const groupMembers: Profile[] = latestData.memberProfiles.map(\n        (agentProfile: any): Profile => {\n          return {\n            id: serializeHash(agentProfile.agentPubKey),\n            username: agentProfile.profile.nickname,\n            fields: agentProfile.profile.fields.avatar\n              ? {\n                  avatar: agentProfile.profile.fields.avatar,\n                }\n              : {},\n          };\n        }\n      );\n\n      // console.log(\"latest groups\", groups);\n      // console.log(\"latest group messages\", groupMessagesOutput);\n      // console.log(\"latest group members\", groupMembers);\n\n      // let groups: GroupConversation[] = groups;\n      // let groupMessagesOutput: GroupMessagesOutput = action.groupMessagesOutput;\n\n      let conversations = getState().groups.conversations;\n      groups.forEach((group: GroupConversation) => {\n        conversations[group.originalGroupId] = group;\n      });\n\n      let messages = getState().groups.messages;\n      messages = {\n        ...messages,\n        ...groupMessagesOutput.groupMessagesContents,\n      };\n\n      let members = getState().groups.members;\n      groupMembers.forEach((member: Profile) => {\n        members[member.id] = member;\n      });\n\n      dispatch<SetLatestGroupState>({\n        type: SET_LATEST_GROUP_STATE,\n        messages,\n        conversations,\n        members,\n      });\n\n      const contactsState = { ...getState().contacts.contacts };\n      const profile = { ...getState().profile };\n      const profileList = {\n        ...contactsState,\n        [profile.id!]: {\n          id: profile.id!,\n          username: profile.username!,\n          fields: profile.fields,\n        },\n      };\n      const toDispatch = transformZomeDataToUIData(\n        latestData.latestP2pMessages,\n        profileList\n      );\n      // console.log(\"latest p2p messages\", toDispatch);\n      dispatch(setMessages(toDispatch));\n\n      return null;\n    } catch (e) {\n      dispatch(\n        pushError(\"TOAST\", {}, { id: \"redux.err.commons-get-latest-data\" })\n      );\n    }\n  };\n","import {\n  IonButton,\n  IonContent,\n  IonImg,\n  IonPage,\n  IonRouterLink,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory } from \"react-router\";\nimport styles from \"./style.module.css\";\n\nconst Landing: React.FC = () => {\n  const history = useHistory();\n  return (\n    <IonPage>\n      <IonContent fullscreen>\n        <div className={styles.landing}>\n          <IonImg src=\"assets/icon/kizuna_logo.png\" className={styles.logo} />\n          <div className={styles.actions}>\n            {/* <IonButton href=\"/login\" className=\"ion-margin-bottom\">\n              <FormattedMessage id=\"app.landing.login\" />\n            </IonButton> */}\n            <IonRouterLink>\n              {/* <IonText className={styles[\"register-label\"]}>\n                <FormattedMessage id=\"app.landing.register\" />\n              </IonText> */}\n              <IonButton\n                onClick={() => history.push({ pathname: `/register` })}\n                className=\"ion-margin-bottom\"\n              >\n                <FormattedMessage id=\"app.landing.register\" />\n              </IonButton>\n            </IonRouterLink>\n          </div>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Landing;\n","import {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonInput,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonToolbar,\n} from \"@ionic/react\";\nimport { arrowBackSharp } from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useHistory } from \"react-router\";\nimport styles from \"./style.module.css\";\n\nconst Login: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const intl = useIntl();\n  const history = useHistory();\n\n  const handleOnClick = () => {};\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar className={styles.toolbar}>\n          <IonButtons slot=\"start\">\n            <IonButton\n              onClick={() => history.push({ pathname: `/` })}\n              className=\"ion-no-padding\"\n            >\n              <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div className={styles.login}>\n          <div className={styles.form}>\n            <div>\n              <IonLabel className={styles.label}>\n                {intl.formatMessage({ id: \"app.login.username-label\" })}\n              </IonLabel>\n              <IonInput\n                value={username}\n                onIonChange={(e) => setUsername(e.detail.value!)}\n                placeholder={intl.formatMessage({\n                  id: \"app.login.username-placeholder\",\n                })}\n              />\n            </div>\n          </div>\n          <IonButton onClick={handleOnClick}>\n            {intl.formatMessage({ id: \"app.login.login\" })}\n          </IonButton>\n        </div>\n      </IonContent>\n      <IonLoading isOpen={false} />\n    </IonPage>\n  );\n};\n\nexport default Login;\n","import { IonInput, IonItemGroup, IonLabel } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./style.module.css\";\n\n// interface Props {\n//   error?: string;\n//   value: any;\n//   onIonChange: (e: CustomEvent) => any;\n//   placeho\n// }\n\nconst HomeInput: React.FC<any> = ({ error, className, ...props }) => {\n  const [withError, setWithError] = useState(false);\n  useEffect(() => {\n    setWithError(error ? true : false);\n  }, [error]);\n  return (\n    <IonItemGroup>\n      <IonInput\n        className={`${styles.input} ${\n          withError ? styles[\"error-input\"] : \"\"\n        } ${className}`}\n        {...props}\n      ></IonInput>\n      <div className={styles[\"error-container\"]}>\n        {withError ? (\n          <IonLabel color=\"danger\" className={`ion-text-wrap ${styles.error}`}>\n            {error}\n          </IonLabel>\n        ) : null}\n      </div>\n    </IonItemGroup>\n  );\n};\n\nexport default HomeInput;\n","import { IonButton, IonButtons, IonLabel } from \"@ionic/react\";\nimport { personCircleOutline } from \"ionicons/icons\";\nimport React, { useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  onChange(binary: Uint8Array): any;\n  imageRef: React.RefObject<HTMLImageElement>;\n}\n\nconst UpdateAvatar: React.FC<Props> = ({ onChange, imageRef }) => {\n  const intl = useIntl();\n\n  const [binary, setBinary] = useState<Uint8Array | null>(null);\n  const file = useRef<HTMLInputElement>(null);\n\n  const onAvatarChange = () => {\n    file.current!.value = \"\";\n    file.current?.click();\n  };\n\n  const handleOnFileChange = () => {\n    Array.from(file.current ? file.current.files! : new FileList()).forEach(\n      (file) => {\n        file.arrayBuffer().then((_arrBuffer) => {\n          const reader = new FileReader();\n          const encoder = new TextEncoder();\n\n          reader.readAsDataURL(file);\n          reader.onload = (readerEvent) => {\n            const encoded = encoder.encode(\n              readerEvent.target?.result as string\n            );\n\n            setBinary(encoded);\n            onChange(encoded);\n          };\n        });\n      }\n    );\n  };\n\n  return (\n    <div className={styles[\"profile-picture\"]}>\n      <input\n        ref={file}\n        accept=\"image/png, image/jpeg\"\n        type=\"file\"\n        hidden\n        onChange={handleOnFileChange}\n      />\n      <IonLabel className={styles.label}>\n        {intl.formatMessage({\n          id: \"app.register.avatar-label\",\n        })}\n      </IonLabel>\n      <div className={styles[\"profile-picture-content\"]}>\n        <div className={styles[\"avatar-container\"]}>\n          <img\n            alt=\"avatar\"\n            ref={imageRef}\n            src={personCircleOutline}\n            className={`${styles.avatar} ${binary ? \"\" : styles.default}`}\n          />\n        </div>\n        <div className=\"ion-padding-start\">\n          <IonButtons>\n            <IonButton\n              onClick={onAvatarChange}\n              fill=\"solid\"\n              type=\"button\"\n              color=\"primary\"\n              className={styles[\"avatar-button\"]}\n            >\n              <IonLabel className={styles[\"button-label\"]}>\n                {intl.formatMessage({\n                  id: \"app.register.button-avatar-label\",\n                })}\n              </IonLabel>\n            </IonButton>\n          </IonButtons>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateAvatar;\n","import {\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonLabel,\n  IonLoading,\n  IonPage,\n  IonToolbar,\n  useIonModal,\n} from \"@ionic/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport ImageCropper from \"../../components/ImageCropper\";\nimport HomeInput from \"../../components/Input/HomeInput\";\nimport UpdateAvatar from \"../../components/UpdateAvatar\";\nimport { createProfile } from \"../../redux/profile/actions\";\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport { isUsernameFormatValid } from \"../../utils/regex\";\nimport styles from \"./style.module.css\";\n\nconst Register: React.FC = () => {\n  const [nickname, setNickname] = useState<string>(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const [isDisabled, setIsDisabled] = useState<boolean>(true);\n  const [loading, setLoading] = useState<boolean>(false);\n  const dispatch = useAppDispatch();\n\n  const [binary, setBinary] = useState<Uint8Array | null>(null);\n  const profilePicture = useRef<HTMLImageElement>(null);\n\n  const intl = useIntl();\n\n  const handleOnChange = (e: CustomEvent) => {\n    setNickname(e.detail.value!);\n\n    setError(\n      (e.detail.value! as string).includes(\" \")\n        ? intl.formatMessage({\n            id: \"app.register.error-username-with-space\",\n          })\n        : isUsernameFormatValid(e.detail.value!) && e.detail!.value!.length >= 3\n        ? null\n        : intl.formatMessage({\n            id: \"app.register.error-invalid-username\",\n          })\n    );\n  };\n\n  useEffect(() => {\n    if (error || nickname.length === 0) setIsDisabled(true);\n    else setIsDisabled(false);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, nickname, binary]);\n\n  const handleOnSubmit = () => {\n    setLoading(true);\n    dispatch(\n      createProfile(\n        nickname,\n        !profilePicture.current!.src.includes(\"svg\") ? binary : null\n      )\n    ).then((res: any) => {\n      if (!res) setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (binary) present({ cssClass: `cropper ${styles.modal}` });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [binary]);\n\n  const handleOnFileChange = (binary: Uint8Array) => {\n    setBinary(binary);\n  };\n\n  const onDismiss = () => {\n    // setSrc(null);\n    dismiss();\n  };\n\n  const decodeSrc = () => {\n    const decoder = new TextDecoder();\n\n    return binary ? decoder.decode(binary) : \"\";\n  };\n\n  const [present, dismiss] = useIonModal(ImageCropper, {\n    src: decodeSrc(),\n    prevPath: \"/register\",\n    dismiss: onDismiss,\n    onComplete: (cropperBinary: Uint8Array) => {\n      if (cropperBinary) {\n        const blob = new Blob([cropperBinary!], { type: \"image/jpeg\" });\n        const url = URL.createObjectURL(blob);\n\n        profilePicture.current!.src = url;\n        setBinary(cropperBinary);\n      }\n    },\n  });\n\n  const handleOnKeyDown = (event: React.KeyboardEvent) =>\n    event.key === \"Enter\" && !event.shiftKey && !error\n      ? handleOnSubmit()\n      : null;\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar className={styles.toolbar}>\n          <IonButtons slot=\"start\">\n            <IonBackButton defaultHref=\"/\" />\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <div className={styles.register}>\n          <div className={styles.form}>\n            <UpdateAvatar\n              imageRef={profilePicture}\n              onChange={handleOnFileChange}\n            />\n            <div>\n              <IonLabel className={styles.label}>\n                {intl.formatMessage({\n                  id: \"app.register.username-label\",\n                })}\n              </IonLabel>\n\n              <HomeInput\n                value={nickname}\n                onIonChange={handleOnChange}\n                onKeyPress={(event: React.KeyboardEvent) =>\n                  handleOnKeyDown(event)\n                }\n                placeholder={intl.formatMessage({\n                  id: \"app.register.username-placeholder\",\n                })}\n                error={error}\n                debounce={600}\n              />\n            </div>\n          </div>\n          <IonButton onClick={handleOnSubmit} disabled={isDisabled}>\n            {intl.formatMessage({\n              id: \"app.register.register\",\n            })}\n          </IonButton>\n        </div>\n        <IonLoading isOpen={loading} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Register;\n","// Original: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\nexport const isUsernameFormatValid = (username: string): boolean =>\n  /^[a-zA-Z0-9_](?!.*?[._]{2})[a-zA-Z0-9_.]{2,15}$/.test(username);\n","import { IonReactRouter } from \"@ionic/react-router\";\nimport React from \"react\";\nimport { Route } from \"react-router\";\nimport Landing from \"../Landing\";\nimport Login from \"../Login\";\nimport Register from \"../Register\";\n\nconst Unauthenticated: React.FC = () => (\n  <IonReactRouter>\n    <Route path=\"/\" component={Landing} />\n    <Route path=\"/register\" component={Register} />\n    <Route path=\"/login\" component={Login} />\n  </IonReactRouter>\n);\n\nexport default Unauthenticated;\n","import { IonIcon, IonText } from \"@ionic/react\";\nimport { sadOutline } from \"ionicons/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport Spinner from \"../../components/Spinner\";\nimport { getMyProfile } from \"../../redux/profile/actions\";\nimport { RootState } from \"../../redux/types\";\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport Authenticated from \"../Authenticated\";\nimport Unauthenticated from \"../Unauthenticated\";\nimport styles from \"./style.module.css\";\n\nconst Auth: React.FC = () => {\n  const intl = useIntl();\n  const { username } = useSelector((state: RootState) => state.profile);\n  const [loading, setLoading] = useState(true);\n  const [err, setErr] = useState(false);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getMyProfile()).then((bool: boolean) => {\n      if (!bool) setErr(true);\n      setLoading(false);\n    });\n  }, [dispatch]);\n\n  const renderErrPage = () => (\n    <div className={styles[\"err\"]}>\n      <IonIcon icon={sadOutline} />\n      <IonText>{intl.formatMessage({ id: \"app.auth.err\" })}</IonText>\n    </div>\n  );\n\n  return loading ? (\n    <Spinner />\n  ) : username !== null ? (\n    <Authenticated />\n  ) : !err ? (\n    <Unauthenticated />\n  ) : (\n    renderErrPage()\n  );\n  // return <Playground />;\n};\n\nexport default Auth;\n","/* Core CSS required for Ionic components to work properly */\nimport { setupConfig } from \"@ionic/react\";\nimport \"@ionic/react/css/core.css\";\nimport \"@ionic/react/css/display.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/float-elements.css\";\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/typography.css\";\nimport React from \"react\";\n/* Theme variables */\nimport \"../theme/variables.css\";\n\nimport Auth from \"./Auth\";\nsetupConfig({ mode: \"md\" });\nconst App: React.FC = () => <Auth />;\n\nexport default App;\n","import { ToastOptions } from \"@ionic/core\";\nimport React, { useEffect } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { shiftError } from \"../redux/error/actions\";\nimport { RootState } from \"../redux/types\";\nimport { useAppDispatch } from \"../utils/helpers\";\nimport { useToast } from \"./ToastContainer/context\";\n\nconst ErrorHandler: React.FC = ({ children }) => {\n  const errors = useSelector((state: RootState) => state.error.errors);\n  const { showErrorToast } = useToast();\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (errors.length > 0) {\n      const error = errors[0];\n      const intlMessage = error.intl\n        ? {\n            message: intl.formatMessage(\n              { id: error.intl.id },\n              error.intl.value\n            ),\n          }\n        : {};\n\n      showErrorToast({ ...(error.options as ToastOptions), ...intlMessage });\n      dispatch(shiftError());\n    }\n  }, [errors, dispatch, intl, showErrorToast]);\n  return <>{children}</>;\n};\n\nexport default ErrorHandler;\n","import { IonButton, IonPage, IonText } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport { setLanguage } from \"../../redux/language/actions\";\nimport { Languages } from \"../../redux/language/types\";\nimport { useAppDispatch } from \"../../utils/helpers\";\nimport styles from \"./style.module.css\";\n\nconst LanguageSelector: React.FC = () => {\n  const [selected, setSelected] = useState(0);\n  const dispatch = useAppDispatch();\n\n  const languages: Languages[] = [\n    { language: \"English\", code: \"en\" },\n    { language: \"Japanese\", code: \"jp\" },\n  ];\n\n  const onSubmit = () => {\n    dispatch(setLanguage(languages[selected].code));\n  };\n  return (\n    <IonPage>\n      <div className={styles.page}>\n        <div className={styles[\"language-container\"]}>\n          {languages.map(({ language }, i) => (\n            <IonText\n              key={language}\n              className={`${styles.language}${\n                selected === i ? ` ${styles.selected}` : \"\"\n              }`}\n              onClick={() => setSelected(i)}\n            >\n              <p>{language}</p>\n            </IonText>\n          ))}\n        </div>\n        <div className={styles[\"button-container\"]}>\n          <IonButton onClick={onSubmit} className={`${styles.button}`}>\n            Select\n          </IonButton>\n        </div>\n      </div>\n    </IonPage>\n  );\n};\n\nexport default LanguageSelector;\n","import EN_US from \"./en-US.json\";\nimport JP from \"./jp.json\";\n\nconst languages = {\n  en: EN_US,\n  jp: JP,\n};\n\nexport default languages;\n","import React from \"react\";\nimport { IntlProvider } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport LanguageSelector from \"../app/LanguageSelector\";\nimport messages from \"../lang\";\nimport { setLanguage } from \"../redux/language/actions\";\nimport { RootState } from \"../redux/types\";\nimport { useAppDispatch } from \"../utils/helpers\";\n\nconst IntlContainer: React.FC = ({ children }) => {\n  const dispatch = useAppDispatch();\n  const language = useSelector((state: RootState) => {\n    const reducerLanguage = state.language.language;\n    if (reducerLanguage) return reducerLanguage;\n\n    const storageLanguage = localStorage.getItem(\"language\");\n    if (storageLanguage) {\n      dispatch(setLanguage(storageLanguage));\n    }\n\n    return null;\n  });\n\n  return language ? (\n    <IntlProvider messages={messages[language]} defaultLocale=\"en\" locale=\"en\">\n      {children}\n    </IntlProvider>\n  ) : (\n    <LanguageSelector />\n  );\n};\n\nexport default IntlContainer;\n","import { IonApp } from \"@ionic/react\";\nimport React from \"react\";\n\nconst IonicContainer: React.FC = ({ children }) => <IonApp>{children}</IonApp>;\n\nexport default IonicContainer;\n","import { IonReactRouter } from \"@ionic/react-router\";\nimport React from \"react\";\n\nconst RouterContainer: React.FC = ({ children }) => (\n  <IonReactRouter>{children}</IonReactRouter>\n);\n\nexport default RouterContainer;\n","import { IonicSafeString, ToastOptions } from \"@ionic/core\";\nimport { IonToast } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/types\";\nimport { ToastContext } from \"./context\";\n\nconst ToastContainer: React.FC = ({ children }) => {\n  const [isShowing, setIsShowing] = useState(false);\n  const [shouldShow, setShouldShow] = useState(false);\n  const language = useSelector((state: RootState) => state.language.language);\n  const [props, setProps] = useState({});\n  const showToast = (props: ToastOptions) => {\n    setProps(props);\n    setShouldShow(true);\n  };\n\n  useEffect(() => {\n    setIsShowing(shouldShow);\n  }, [shouldShow]);\n\n  const dismissToast = () => {\n    setShouldShow(false);\n    setIsShowing(false);\n  };\n\n  useEffect(() => {\n    if (!shouldShow) setProps({});\n  }, [shouldShow]);\n\n  function isString(string: any): string is string {\n    return string.split !== undefined;\n  }\n\n  const showErrorToast = (props: ToastOptions) => {\n    if (language === \"en\") {\n      const message = props?.message;\n      if (message) {\n        const duration = isString(message)\n          ? (message as string).split(\" \").length * 160\n          : (message as IonicSafeString).value.split(\" \").length * 160;\n        setProps({ color: \"danger\", duration, ...props });\n      }\n    } else if (language === \"jp\") {\n      const message = props?.message;\n      if (message) {\n        const duration = isString(message)\n          ? [...(message as string)].length * 100\n          : [...(message as IonicSafeString).value].length * 100;\n        setProps({ color: \"danger\", duration, ...props });\n      }\n    } else setProps({ color: \"danger\", ...props });\n    setShouldShow(true);\n  };\n\n  return (\n    <ToastContext.Provider value={{ showToast, dismissToast, showErrorToast }}>\n      <IonToast\n        isOpen={isShowing}\n        onDidDismiss={dismissToast}\n        duration={1500}\n        {...props}\n      />\n\n      {children}\n    </ToastContext.Provider>\n  );\n};\n\nexport default ToastContainer;\n","import React from \"react\";\nimport ErrorHandler from \"./ErrorHandlerContainer\";\nimport IntlContainer from \"./IntlContainer\";\nimport IonicContainer from \"./IonicContainer\";\nimport ReduxContainer from \"./ReduxContainer\";\nimport RouterContainer from \"./RouterContainer\";\nimport ToastContainer from \"./ToastContainer\";\n\nconst Container: React.FC = ({ children }) => {\n  return (\n    <ReduxContainer>\n      <IonicContainer>\n        <RouterContainer>\n          <IntlContainer>\n            <ToastContainer>\n              <ErrorHandler>{children}</ErrorHandler>\n            </ToastContainer>\n          </IntlContainer>\n        </RouterContainer>\n      </IonicContainer>\n    </ReduxContainer>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport Container from \"./containers\";\nimport \"./theme/global.css\";\n\nReactDOM.render(\n  <Container>\n    <App />\n  </Container>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}